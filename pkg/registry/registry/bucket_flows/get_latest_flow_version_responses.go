// Code generated by go-swagger; DO NOT EDIT.

package bucket_flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetLatestFlowVersionReader is a Reader for the GetLatestFlowVersion structure.
type GetLatestFlowVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLatestFlowVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLatestFlowVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLatestFlowVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLatestFlowVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLatestFlowVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetLatestFlowVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLatestFlowVersionOK creates a GetLatestFlowVersionOK with default headers values
func NewGetLatestFlowVersionOK() *GetLatestFlowVersionOK {
	return &GetLatestFlowVersionOK{}
}

/* GetLatestFlowVersionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLatestFlowVersionOK struct {
	Payload *models.VersionedFlowSnapshot
}

func (o *GetLatestFlowVersionOK) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions/latest][%d] getLatestFlowVersionOK  %+v", 200, o.Payload)
}
func (o *GetLatestFlowVersionOK) GetPayload() *models.VersionedFlowSnapshot {
	return o.Payload
}

func (o *GetLatestFlowVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowSnapshot)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestFlowVersionUnauthorized creates a GetLatestFlowVersionUnauthorized with default headers values
func NewGetLatestFlowVersionUnauthorized() *GetLatestFlowVersionUnauthorized {
	return &GetLatestFlowVersionUnauthorized{}
}

/* GetLatestFlowVersionUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetLatestFlowVersionUnauthorized struct {
}

func (o *GetLatestFlowVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions/latest][%d] getLatestFlowVersionUnauthorized ", 401)
}

func (o *GetLatestFlowVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestFlowVersionForbidden creates a GetLatestFlowVersionForbidden with default headers values
func NewGetLatestFlowVersionForbidden() *GetLatestFlowVersionForbidden {
	return &GetLatestFlowVersionForbidden{}
}

/* GetLatestFlowVersionForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetLatestFlowVersionForbidden struct {
}

func (o *GetLatestFlowVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions/latest][%d] getLatestFlowVersionForbidden ", 403)
}

func (o *GetLatestFlowVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestFlowVersionNotFound creates a GetLatestFlowVersionNotFound with default headers values
func NewGetLatestFlowVersionNotFound() *GetLatestFlowVersionNotFound {
	return &GetLatestFlowVersionNotFound{}
}

/* GetLatestFlowVersionNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetLatestFlowVersionNotFound struct {
}

func (o *GetLatestFlowVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions/latest][%d] getLatestFlowVersionNotFound ", 404)
}

func (o *GetLatestFlowVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestFlowVersionConflict creates a GetLatestFlowVersionConflict with default headers values
func NewGetLatestFlowVersionConflict() *GetLatestFlowVersionConflict {
	return &GetLatestFlowVersionConflict{}
}

/* GetLatestFlowVersionConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetLatestFlowVersionConflict struct {
}

func (o *GetLatestFlowVersionConflict) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions/latest][%d] getLatestFlowVersionConflict ", 409)
}

func (o *GetLatestFlowVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
