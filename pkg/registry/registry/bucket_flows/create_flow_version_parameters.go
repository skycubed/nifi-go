// Code generated by go-swagger; DO NOT EDIT.

package bucket_flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// NewCreateFlowVersionParams creates a new CreateFlowVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateFlowVersionParams() *CreateFlowVersionParams {
	return &CreateFlowVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateFlowVersionParamsWithTimeout creates a new CreateFlowVersionParams object
// with the ability to set a timeout on a request.
func NewCreateFlowVersionParamsWithTimeout(timeout time.Duration) *CreateFlowVersionParams {
	return &CreateFlowVersionParams{
		timeout: timeout,
	}
}

// NewCreateFlowVersionParamsWithContext creates a new CreateFlowVersionParams object
// with the ability to set a context for a request.
func NewCreateFlowVersionParamsWithContext(ctx context.Context) *CreateFlowVersionParams {
	return &CreateFlowVersionParams{
		Context: ctx,
	}
}

// NewCreateFlowVersionParamsWithHTTPClient creates a new CreateFlowVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateFlowVersionParamsWithHTTPClient(client *http.Client) *CreateFlowVersionParams {
	return &CreateFlowVersionParams{
		HTTPClient: client,
	}
}

/*
CreateFlowVersionParams contains all the parameters to send to the API endpoint

	for the create flow version operation.

	Typically these are written to a http.Request.
*/
type CreateFlowVersionParams struct {

	/* Body.

	   The new versioned flow snapshot.
	*/
	Body *models.VersionedFlowSnapshot

	/* BucketID.

	   The bucket identifier
	*/
	BucketID string

	/* FlowID.

	   The flow identifier
	*/
	FlowID string

	/* PreserveSourceProperties.

	   Whether source properties like author should be kept
	*/
	PreserveSourceProperties *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create flow version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateFlowVersionParams) WithDefaults() *CreateFlowVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create flow version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateFlowVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create flow version params
func (o *CreateFlowVersionParams) WithTimeout(timeout time.Duration) *CreateFlowVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create flow version params
func (o *CreateFlowVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create flow version params
func (o *CreateFlowVersionParams) WithContext(ctx context.Context) *CreateFlowVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create flow version params
func (o *CreateFlowVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create flow version params
func (o *CreateFlowVersionParams) WithHTTPClient(client *http.Client) *CreateFlowVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create flow version params
func (o *CreateFlowVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create flow version params
func (o *CreateFlowVersionParams) WithBody(body *models.VersionedFlowSnapshot) *CreateFlowVersionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create flow version params
func (o *CreateFlowVersionParams) SetBody(body *models.VersionedFlowSnapshot) {
	o.Body = body
}

// WithBucketID adds the bucketID to the create flow version params
func (o *CreateFlowVersionParams) WithBucketID(bucketID string) *CreateFlowVersionParams {
	o.SetBucketID(bucketID)
	return o
}

// SetBucketID adds the bucketId to the create flow version params
func (o *CreateFlowVersionParams) SetBucketID(bucketID string) {
	o.BucketID = bucketID
}

// WithFlowID adds the flowID to the create flow version params
func (o *CreateFlowVersionParams) WithFlowID(flowID string) *CreateFlowVersionParams {
	o.SetFlowID(flowID)
	return o
}

// SetFlowID adds the flowId to the create flow version params
func (o *CreateFlowVersionParams) SetFlowID(flowID string) {
	o.FlowID = flowID
}

// WithPreserveSourceProperties adds the preserveSourceProperties to the create flow version params
func (o *CreateFlowVersionParams) WithPreserveSourceProperties(preserveSourceProperties *bool) *CreateFlowVersionParams {
	o.SetPreserveSourceProperties(preserveSourceProperties)
	return o
}

// SetPreserveSourceProperties adds the preserveSourceProperties to the create flow version params
func (o *CreateFlowVersionParams) SetPreserveSourceProperties(preserveSourceProperties *bool) {
	o.PreserveSourceProperties = preserveSourceProperties
}

// WriteToRequest writes these params to a swagger request
func (o *CreateFlowVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param bucketId
	if err := r.SetPathParam("bucketId", o.BucketID); err != nil {
		return err
	}

	// path param flowId
	if err := r.SetPathParam("flowId", o.FlowID); err != nil {
		return err
	}

	if o.PreserveSourceProperties != nil {

		// query param preserveSourceProperties
		var qrPreserveSourceProperties bool

		if o.PreserveSourceProperties != nil {
			qrPreserveSourceProperties = *o.PreserveSourceProperties
		}
		qPreserveSourceProperties := swag.FormatBool(qrPreserveSourceProperties)
		if qPreserveSourceProperties != "" {

			if err := r.SetQueryParam("preserveSourceProperties", qPreserveSourceProperties); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
