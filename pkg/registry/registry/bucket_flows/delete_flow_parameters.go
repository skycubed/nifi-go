// Code generated by go-swagger; DO NOT EDIT.

package bucket_flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteFlowParams creates a new DeleteFlowParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteFlowParams() *DeleteFlowParams {
	return &DeleteFlowParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteFlowParamsWithTimeout creates a new DeleteFlowParams object
// with the ability to set a timeout on a request.
func NewDeleteFlowParamsWithTimeout(timeout time.Duration) *DeleteFlowParams {
	return &DeleteFlowParams{
		timeout: timeout,
	}
}

// NewDeleteFlowParamsWithContext creates a new DeleteFlowParams object
// with the ability to set a context for a request.
func NewDeleteFlowParamsWithContext(ctx context.Context) *DeleteFlowParams {
	return &DeleteFlowParams{
		Context: ctx,
	}
}

// NewDeleteFlowParamsWithHTTPClient creates a new DeleteFlowParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteFlowParamsWithHTTPClient(client *http.Client) *DeleteFlowParams {
	return &DeleteFlowParams{
		HTTPClient: client,
	}
}

/*
DeleteFlowParams contains all the parameters to send to the API endpoint

	for the delete flow operation.

	Typically these are written to a http.Request.
*/
type DeleteFlowParams struct {

	/* BucketID.

	   The bucket identifier
	*/
	BucketID string

	/* ClientID.

	   If the client id is not specified, new one will be generated. This value (whether specified or generated) is included in the response.
	*/
	ClientID *string

	/* FlowID.

	   The flow identifier
	*/
	FlowID string

	/* Version.

	   The version is used to verify the client is working with the latest version of the entity.
	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete flow params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteFlowParams) WithDefaults() *DeleteFlowParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete flow params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteFlowParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete flow params
func (o *DeleteFlowParams) WithTimeout(timeout time.Duration) *DeleteFlowParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete flow params
func (o *DeleteFlowParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete flow params
func (o *DeleteFlowParams) WithContext(ctx context.Context) *DeleteFlowParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete flow params
func (o *DeleteFlowParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete flow params
func (o *DeleteFlowParams) WithHTTPClient(client *http.Client) *DeleteFlowParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete flow params
func (o *DeleteFlowParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBucketID adds the bucketID to the delete flow params
func (o *DeleteFlowParams) WithBucketID(bucketID string) *DeleteFlowParams {
	o.SetBucketID(bucketID)
	return o
}

// SetBucketID adds the bucketId to the delete flow params
func (o *DeleteFlowParams) SetBucketID(bucketID string) {
	o.BucketID = bucketID
}

// WithClientID adds the clientID to the delete flow params
func (o *DeleteFlowParams) WithClientID(clientID *string) *DeleteFlowParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the delete flow params
func (o *DeleteFlowParams) SetClientID(clientID *string) {
	o.ClientID = clientID
}

// WithFlowID adds the flowID to the delete flow params
func (o *DeleteFlowParams) WithFlowID(flowID string) *DeleteFlowParams {
	o.SetFlowID(flowID)
	return o
}

// SetFlowID adds the flowId to the delete flow params
func (o *DeleteFlowParams) SetFlowID(flowID string) {
	o.FlowID = flowID
}

// WithVersion adds the version to the delete flow params
func (o *DeleteFlowParams) WithVersion(version string) *DeleteFlowParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the delete flow params
func (o *DeleteFlowParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteFlowParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param bucketId
	if err := r.SetPathParam("bucketId", o.BucketID); err != nil {
		return err
	}

	if o.ClientID != nil {

		// query param clientId
		var qrClientID string

		if o.ClientID != nil {
			qrClientID = *o.ClientID
		}
		qClientID := qrClientID
		if qClientID != "" {

			if err := r.SetQueryParam("clientId", qClientID); err != nil {
				return err
			}
		}
	}

	// path param flowId
	if err := r.SetPathParam("flowId", o.FlowID); err != nil {
		return err
	}

	// query param version
	qrVersion := o.Version
	qVersion := qrVersion
	if qVersion != "" {

		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
