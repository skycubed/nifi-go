// Code generated by go-swagger; DO NOT EDIT.

package bucket_flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetFlowVersionsReader is a Reader for the GetFlowVersions structure.
type GetFlowVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFlowVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowVersionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowVersionsOK creates a GetFlowVersionsOK with default headers values
func NewGetFlowVersionsOK() *GetFlowVersionsOK {
	return &GetFlowVersionsOK{}
}

/*
GetFlowVersionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowVersionsOK struct {
	Payload []*models.VersionedFlowSnapshotMetadata
}

// IsSuccess returns true when this get flow versions o k response has a 2xx status code
func (o *GetFlowVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow versions o k response has a 3xx status code
func (o *GetFlowVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions o k response has a 4xx status code
func (o *GetFlowVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow versions o k response has a 5xx status code
func (o *GetFlowVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions o k response a status code equal to that given
func (o *GetFlowVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowVersionsOK) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsOK  %+v", 200, o.Payload)
}

func (o *GetFlowVersionsOK) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsOK  %+v", 200, o.Payload)
}

func (o *GetFlowVersionsOK) GetPayload() []*models.VersionedFlowSnapshotMetadata {
	return o.Payload
}

func (o *GetFlowVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowVersionsUnauthorized creates a GetFlowVersionsUnauthorized with default headers values
func NewGetFlowVersionsUnauthorized() *GetFlowVersionsUnauthorized {
	return &GetFlowVersionsUnauthorized{}
}

/*
GetFlowVersionsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowVersionsUnauthorized struct {
}

// IsSuccess returns true when this get flow versions unauthorized response has a 2xx status code
func (o *GetFlowVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions unauthorized response has a 3xx status code
func (o *GetFlowVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions unauthorized response has a 4xx status code
func (o *GetFlowVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions unauthorized response has a 5xx status code
func (o *GetFlowVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions unauthorized response a status code equal to that given
func (o *GetFlowVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsUnauthorized ", 401)
}

func (o *GetFlowVersionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsUnauthorized ", 401)
}

func (o *GetFlowVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowVersionsForbidden creates a GetFlowVersionsForbidden with default headers values
func NewGetFlowVersionsForbidden() *GetFlowVersionsForbidden {
	return &GetFlowVersionsForbidden{}
}

/*
GetFlowVersionsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowVersionsForbidden struct {
}

// IsSuccess returns true when this get flow versions forbidden response has a 2xx status code
func (o *GetFlowVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions forbidden response has a 3xx status code
func (o *GetFlowVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions forbidden response has a 4xx status code
func (o *GetFlowVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions forbidden response has a 5xx status code
func (o *GetFlowVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions forbidden response a status code equal to that given
func (o *GetFlowVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsForbidden ", 403)
}

func (o *GetFlowVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsForbidden ", 403)
}

func (o *GetFlowVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowVersionsNotFound creates a GetFlowVersionsNotFound with default headers values
func NewGetFlowVersionsNotFound() *GetFlowVersionsNotFound {
	return &GetFlowVersionsNotFound{}
}

/*
GetFlowVersionsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowVersionsNotFound struct {
}

// IsSuccess returns true when this get flow versions not found response has a 2xx status code
func (o *GetFlowVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions not found response has a 3xx status code
func (o *GetFlowVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions not found response has a 4xx status code
func (o *GetFlowVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions not found response has a 5xx status code
func (o *GetFlowVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions not found response a status code equal to that given
func (o *GetFlowVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsNotFound ", 404)
}

func (o *GetFlowVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsNotFound ", 404)
}

func (o *GetFlowVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowVersionsConflict creates a GetFlowVersionsConflict with default headers values
func NewGetFlowVersionsConflict() *GetFlowVersionsConflict {
	return &GetFlowVersionsConflict{}
}

/*
GetFlowVersionsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetFlowVersionsConflict struct {
}

// IsSuccess returns true when this get flow versions conflict response has a 2xx status code
func (o *GetFlowVersionsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow versions conflict response has a 3xx status code
func (o *GetFlowVersionsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow versions conflict response has a 4xx status code
func (o *GetFlowVersionsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow versions conflict response has a 5xx status code
func (o *GetFlowVersionsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow versions conflict response a status code equal to that given
func (o *GetFlowVersionsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetFlowVersionsConflict) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsConflict ", 409)
}

func (o *GetFlowVersionsConflict) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows/{flowId}/versions][%d] getFlowVersionsConflict ", 409)
}

func (o *GetFlowVersionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
