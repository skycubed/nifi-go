// Code generated by go-swagger; DO NOT EDIT.

package bucket_flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetFlowsReader is a Reader for the GetFlows structure.
type GetFlowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /buckets/{bucketId}/flows] getFlows", response, response.Code())
	}
}

// NewGetFlowsOK creates a GetFlowsOK with default headers values
func NewGetFlowsOK() *GetFlowsOK {
	return &GetFlowsOK{}
}

/*
GetFlowsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowsOK struct {
	Payload []*models.VersionedFlow
}

// IsSuccess returns true when this get flows o k response has a 2xx status code
func (o *GetFlowsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flows o k response has a 3xx status code
func (o *GetFlowsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows o k response has a 4xx status code
func (o *GetFlowsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flows o k response has a 5xx status code
func (o *GetFlowsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows o k response a status code equal to that given
func (o *GetFlowsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get flows o k response
func (o *GetFlowsOK) Code() int {
	return 200
}

func (o *GetFlowsOK) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsOK) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsOK  %+v", 200, o.Payload)
}

func (o *GetFlowsOK) GetPayload() []*models.VersionedFlow {
	return o.Payload
}

func (o *GetFlowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsBadRequest creates a GetFlowsBadRequest with default headers values
func NewGetFlowsBadRequest() *GetFlowsBadRequest {
	return &GetFlowsBadRequest{}
}

/*
GetFlowsBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowsBadRequest struct {
}

// IsSuccess returns true when this get flows bad request response has a 2xx status code
func (o *GetFlowsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows bad request response has a 3xx status code
func (o *GetFlowsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows bad request response has a 4xx status code
func (o *GetFlowsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows bad request response has a 5xx status code
func (o *GetFlowsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows bad request response a status code equal to that given
func (o *GetFlowsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get flows bad request response
func (o *GetFlowsBadRequest) Code() int {
	return 400
}

func (o *GetFlowsBadRequest) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsBadRequest ", 400)
}

func (o *GetFlowsBadRequest) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsBadRequest ", 400)
}

func (o *GetFlowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowsUnauthorized creates a GetFlowsUnauthorized with default headers values
func NewGetFlowsUnauthorized() *GetFlowsUnauthorized {
	return &GetFlowsUnauthorized{}
}

/*
GetFlowsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowsUnauthorized struct {
}

// IsSuccess returns true when this get flows unauthorized response has a 2xx status code
func (o *GetFlowsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows unauthorized response has a 3xx status code
func (o *GetFlowsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows unauthorized response has a 4xx status code
func (o *GetFlowsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows unauthorized response has a 5xx status code
func (o *GetFlowsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows unauthorized response a status code equal to that given
func (o *GetFlowsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get flows unauthorized response
func (o *GetFlowsUnauthorized) Code() int {
	return 401
}

func (o *GetFlowsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsUnauthorized ", 401)
}

func (o *GetFlowsUnauthorized) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsUnauthorized ", 401)
}

func (o *GetFlowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowsForbidden creates a GetFlowsForbidden with default headers values
func NewGetFlowsForbidden() *GetFlowsForbidden {
	return &GetFlowsForbidden{}
}

/*
GetFlowsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowsForbidden struct {
}

// IsSuccess returns true when this get flows forbidden response has a 2xx status code
func (o *GetFlowsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows forbidden response has a 3xx status code
func (o *GetFlowsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows forbidden response has a 4xx status code
func (o *GetFlowsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows forbidden response has a 5xx status code
func (o *GetFlowsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows forbidden response a status code equal to that given
func (o *GetFlowsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get flows forbidden response
func (o *GetFlowsForbidden) Code() int {
	return 403
}

func (o *GetFlowsForbidden) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsForbidden ", 403)
}

func (o *GetFlowsForbidden) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsForbidden ", 403)
}

func (o *GetFlowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowsNotFound creates a GetFlowsNotFound with default headers values
func NewGetFlowsNotFound() *GetFlowsNotFound {
	return &GetFlowsNotFound{}
}

/*
GetFlowsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowsNotFound struct {
}

// IsSuccess returns true when this get flows not found response has a 2xx status code
func (o *GetFlowsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows not found response has a 3xx status code
func (o *GetFlowsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows not found response has a 4xx status code
func (o *GetFlowsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows not found response has a 5xx status code
func (o *GetFlowsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows not found response a status code equal to that given
func (o *GetFlowsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get flows not found response
func (o *GetFlowsNotFound) Code() int {
	return 404
}

func (o *GetFlowsNotFound) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsNotFound ", 404)
}

func (o *GetFlowsNotFound) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsNotFound ", 404)
}

func (o *GetFlowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowsConflict creates a GetFlowsConflict with default headers values
func NewGetFlowsConflict() *GetFlowsConflict {
	return &GetFlowsConflict{}
}

/*
GetFlowsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetFlowsConflict struct {
}

// IsSuccess returns true when this get flows conflict response has a 2xx status code
func (o *GetFlowsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flows conflict response has a 3xx status code
func (o *GetFlowsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flows conflict response has a 4xx status code
func (o *GetFlowsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flows conflict response has a 5xx status code
func (o *GetFlowsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get flows conflict response a status code equal to that given
func (o *GetFlowsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get flows conflict response
func (o *GetFlowsConflict) Code() int {
	return 409
}

func (o *GetFlowsConflict) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsConflict ", 409)
}

func (o *GetFlowsConflict) String() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}/flows][%d] getFlowsConflict ", 409)
}

func (o *GetFlowsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
