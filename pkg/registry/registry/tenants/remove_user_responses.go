// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// RemoveUserReader is a Reader for the RemoveUser structure.
type RemoveUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoveUserOK creates a RemoveUserOK with default headers values
func NewRemoveUserOK() *RemoveUserOK {
	return &RemoveUserOK{}
}

/* RemoveUserOK describes a response with status code 200, with default header values.

successful operation
*/
type RemoveUserOK struct {
	Payload *models.User
}

func (o *RemoveUserOK) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserOK  %+v", 200, o.Payload)
}
func (o *RemoveUserOK) GetPayload() *models.User {
	return o.Payload
}

func (o *RemoveUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserBadRequest creates a RemoveUserBadRequest with default headers values
func NewRemoveUserBadRequest() *RemoveUserBadRequest {
	return &RemoveUserBadRequest{}
}

/* RemoveUserBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type RemoveUserBadRequest struct {
}

func (o *RemoveUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserBadRequest ", 400)
}

func (o *RemoveUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserUnauthorized creates a RemoveUserUnauthorized with default headers values
func NewRemoveUserUnauthorized() *RemoveUserUnauthorized {
	return &RemoveUserUnauthorized{}
}

/* RemoveUserUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type RemoveUserUnauthorized struct {
}

func (o *RemoveUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserUnauthorized ", 401)
}

func (o *RemoveUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserForbidden creates a RemoveUserForbidden with default headers values
func NewRemoveUserForbidden() *RemoveUserForbidden {
	return &RemoveUserForbidden{}
}

/* RemoveUserForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type RemoveUserForbidden struct {
}

func (o *RemoveUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserForbidden ", 403)
}

func (o *RemoveUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserNotFound creates a RemoveUserNotFound with default headers values
func NewRemoveUserNotFound() *RemoveUserNotFound {
	return &RemoveUserNotFound{}
}

/* RemoveUserNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type RemoveUserNotFound struct {
}

func (o *RemoveUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserNotFound ", 404)
}

func (o *RemoveUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserConflict creates a RemoveUserConflict with default headers values
func NewRemoveUserConflict() *RemoveUserConflict {
	return &RemoveUserConflict{}
}

/* RemoveUserConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type RemoveUserConflict struct {
}

func (o *RemoveUserConflict) Error() string {
	return fmt.Sprintf("[DELETE /tenants/users/{id}][%d] removeUserConflict ", 409)
}

func (o *RemoveUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
