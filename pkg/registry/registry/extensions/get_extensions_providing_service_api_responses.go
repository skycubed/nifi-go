// Code generated by go-swagger; DO NOT EDIT.

package extensions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetExtensionsProvidingServiceAPIReader is a Reader for the GetExtensionsProvidingServiceAPI structure.
type GetExtensionsProvidingServiceAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionsProvidingServiceAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExtensionsProvidingServiceAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExtensionsProvidingServiceAPIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExtensionsProvidingServiceAPIUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExtensionsProvidingServiceAPIForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExtensionsProvidingServiceAPINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetExtensionsProvidingServiceAPIConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExtensionsProvidingServiceAPIOK creates a GetExtensionsProvidingServiceAPIOK with default headers values
func NewGetExtensionsProvidingServiceAPIOK() *GetExtensionsProvidingServiceAPIOK {
	return &GetExtensionsProvidingServiceAPIOK{}
}

/*
GetExtensionsProvidingServiceAPIOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExtensionsProvidingServiceAPIOK struct {
	Payload *models.ExtensionMetadataContainer
}

// IsSuccess returns true when this get extensions providing service Api o k response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get extensions providing service Api o k response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api o k response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get extensions providing service Api o k response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api o k response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPIOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExtensionsProvidingServiceAPIOK) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiOK  %+v", 200, o.Payload)
}

func (o *GetExtensionsProvidingServiceAPIOK) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiOK  %+v", 200, o.Payload)
}

func (o *GetExtensionsProvidingServiceAPIOK) GetPayload() *models.ExtensionMetadataContainer {
	return o.Payload
}

func (o *GetExtensionsProvidingServiceAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtensionMetadataContainer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionsProvidingServiceAPIBadRequest creates a GetExtensionsProvidingServiceAPIBadRequest with default headers values
func NewGetExtensionsProvidingServiceAPIBadRequest() *GetExtensionsProvidingServiceAPIBadRequest {
	return &GetExtensionsProvidingServiceAPIBadRequest{}
}

/*
GetExtensionsProvidingServiceAPIBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetExtensionsProvidingServiceAPIBadRequest struct {
}

// IsSuccess returns true when this get extensions providing service Api bad request response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extensions providing service Api bad request response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api bad request response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extensions providing service Api bad request response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api bad request response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPIBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExtensionsProvidingServiceAPIBadRequest) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiBadRequest ", 400)
}

func (o *GetExtensionsProvidingServiceAPIBadRequest) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiBadRequest ", 400)
}

func (o *GetExtensionsProvidingServiceAPIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionsProvidingServiceAPIUnauthorized creates a GetExtensionsProvidingServiceAPIUnauthorized with default headers values
func NewGetExtensionsProvidingServiceAPIUnauthorized() *GetExtensionsProvidingServiceAPIUnauthorized {
	return &GetExtensionsProvidingServiceAPIUnauthorized{}
}

/*
GetExtensionsProvidingServiceAPIUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetExtensionsProvidingServiceAPIUnauthorized struct {
}

// IsSuccess returns true when this get extensions providing service Api unauthorized response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPIUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extensions providing service Api unauthorized response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPIUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api unauthorized response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPIUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extensions providing service Api unauthorized response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPIUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api unauthorized response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPIUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExtensionsProvidingServiceAPIUnauthorized) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiUnauthorized ", 401)
}

func (o *GetExtensionsProvidingServiceAPIUnauthorized) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiUnauthorized ", 401)
}

func (o *GetExtensionsProvidingServiceAPIUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionsProvidingServiceAPIForbidden creates a GetExtensionsProvidingServiceAPIForbidden with default headers values
func NewGetExtensionsProvidingServiceAPIForbidden() *GetExtensionsProvidingServiceAPIForbidden {
	return &GetExtensionsProvidingServiceAPIForbidden{}
}

/*
GetExtensionsProvidingServiceAPIForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetExtensionsProvidingServiceAPIForbidden struct {
}

// IsSuccess returns true when this get extensions providing service Api forbidden response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPIForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extensions providing service Api forbidden response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPIForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api forbidden response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPIForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extensions providing service Api forbidden response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPIForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api forbidden response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPIForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExtensionsProvidingServiceAPIForbidden) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiForbidden ", 403)
}

func (o *GetExtensionsProvidingServiceAPIForbidden) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiForbidden ", 403)
}

func (o *GetExtensionsProvidingServiceAPIForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionsProvidingServiceAPINotFound creates a GetExtensionsProvidingServiceAPINotFound with default headers values
func NewGetExtensionsProvidingServiceAPINotFound() *GetExtensionsProvidingServiceAPINotFound {
	return &GetExtensionsProvidingServiceAPINotFound{}
}

/*
GetExtensionsProvidingServiceAPINotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetExtensionsProvidingServiceAPINotFound struct {
}

// IsSuccess returns true when this get extensions providing service Api not found response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extensions providing service Api not found response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api not found response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extensions providing service Api not found response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api not found response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPINotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExtensionsProvidingServiceAPINotFound) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiNotFound ", 404)
}

func (o *GetExtensionsProvidingServiceAPINotFound) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiNotFound ", 404)
}

func (o *GetExtensionsProvidingServiceAPINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionsProvidingServiceAPIConflict creates a GetExtensionsProvidingServiceAPIConflict with default headers values
func NewGetExtensionsProvidingServiceAPIConflict() *GetExtensionsProvidingServiceAPIConflict {
	return &GetExtensionsProvidingServiceAPIConflict{}
}

/*
GetExtensionsProvidingServiceAPIConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetExtensionsProvidingServiceAPIConflict struct {
}

// IsSuccess returns true when this get extensions providing service Api conflict response has a 2xx status code
func (o *GetExtensionsProvidingServiceAPIConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extensions providing service Api conflict response has a 3xx status code
func (o *GetExtensionsProvidingServiceAPIConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extensions providing service Api conflict response has a 4xx status code
func (o *GetExtensionsProvidingServiceAPIConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extensions providing service Api conflict response has a 5xx status code
func (o *GetExtensionsProvidingServiceAPIConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get extensions providing service Api conflict response a status code equal to that given
func (o *GetExtensionsProvidingServiceAPIConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetExtensionsProvidingServiceAPIConflict) Error() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiConflict ", 409)
}

func (o *GetExtensionsProvidingServiceAPIConflict) String() string {
	return fmt.Sprintf("[GET /extensions/provided-service-api][%d] getExtensionsProvidingServiceApiConflict ", 409)
}

func (o *GetExtensionsProvidingServiceAPIConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
