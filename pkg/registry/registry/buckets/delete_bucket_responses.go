// Code generated by go-swagger; DO NOT EDIT.

package buckets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// DeleteBucketReader is a Reader for the DeleteBucket structure.
type DeleteBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBucketBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteBucketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteBucketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteBucketOK creates a DeleteBucketOK with default headers values
func NewDeleteBucketOK() *DeleteBucketOK {
	return &DeleteBucketOK{}
}

/* DeleteBucketOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteBucketOK struct {
	Payload *models.Bucket
}

func (o *DeleteBucketOK) Error() string {
	return fmt.Sprintf("[DELETE /buckets/{bucketId}][%d] deleteBucketOK  %+v", 200, o.Payload)
}
func (o *DeleteBucketOK) GetPayload() *models.Bucket {
	return o.Payload
}

func (o *DeleteBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Bucket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBucketBadRequest creates a DeleteBucketBadRequest with default headers values
func NewDeleteBucketBadRequest() *DeleteBucketBadRequest {
	return &DeleteBucketBadRequest{}
}

/* DeleteBucketBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type DeleteBucketBadRequest struct {
}

func (o *DeleteBucketBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /buckets/{bucketId}][%d] deleteBucketBadRequest ", 400)
}

func (o *DeleteBucketBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBucketUnauthorized creates a DeleteBucketUnauthorized with default headers values
func NewDeleteBucketUnauthorized() *DeleteBucketUnauthorized {
	return &DeleteBucketUnauthorized{}
}

/* DeleteBucketUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type DeleteBucketUnauthorized struct {
}

func (o *DeleteBucketUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /buckets/{bucketId}][%d] deleteBucketUnauthorized ", 401)
}

func (o *DeleteBucketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBucketForbidden creates a DeleteBucketForbidden with default headers values
func NewDeleteBucketForbidden() *DeleteBucketForbidden {
	return &DeleteBucketForbidden{}
}

/* DeleteBucketForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type DeleteBucketForbidden struct {
}

func (o *DeleteBucketForbidden) Error() string {
	return fmt.Sprintf("[DELETE /buckets/{bucketId}][%d] deleteBucketForbidden ", 403)
}

func (o *DeleteBucketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBucketNotFound creates a DeleteBucketNotFound with default headers values
func NewDeleteBucketNotFound() *DeleteBucketNotFound {
	return &DeleteBucketNotFound{}
}

/* DeleteBucketNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type DeleteBucketNotFound struct {
}

func (o *DeleteBucketNotFound) Error() string {
	return fmt.Sprintf("[DELETE /buckets/{bucketId}][%d] deleteBucketNotFound ", 404)
}

func (o *DeleteBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
