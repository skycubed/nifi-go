// Code generated by go-swagger; DO NOT EDIT.

package buckets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetBucketReader is a Reader for the GetBucket structure.
type GetBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBucketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBucketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBucketOK creates a GetBucketOK with default headers values
func NewGetBucketOK() *GetBucketOK {
	return &GetBucketOK{}
}

/* GetBucketOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBucketOK struct {
	Payload *models.Bucket
}

func (o *GetBucketOK) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}][%d] getBucketOK  %+v", 200, o.Payload)
}
func (o *GetBucketOK) GetPayload() *models.Bucket {
	return o.Payload
}

func (o *GetBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Bucket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBucketUnauthorized creates a GetBucketUnauthorized with default headers values
func NewGetBucketUnauthorized() *GetBucketUnauthorized {
	return &GetBucketUnauthorized{}
}

/* GetBucketUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetBucketUnauthorized struct {
}

func (o *GetBucketUnauthorized) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}][%d] getBucketUnauthorized ", 401)
}

func (o *GetBucketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketForbidden creates a GetBucketForbidden with default headers values
func NewGetBucketForbidden() *GetBucketForbidden {
	return &GetBucketForbidden{}
}

/* GetBucketForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetBucketForbidden struct {
}

func (o *GetBucketForbidden) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}][%d] getBucketForbidden ", 403)
}

func (o *GetBucketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketNotFound creates a GetBucketNotFound with default headers values
func NewGetBucketNotFound() *GetBucketNotFound {
	return &GetBucketNotFound{}
}

/* GetBucketNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetBucketNotFound struct {
}

func (o *GetBucketNotFound) Error() string {
	return fmt.Sprintf("[GET /buckets/{bucketId}][%d] getBucketNotFound ", 404)
}

func (o *GetBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
