// Code generated by go-swagger; DO NOT EDIT.

package buckets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// UpdateBucketReader is a Reader for the UpdateBucket structure.
type UpdateBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBucketBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBucketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBucketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateBucketConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateBucketOK creates a UpdateBucketOK with default headers values
func NewUpdateBucketOK() *UpdateBucketOK {
	return &UpdateBucketOK{}
}

/* UpdateBucketOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateBucketOK struct {
	Payload *models.Bucket
}

func (o *UpdateBucketOK) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketOK  %+v", 200, o.Payload)
}
func (o *UpdateBucketOK) GetPayload() *models.Bucket {
	return o.Payload
}

func (o *UpdateBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Bucket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBucketBadRequest creates a UpdateBucketBadRequest with default headers values
func NewUpdateBucketBadRequest() *UpdateBucketBadRequest {
	return &UpdateBucketBadRequest{}
}

/* UpdateBucketBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateBucketBadRequest struct {
}

func (o *UpdateBucketBadRequest) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketBadRequest ", 400)
}

func (o *UpdateBucketBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBucketUnauthorized creates a UpdateBucketUnauthorized with default headers values
func NewUpdateBucketUnauthorized() *UpdateBucketUnauthorized {
	return &UpdateBucketUnauthorized{}
}

/* UpdateBucketUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateBucketUnauthorized struct {
}

func (o *UpdateBucketUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketUnauthorized ", 401)
}

func (o *UpdateBucketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBucketForbidden creates a UpdateBucketForbidden with default headers values
func NewUpdateBucketForbidden() *UpdateBucketForbidden {
	return &UpdateBucketForbidden{}
}

/* UpdateBucketForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateBucketForbidden struct {
}

func (o *UpdateBucketForbidden) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketForbidden ", 403)
}

func (o *UpdateBucketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBucketNotFound creates a UpdateBucketNotFound with default headers values
func NewUpdateBucketNotFound() *UpdateBucketNotFound {
	return &UpdateBucketNotFound{}
}

/* UpdateBucketNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateBucketNotFound struct {
}

func (o *UpdateBucketNotFound) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketNotFound ", 404)
}

func (o *UpdateBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBucketConflict creates a UpdateBucketConflict with default headers values
func NewUpdateBucketConflict() *UpdateBucketConflict {
	return &UpdateBucketConflict{}
}

/* UpdateBucketConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type UpdateBucketConflict struct {
}

func (o *UpdateBucketConflict) Error() string {
	return fmt.Sprintf("[PUT /buckets/{bucketId}][%d] updateBucketConflict ", 409)
}

func (o *UpdateBucketConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
