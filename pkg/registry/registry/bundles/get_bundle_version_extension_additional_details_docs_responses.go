// Code generated by go-swagger; DO NOT EDIT.

package bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetBundleVersionExtensionAdditionalDetailsDocsReader is a Reader for the GetBundleVersionExtensionAdditionalDetailsDocs structure.
type GetBundleVersionExtensionAdditionalDetailsDocsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBundleVersionExtensionAdditionalDetailsDocsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetBundleVersionExtensionAdditionalDetailsDocsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsOK creates a GetBundleVersionExtensionAdditionalDetailsDocsOK with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsOK() *GetBundleVersionExtensionAdditionalDetailsDocsOK {
	return &GetBundleVersionExtensionAdditionalDetailsDocsOK{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBundleVersionExtensionAdditionalDetailsDocsOK struct {
	Payload string
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsOK) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsOK  %+v", 200, o.Payload)
}
func (o *GetBundleVersionExtensionAdditionalDetailsDocsOK) GetPayload() string {
	return o.Payload
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsBadRequest creates a GetBundleVersionExtensionAdditionalDetailsDocsBadRequest with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsBadRequest() *GetBundleVersionExtensionAdditionalDetailsDocsBadRequest {
	return &GetBundleVersionExtensionAdditionalDetailsDocsBadRequest{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetBundleVersionExtensionAdditionalDetailsDocsBadRequest struct {
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsBadRequest) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsBadRequest ", 400)
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsUnauthorized creates a GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsUnauthorized() *GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized {
	return &GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized struct {
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsUnauthorized ", 401)
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsForbidden creates a GetBundleVersionExtensionAdditionalDetailsDocsForbidden with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsForbidden() *GetBundleVersionExtensionAdditionalDetailsDocsForbidden {
	return &GetBundleVersionExtensionAdditionalDetailsDocsForbidden{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetBundleVersionExtensionAdditionalDetailsDocsForbidden struct {
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsForbidden) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsForbidden ", 403)
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsNotFound creates a GetBundleVersionExtensionAdditionalDetailsDocsNotFound with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsNotFound() *GetBundleVersionExtensionAdditionalDetailsDocsNotFound {
	return &GetBundleVersionExtensionAdditionalDetailsDocsNotFound{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetBundleVersionExtensionAdditionalDetailsDocsNotFound struct {
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsNotFound) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsNotFound ", 404)
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleVersionExtensionAdditionalDetailsDocsConflict creates a GetBundleVersionExtensionAdditionalDetailsDocsConflict with default headers values
func NewGetBundleVersionExtensionAdditionalDetailsDocsConflict() *GetBundleVersionExtensionAdditionalDetailsDocsConflict {
	return &GetBundleVersionExtensionAdditionalDetailsDocsConflict{}
}

/* GetBundleVersionExtensionAdditionalDetailsDocsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetBundleVersionExtensionAdditionalDetailsDocsConflict struct {
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsConflict) Error() string {
	return fmt.Sprintf("[GET /bundles/{bundleId}/versions/{version}/extensions/{name}/docs/additional-details][%d] getBundleVersionExtensionAdditionalDetailsDocsConflict ", 409)
}

func (o *GetBundleVersionExtensionAdditionalDetailsDocsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
