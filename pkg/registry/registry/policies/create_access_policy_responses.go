// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// CreateAccessPolicyReader is a Reader for the CreateAccessPolicy structure.
type CreateAccessPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccessPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAccessPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccessPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAccessPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAccessPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAccessPolicyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAccessPolicyOK creates a CreateAccessPolicyOK with default headers values
func NewCreateAccessPolicyOK() *CreateAccessPolicyOK {
	return &CreateAccessPolicyOK{}
}

/* CreateAccessPolicyOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateAccessPolicyOK struct {
	Payload *models.AccessPolicy
}

func (o *CreateAccessPolicyOK) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyOK  %+v", 200, o.Payload)
}
func (o *CreateAccessPolicyOK) GetPayload() *models.AccessPolicy {
	return o.Payload
}

func (o *CreateAccessPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccessPolicyBadRequest creates a CreateAccessPolicyBadRequest with default headers values
func NewCreateAccessPolicyBadRequest() *CreateAccessPolicyBadRequest {
	return &CreateAccessPolicyBadRequest{}
}

/* CreateAccessPolicyBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateAccessPolicyBadRequest struct {
}

func (o *CreateAccessPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyBadRequest ", 400)
}

func (o *CreateAccessPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyUnauthorized creates a CreateAccessPolicyUnauthorized with default headers values
func NewCreateAccessPolicyUnauthorized() *CreateAccessPolicyUnauthorized {
	return &CreateAccessPolicyUnauthorized{}
}

/* CreateAccessPolicyUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateAccessPolicyUnauthorized struct {
}

func (o *CreateAccessPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyUnauthorized ", 401)
}

func (o *CreateAccessPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyForbidden creates a CreateAccessPolicyForbidden with default headers values
func NewCreateAccessPolicyForbidden() *CreateAccessPolicyForbidden {
	return &CreateAccessPolicyForbidden{}
}

/* CreateAccessPolicyForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateAccessPolicyForbidden struct {
}

func (o *CreateAccessPolicyForbidden) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyForbidden ", 403)
}

func (o *CreateAccessPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyConflict creates a CreateAccessPolicyConflict with default headers values
func NewCreateAccessPolicyConflict() *CreateAccessPolicyConflict {
	return &CreateAccessPolicyConflict{}
}

/* CreateAccessPolicyConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid. The NiFi Registry might not be configured to use a ConfigurableAccessPolicyProvider.
*/
type CreateAccessPolicyConflict struct {
}

func (o *CreateAccessPolicyConflict) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyConflict ", 409)
}

func (o *CreateAccessPolicyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
