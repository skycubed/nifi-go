// Code generated by go-swagger; DO NOT EDIT.

package extension_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetExtensionRepoBucketsReader is a Reader for the GetExtensionRepoBuckets structure.
type GetExtensionRepoBucketsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionRepoBucketsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExtensionRepoBucketsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExtensionRepoBucketsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExtensionRepoBucketsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExtensionRepoBucketsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExtensionRepoBucketsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetExtensionRepoBucketsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /extension-repository] getExtensionRepoBuckets", response, response.Code())
	}
}

// NewGetExtensionRepoBucketsOK creates a GetExtensionRepoBucketsOK with default headers values
func NewGetExtensionRepoBucketsOK() *GetExtensionRepoBucketsOK {
	return &GetExtensionRepoBucketsOK{}
}

/*
GetExtensionRepoBucketsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExtensionRepoBucketsOK struct {
	Payload []*models.ExtensionRepoBucket
}

// IsSuccess returns true when this get extension repo buckets o k response has a 2xx status code
func (o *GetExtensionRepoBucketsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get extension repo buckets o k response has a 3xx status code
func (o *GetExtensionRepoBucketsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets o k response has a 4xx status code
func (o *GetExtensionRepoBucketsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get extension repo buckets o k response has a 5xx status code
func (o *GetExtensionRepoBucketsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets o k response a status code equal to that given
func (o *GetExtensionRepoBucketsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get extension repo buckets o k response
func (o *GetExtensionRepoBucketsOK) Code() int {
	return 200
}

func (o *GetExtensionRepoBucketsOK) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsOK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoBucketsOK) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsOK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoBucketsOK) GetPayload() []*models.ExtensionRepoBucket {
	return o.Payload
}

func (o *GetExtensionRepoBucketsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionRepoBucketsBadRequest creates a GetExtensionRepoBucketsBadRequest with default headers values
func NewGetExtensionRepoBucketsBadRequest() *GetExtensionRepoBucketsBadRequest {
	return &GetExtensionRepoBucketsBadRequest{}
}

/*
GetExtensionRepoBucketsBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetExtensionRepoBucketsBadRequest struct {
}

// IsSuccess returns true when this get extension repo buckets bad request response has a 2xx status code
func (o *GetExtensionRepoBucketsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo buckets bad request response has a 3xx status code
func (o *GetExtensionRepoBucketsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets bad request response has a 4xx status code
func (o *GetExtensionRepoBucketsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo buckets bad request response has a 5xx status code
func (o *GetExtensionRepoBucketsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets bad request response a status code equal to that given
func (o *GetExtensionRepoBucketsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get extension repo buckets bad request response
func (o *GetExtensionRepoBucketsBadRequest) Code() int {
	return 400
}

func (o *GetExtensionRepoBucketsBadRequest) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsBadRequest ", 400)
}

func (o *GetExtensionRepoBucketsBadRequest) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsBadRequest ", 400)
}

func (o *GetExtensionRepoBucketsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoBucketsUnauthorized creates a GetExtensionRepoBucketsUnauthorized with default headers values
func NewGetExtensionRepoBucketsUnauthorized() *GetExtensionRepoBucketsUnauthorized {
	return &GetExtensionRepoBucketsUnauthorized{}
}

/*
GetExtensionRepoBucketsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetExtensionRepoBucketsUnauthorized struct {
}

// IsSuccess returns true when this get extension repo buckets unauthorized response has a 2xx status code
func (o *GetExtensionRepoBucketsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo buckets unauthorized response has a 3xx status code
func (o *GetExtensionRepoBucketsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets unauthorized response has a 4xx status code
func (o *GetExtensionRepoBucketsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo buckets unauthorized response has a 5xx status code
func (o *GetExtensionRepoBucketsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets unauthorized response a status code equal to that given
func (o *GetExtensionRepoBucketsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get extension repo buckets unauthorized response
func (o *GetExtensionRepoBucketsUnauthorized) Code() int {
	return 401
}

func (o *GetExtensionRepoBucketsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsUnauthorized ", 401)
}

func (o *GetExtensionRepoBucketsUnauthorized) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsUnauthorized ", 401)
}

func (o *GetExtensionRepoBucketsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoBucketsForbidden creates a GetExtensionRepoBucketsForbidden with default headers values
func NewGetExtensionRepoBucketsForbidden() *GetExtensionRepoBucketsForbidden {
	return &GetExtensionRepoBucketsForbidden{}
}

/*
GetExtensionRepoBucketsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetExtensionRepoBucketsForbidden struct {
}

// IsSuccess returns true when this get extension repo buckets forbidden response has a 2xx status code
func (o *GetExtensionRepoBucketsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo buckets forbidden response has a 3xx status code
func (o *GetExtensionRepoBucketsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets forbidden response has a 4xx status code
func (o *GetExtensionRepoBucketsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo buckets forbidden response has a 5xx status code
func (o *GetExtensionRepoBucketsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets forbidden response a status code equal to that given
func (o *GetExtensionRepoBucketsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get extension repo buckets forbidden response
func (o *GetExtensionRepoBucketsForbidden) Code() int {
	return 403
}

func (o *GetExtensionRepoBucketsForbidden) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsForbidden ", 403)
}

func (o *GetExtensionRepoBucketsForbidden) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsForbidden ", 403)
}

func (o *GetExtensionRepoBucketsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoBucketsNotFound creates a GetExtensionRepoBucketsNotFound with default headers values
func NewGetExtensionRepoBucketsNotFound() *GetExtensionRepoBucketsNotFound {
	return &GetExtensionRepoBucketsNotFound{}
}

/*
GetExtensionRepoBucketsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetExtensionRepoBucketsNotFound struct {
}

// IsSuccess returns true when this get extension repo buckets not found response has a 2xx status code
func (o *GetExtensionRepoBucketsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo buckets not found response has a 3xx status code
func (o *GetExtensionRepoBucketsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets not found response has a 4xx status code
func (o *GetExtensionRepoBucketsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo buckets not found response has a 5xx status code
func (o *GetExtensionRepoBucketsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets not found response a status code equal to that given
func (o *GetExtensionRepoBucketsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get extension repo buckets not found response
func (o *GetExtensionRepoBucketsNotFound) Code() int {
	return 404
}

func (o *GetExtensionRepoBucketsNotFound) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsNotFound ", 404)
}

func (o *GetExtensionRepoBucketsNotFound) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsNotFound ", 404)
}

func (o *GetExtensionRepoBucketsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoBucketsConflict creates a GetExtensionRepoBucketsConflict with default headers values
func NewGetExtensionRepoBucketsConflict() *GetExtensionRepoBucketsConflict {
	return &GetExtensionRepoBucketsConflict{}
}

/*
GetExtensionRepoBucketsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetExtensionRepoBucketsConflict struct {
}

// IsSuccess returns true when this get extension repo buckets conflict response has a 2xx status code
func (o *GetExtensionRepoBucketsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo buckets conflict response has a 3xx status code
func (o *GetExtensionRepoBucketsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo buckets conflict response has a 4xx status code
func (o *GetExtensionRepoBucketsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo buckets conflict response has a 5xx status code
func (o *GetExtensionRepoBucketsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo buckets conflict response a status code equal to that given
func (o *GetExtensionRepoBucketsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get extension repo buckets conflict response
func (o *GetExtensionRepoBucketsConflict) Code() int {
	return 409
}

func (o *GetExtensionRepoBucketsConflict) Error() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsConflict ", 409)
}

func (o *GetExtensionRepoBucketsConflict) String() string {
	return fmt.Sprintf("[GET /extension-repository][%d] getExtensionRepoBucketsConflict ", 409)
}

func (o *GetExtensionRepoBucketsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
