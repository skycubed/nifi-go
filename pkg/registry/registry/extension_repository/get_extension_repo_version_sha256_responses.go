// Code generated by go-swagger; DO NOT EDIT.

package extension_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetExtensionRepoVersionSha256Reader is a Reader for the GetExtensionRepoVersionSha256 structure.
type GetExtensionRepoVersionSha256Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionRepoVersionSha256Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExtensionRepoVersionSha256OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExtensionRepoVersionSha256BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExtensionRepoVersionSha256Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExtensionRepoVersionSha256Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExtensionRepoVersionSha256NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetExtensionRepoVersionSha256Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExtensionRepoVersionSha256OK creates a GetExtensionRepoVersionSha256OK with default headers values
func NewGetExtensionRepoVersionSha256OK() *GetExtensionRepoVersionSha256OK {
	return &GetExtensionRepoVersionSha256OK{}
}

/*
GetExtensionRepoVersionSha256OK describes a response with status code 200, with default header values.

successful operation
*/
type GetExtensionRepoVersionSha256OK struct {
	Payload string
}

// IsSuccess returns true when this get extension repo version sha256 o k response has a 2xx status code
func (o *GetExtensionRepoVersionSha256OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get extension repo version sha256 o k response has a 3xx status code
func (o *GetExtensionRepoVersionSha256OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 o k response has a 4xx status code
func (o *GetExtensionRepoVersionSha256OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get extension repo version sha256 o k response has a 5xx status code
func (o *GetExtensionRepoVersionSha256OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 o k response a status code equal to that given
func (o *GetExtensionRepoVersionSha256OK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExtensionRepoVersionSha256OK) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256OK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoVersionSha256OK) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256OK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoVersionSha256OK) GetPayload() string {
	return o.Payload
}

func (o *GetExtensionRepoVersionSha256OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionRepoVersionSha256BadRequest creates a GetExtensionRepoVersionSha256BadRequest with default headers values
func NewGetExtensionRepoVersionSha256BadRequest() *GetExtensionRepoVersionSha256BadRequest {
	return &GetExtensionRepoVersionSha256BadRequest{}
}

/*
GetExtensionRepoVersionSha256BadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetExtensionRepoVersionSha256BadRequest struct {
}

// IsSuccess returns true when this get extension repo version sha256 bad request response has a 2xx status code
func (o *GetExtensionRepoVersionSha256BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo version sha256 bad request response has a 3xx status code
func (o *GetExtensionRepoVersionSha256BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 bad request response has a 4xx status code
func (o *GetExtensionRepoVersionSha256BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo version sha256 bad request response has a 5xx status code
func (o *GetExtensionRepoVersionSha256BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 bad request response a status code equal to that given
func (o *GetExtensionRepoVersionSha256BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExtensionRepoVersionSha256BadRequest) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256BadRequest ", 400)
}

func (o *GetExtensionRepoVersionSha256BadRequest) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256BadRequest ", 400)
}

func (o *GetExtensionRepoVersionSha256BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionSha256Unauthorized creates a GetExtensionRepoVersionSha256Unauthorized with default headers values
func NewGetExtensionRepoVersionSha256Unauthorized() *GetExtensionRepoVersionSha256Unauthorized {
	return &GetExtensionRepoVersionSha256Unauthorized{}
}

/*
GetExtensionRepoVersionSha256Unauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetExtensionRepoVersionSha256Unauthorized struct {
}

// IsSuccess returns true when this get extension repo version sha256 unauthorized response has a 2xx status code
func (o *GetExtensionRepoVersionSha256Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo version sha256 unauthorized response has a 3xx status code
func (o *GetExtensionRepoVersionSha256Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 unauthorized response has a 4xx status code
func (o *GetExtensionRepoVersionSha256Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo version sha256 unauthorized response has a 5xx status code
func (o *GetExtensionRepoVersionSha256Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 unauthorized response a status code equal to that given
func (o *GetExtensionRepoVersionSha256Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExtensionRepoVersionSha256Unauthorized) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Unauthorized ", 401)
}

func (o *GetExtensionRepoVersionSha256Unauthorized) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Unauthorized ", 401)
}

func (o *GetExtensionRepoVersionSha256Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionSha256Forbidden creates a GetExtensionRepoVersionSha256Forbidden with default headers values
func NewGetExtensionRepoVersionSha256Forbidden() *GetExtensionRepoVersionSha256Forbidden {
	return &GetExtensionRepoVersionSha256Forbidden{}
}

/*
GetExtensionRepoVersionSha256Forbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetExtensionRepoVersionSha256Forbidden struct {
}

// IsSuccess returns true when this get extension repo version sha256 forbidden response has a 2xx status code
func (o *GetExtensionRepoVersionSha256Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo version sha256 forbidden response has a 3xx status code
func (o *GetExtensionRepoVersionSha256Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 forbidden response has a 4xx status code
func (o *GetExtensionRepoVersionSha256Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo version sha256 forbidden response has a 5xx status code
func (o *GetExtensionRepoVersionSha256Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 forbidden response a status code equal to that given
func (o *GetExtensionRepoVersionSha256Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExtensionRepoVersionSha256Forbidden) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Forbidden ", 403)
}

func (o *GetExtensionRepoVersionSha256Forbidden) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Forbidden ", 403)
}

func (o *GetExtensionRepoVersionSha256Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionSha256NotFound creates a GetExtensionRepoVersionSha256NotFound with default headers values
func NewGetExtensionRepoVersionSha256NotFound() *GetExtensionRepoVersionSha256NotFound {
	return &GetExtensionRepoVersionSha256NotFound{}
}

/*
GetExtensionRepoVersionSha256NotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetExtensionRepoVersionSha256NotFound struct {
}

// IsSuccess returns true when this get extension repo version sha256 not found response has a 2xx status code
func (o *GetExtensionRepoVersionSha256NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo version sha256 not found response has a 3xx status code
func (o *GetExtensionRepoVersionSha256NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 not found response has a 4xx status code
func (o *GetExtensionRepoVersionSha256NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo version sha256 not found response has a 5xx status code
func (o *GetExtensionRepoVersionSha256NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 not found response a status code equal to that given
func (o *GetExtensionRepoVersionSha256NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExtensionRepoVersionSha256NotFound) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256NotFound ", 404)
}

func (o *GetExtensionRepoVersionSha256NotFound) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256NotFound ", 404)
}

func (o *GetExtensionRepoVersionSha256NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionSha256Conflict creates a GetExtensionRepoVersionSha256Conflict with default headers values
func NewGetExtensionRepoVersionSha256Conflict() *GetExtensionRepoVersionSha256Conflict {
	return &GetExtensionRepoVersionSha256Conflict{}
}

/*
GetExtensionRepoVersionSha256Conflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetExtensionRepoVersionSha256Conflict struct {
}

// IsSuccess returns true when this get extension repo version sha256 conflict response has a 2xx status code
func (o *GetExtensionRepoVersionSha256Conflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo version sha256 conflict response has a 3xx status code
func (o *GetExtensionRepoVersionSha256Conflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo version sha256 conflict response has a 4xx status code
func (o *GetExtensionRepoVersionSha256Conflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo version sha256 conflict response has a 5xx status code
func (o *GetExtensionRepoVersionSha256Conflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo version sha256 conflict response a status code equal to that given
func (o *GetExtensionRepoVersionSha256Conflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetExtensionRepoVersionSha256Conflict) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Conflict ", 409)
}

func (o *GetExtensionRepoVersionSha256Conflict) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/sha256][%d] getExtensionRepoVersionSha256Conflict ", 409)
}

func (o *GetExtensionRepoVersionSha256Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
