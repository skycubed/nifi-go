// Code generated by go-swagger; DO NOT EDIT.

package extension_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetExtensionRepoArtifactsReader is a Reader for the GetExtensionRepoArtifacts structure.
type GetExtensionRepoArtifactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionRepoArtifactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExtensionRepoArtifactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExtensionRepoArtifactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExtensionRepoArtifactsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExtensionRepoArtifactsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExtensionRepoArtifactsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetExtensionRepoArtifactsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExtensionRepoArtifactsOK creates a GetExtensionRepoArtifactsOK with default headers values
func NewGetExtensionRepoArtifactsOK() *GetExtensionRepoArtifactsOK {
	return &GetExtensionRepoArtifactsOK{}
}

/*
GetExtensionRepoArtifactsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExtensionRepoArtifactsOK struct {
	Payload []*models.ExtensionRepoArtifact
}

// IsSuccess returns true when this get extension repo artifacts o k response has a 2xx status code
func (o *GetExtensionRepoArtifactsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get extension repo artifacts o k response has a 3xx status code
func (o *GetExtensionRepoArtifactsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts o k response has a 4xx status code
func (o *GetExtensionRepoArtifactsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get extension repo artifacts o k response has a 5xx status code
func (o *GetExtensionRepoArtifactsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts o k response a status code equal to that given
func (o *GetExtensionRepoArtifactsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExtensionRepoArtifactsOK) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsOK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoArtifactsOK) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsOK  %+v", 200, o.Payload)
}

func (o *GetExtensionRepoArtifactsOK) GetPayload() []*models.ExtensionRepoArtifact {
	return o.Payload
}

func (o *GetExtensionRepoArtifactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionRepoArtifactsBadRequest creates a GetExtensionRepoArtifactsBadRequest with default headers values
func NewGetExtensionRepoArtifactsBadRequest() *GetExtensionRepoArtifactsBadRequest {
	return &GetExtensionRepoArtifactsBadRequest{}
}

/*
GetExtensionRepoArtifactsBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetExtensionRepoArtifactsBadRequest struct {
}

// IsSuccess returns true when this get extension repo artifacts bad request response has a 2xx status code
func (o *GetExtensionRepoArtifactsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo artifacts bad request response has a 3xx status code
func (o *GetExtensionRepoArtifactsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts bad request response has a 4xx status code
func (o *GetExtensionRepoArtifactsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo artifacts bad request response has a 5xx status code
func (o *GetExtensionRepoArtifactsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts bad request response a status code equal to that given
func (o *GetExtensionRepoArtifactsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExtensionRepoArtifactsBadRequest) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsBadRequest ", 400)
}

func (o *GetExtensionRepoArtifactsBadRequest) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsBadRequest ", 400)
}

func (o *GetExtensionRepoArtifactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoArtifactsUnauthorized creates a GetExtensionRepoArtifactsUnauthorized with default headers values
func NewGetExtensionRepoArtifactsUnauthorized() *GetExtensionRepoArtifactsUnauthorized {
	return &GetExtensionRepoArtifactsUnauthorized{}
}

/*
GetExtensionRepoArtifactsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetExtensionRepoArtifactsUnauthorized struct {
}

// IsSuccess returns true when this get extension repo artifacts unauthorized response has a 2xx status code
func (o *GetExtensionRepoArtifactsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo artifacts unauthorized response has a 3xx status code
func (o *GetExtensionRepoArtifactsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts unauthorized response has a 4xx status code
func (o *GetExtensionRepoArtifactsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo artifacts unauthorized response has a 5xx status code
func (o *GetExtensionRepoArtifactsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts unauthorized response a status code equal to that given
func (o *GetExtensionRepoArtifactsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExtensionRepoArtifactsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsUnauthorized ", 401)
}

func (o *GetExtensionRepoArtifactsUnauthorized) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsUnauthorized ", 401)
}

func (o *GetExtensionRepoArtifactsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoArtifactsForbidden creates a GetExtensionRepoArtifactsForbidden with default headers values
func NewGetExtensionRepoArtifactsForbidden() *GetExtensionRepoArtifactsForbidden {
	return &GetExtensionRepoArtifactsForbidden{}
}

/*
GetExtensionRepoArtifactsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetExtensionRepoArtifactsForbidden struct {
}

// IsSuccess returns true when this get extension repo artifacts forbidden response has a 2xx status code
func (o *GetExtensionRepoArtifactsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo artifacts forbidden response has a 3xx status code
func (o *GetExtensionRepoArtifactsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts forbidden response has a 4xx status code
func (o *GetExtensionRepoArtifactsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo artifacts forbidden response has a 5xx status code
func (o *GetExtensionRepoArtifactsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts forbidden response a status code equal to that given
func (o *GetExtensionRepoArtifactsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExtensionRepoArtifactsForbidden) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsForbidden ", 403)
}

func (o *GetExtensionRepoArtifactsForbidden) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsForbidden ", 403)
}

func (o *GetExtensionRepoArtifactsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoArtifactsNotFound creates a GetExtensionRepoArtifactsNotFound with default headers values
func NewGetExtensionRepoArtifactsNotFound() *GetExtensionRepoArtifactsNotFound {
	return &GetExtensionRepoArtifactsNotFound{}
}

/*
GetExtensionRepoArtifactsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetExtensionRepoArtifactsNotFound struct {
}

// IsSuccess returns true when this get extension repo artifacts not found response has a 2xx status code
func (o *GetExtensionRepoArtifactsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo artifacts not found response has a 3xx status code
func (o *GetExtensionRepoArtifactsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts not found response has a 4xx status code
func (o *GetExtensionRepoArtifactsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo artifacts not found response has a 5xx status code
func (o *GetExtensionRepoArtifactsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts not found response a status code equal to that given
func (o *GetExtensionRepoArtifactsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExtensionRepoArtifactsNotFound) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsNotFound ", 404)
}

func (o *GetExtensionRepoArtifactsNotFound) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsNotFound ", 404)
}

func (o *GetExtensionRepoArtifactsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoArtifactsConflict creates a GetExtensionRepoArtifactsConflict with default headers values
func NewGetExtensionRepoArtifactsConflict() *GetExtensionRepoArtifactsConflict {
	return &GetExtensionRepoArtifactsConflict{}
}

/*
GetExtensionRepoArtifactsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetExtensionRepoArtifactsConflict struct {
}

// IsSuccess returns true when this get extension repo artifacts conflict response has a 2xx status code
func (o *GetExtensionRepoArtifactsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get extension repo artifacts conflict response has a 3xx status code
func (o *GetExtensionRepoArtifactsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get extension repo artifacts conflict response has a 4xx status code
func (o *GetExtensionRepoArtifactsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get extension repo artifacts conflict response has a 5xx status code
func (o *GetExtensionRepoArtifactsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get extension repo artifacts conflict response a status code equal to that given
func (o *GetExtensionRepoArtifactsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetExtensionRepoArtifactsConflict) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsConflict ", 409)
}

func (o *GetExtensionRepoArtifactsConflict) String() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}][%d] getExtensionRepoArtifactsConflict ", 409)
}

func (o *GetExtensionRepoArtifactsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
