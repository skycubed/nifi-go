// Code generated by go-swagger; DO NOT EDIT.

package extension_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGlobalExtensionRepoVersionSha256Reader is a Reader for the GetGlobalExtensionRepoVersionSha256 structure.
type GetGlobalExtensionRepoVersionSha256Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGlobalExtensionRepoVersionSha256Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGlobalExtensionRepoVersionSha256OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGlobalExtensionRepoVersionSha256BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGlobalExtensionRepoVersionSha256Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGlobalExtensionRepoVersionSha256Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGlobalExtensionRepoVersionSha256NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetGlobalExtensionRepoVersionSha256Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGlobalExtensionRepoVersionSha256OK creates a GetGlobalExtensionRepoVersionSha256OK with default headers values
func NewGetGlobalExtensionRepoVersionSha256OK() *GetGlobalExtensionRepoVersionSha256OK {
	return &GetGlobalExtensionRepoVersionSha256OK{}
}

/*
GetGlobalExtensionRepoVersionSha256OK describes a response with status code 200, with default header values.

successful operation
*/
type GetGlobalExtensionRepoVersionSha256OK struct {
	Payload string
}

// IsSuccess returns true when this get global extension repo version sha256 o k response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get global extension repo version sha256 o k response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 o k response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get global extension repo version sha256 o k response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 o k response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256OK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGlobalExtensionRepoVersionSha256OK) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256OK  %+v", 200, o.Payload)
}

func (o *GetGlobalExtensionRepoVersionSha256OK) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256OK  %+v", 200, o.Payload)
}

func (o *GetGlobalExtensionRepoVersionSha256OK) GetPayload() string {
	return o.Payload
}

func (o *GetGlobalExtensionRepoVersionSha256OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalExtensionRepoVersionSha256BadRequest creates a GetGlobalExtensionRepoVersionSha256BadRequest with default headers values
func NewGetGlobalExtensionRepoVersionSha256BadRequest() *GetGlobalExtensionRepoVersionSha256BadRequest {
	return &GetGlobalExtensionRepoVersionSha256BadRequest{}
}

/*
GetGlobalExtensionRepoVersionSha256BadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetGlobalExtensionRepoVersionSha256BadRequest struct {
}

// IsSuccess returns true when this get global extension repo version sha256 bad request response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get global extension repo version sha256 bad request response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 bad request response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get global extension repo version sha256 bad request response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 bad request response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGlobalExtensionRepoVersionSha256BadRequest) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256BadRequest ", 400)
}

func (o *GetGlobalExtensionRepoVersionSha256BadRequest) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256BadRequest ", 400)
}

func (o *GetGlobalExtensionRepoVersionSha256BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGlobalExtensionRepoVersionSha256Unauthorized creates a GetGlobalExtensionRepoVersionSha256Unauthorized with default headers values
func NewGetGlobalExtensionRepoVersionSha256Unauthorized() *GetGlobalExtensionRepoVersionSha256Unauthorized {
	return &GetGlobalExtensionRepoVersionSha256Unauthorized{}
}

/*
GetGlobalExtensionRepoVersionSha256Unauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetGlobalExtensionRepoVersionSha256Unauthorized struct {
}

// IsSuccess returns true when this get global extension repo version sha256 unauthorized response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get global extension repo version sha256 unauthorized response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 unauthorized response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get global extension repo version sha256 unauthorized response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 unauthorized response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Unauthorized ", 401)
}

func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Unauthorized ", 401)
}

func (o *GetGlobalExtensionRepoVersionSha256Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGlobalExtensionRepoVersionSha256Forbidden creates a GetGlobalExtensionRepoVersionSha256Forbidden with default headers values
func NewGetGlobalExtensionRepoVersionSha256Forbidden() *GetGlobalExtensionRepoVersionSha256Forbidden {
	return &GetGlobalExtensionRepoVersionSha256Forbidden{}
}

/*
GetGlobalExtensionRepoVersionSha256Forbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetGlobalExtensionRepoVersionSha256Forbidden struct {
}

// IsSuccess returns true when this get global extension repo version sha256 forbidden response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get global extension repo version sha256 forbidden response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 forbidden response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get global extension repo version sha256 forbidden response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 forbidden response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGlobalExtensionRepoVersionSha256Forbidden) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Forbidden ", 403)
}

func (o *GetGlobalExtensionRepoVersionSha256Forbidden) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Forbidden ", 403)
}

func (o *GetGlobalExtensionRepoVersionSha256Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGlobalExtensionRepoVersionSha256NotFound creates a GetGlobalExtensionRepoVersionSha256NotFound with default headers values
func NewGetGlobalExtensionRepoVersionSha256NotFound() *GetGlobalExtensionRepoVersionSha256NotFound {
	return &GetGlobalExtensionRepoVersionSha256NotFound{}
}

/*
GetGlobalExtensionRepoVersionSha256NotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetGlobalExtensionRepoVersionSha256NotFound struct {
}

// IsSuccess returns true when this get global extension repo version sha256 not found response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get global extension repo version sha256 not found response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 not found response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get global extension repo version sha256 not found response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 not found response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGlobalExtensionRepoVersionSha256NotFound) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256NotFound ", 404)
}

func (o *GetGlobalExtensionRepoVersionSha256NotFound) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256NotFound ", 404)
}

func (o *GetGlobalExtensionRepoVersionSha256NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGlobalExtensionRepoVersionSha256Conflict creates a GetGlobalExtensionRepoVersionSha256Conflict with default headers values
func NewGetGlobalExtensionRepoVersionSha256Conflict() *GetGlobalExtensionRepoVersionSha256Conflict {
	return &GetGlobalExtensionRepoVersionSha256Conflict{}
}

/*
GetGlobalExtensionRepoVersionSha256Conflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetGlobalExtensionRepoVersionSha256Conflict struct {
}

// IsSuccess returns true when this get global extension repo version sha256 conflict response has a 2xx status code
func (o *GetGlobalExtensionRepoVersionSha256Conflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get global extension repo version sha256 conflict response has a 3xx status code
func (o *GetGlobalExtensionRepoVersionSha256Conflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get global extension repo version sha256 conflict response has a 4xx status code
func (o *GetGlobalExtensionRepoVersionSha256Conflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get global extension repo version sha256 conflict response has a 5xx status code
func (o *GetGlobalExtensionRepoVersionSha256Conflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get global extension repo version sha256 conflict response a status code equal to that given
func (o *GetGlobalExtensionRepoVersionSha256Conflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetGlobalExtensionRepoVersionSha256Conflict) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Conflict ", 409)
}

func (o *GetGlobalExtensionRepoVersionSha256Conflict) String() string {
	return fmt.Sprintf("[GET /extension-repository/{groupId}/{artifactId}/{version}/sha256][%d] getGlobalExtensionRepoVersionSha256Conflict ", 409)
}

func (o *GetGlobalExtensionRepoVersionSha256Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
