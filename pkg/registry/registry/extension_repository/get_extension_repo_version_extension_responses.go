// Code generated by go-swagger; DO NOT EDIT.

package extension_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetExtensionRepoVersionExtensionReader is a Reader for the GetExtensionRepoVersionExtension structure.
type GetExtensionRepoVersionExtensionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExtensionRepoVersionExtensionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExtensionRepoVersionExtensionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExtensionRepoVersionExtensionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExtensionRepoVersionExtensionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExtensionRepoVersionExtensionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExtensionRepoVersionExtensionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetExtensionRepoVersionExtensionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExtensionRepoVersionExtensionOK creates a GetExtensionRepoVersionExtensionOK with default headers values
func NewGetExtensionRepoVersionExtensionOK() *GetExtensionRepoVersionExtensionOK {
	return &GetExtensionRepoVersionExtensionOK{}
}

/* GetExtensionRepoVersionExtensionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExtensionRepoVersionExtensionOK struct {
	Payload *models.Extension
}

func (o *GetExtensionRepoVersionExtensionOK) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionOK  %+v", 200, o.Payload)
}
func (o *GetExtensionRepoVersionExtensionOK) GetPayload() *models.Extension {
	return o.Payload
}

func (o *GetExtensionRepoVersionExtensionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Extension)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExtensionRepoVersionExtensionBadRequest creates a GetExtensionRepoVersionExtensionBadRequest with default headers values
func NewGetExtensionRepoVersionExtensionBadRequest() *GetExtensionRepoVersionExtensionBadRequest {
	return &GetExtensionRepoVersionExtensionBadRequest{}
}

/* GetExtensionRepoVersionExtensionBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetExtensionRepoVersionExtensionBadRequest struct {
}

func (o *GetExtensionRepoVersionExtensionBadRequest) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionBadRequest ", 400)
}

func (o *GetExtensionRepoVersionExtensionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionExtensionUnauthorized creates a GetExtensionRepoVersionExtensionUnauthorized with default headers values
func NewGetExtensionRepoVersionExtensionUnauthorized() *GetExtensionRepoVersionExtensionUnauthorized {
	return &GetExtensionRepoVersionExtensionUnauthorized{}
}

/* GetExtensionRepoVersionExtensionUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetExtensionRepoVersionExtensionUnauthorized struct {
}

func (o *GetExtensionRepoVersionExtensionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionUnauthorized ", 401)
}

func (o *GetExtensionRepoVersionExtensionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionExtensionForbidden creates a GetExtensionRepoVersionExtensionForbidden with default headers values
func NewGetExtensionRepoVersionExtensionForbidden() *GetExtensionRepoVersionExtensionForbidden {
	return &GetExtensionRepoVersionExtensionForbidden{}
}

/* GetExtensionRepoVersionExtensionForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetExtensionRepoVersionExtensionForbidden struct {
}

func (o *GetExtensionRepoVersionExtensionForbidden) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionForbidden ", 403)
}

func (o *GetExtensionRepoVersionExtensionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionExtensionNotFound creates a GetExtensionRepoVersionExtensionNotFound with default headers values
func NewGetExtensionRepoVersionExtensionNotFound() *GetExtensionRepoVersionExtensionNotFound {
	return &GetExtensionRepoVersionExtensionNotFound{}
}

/* GetExtensionRepoVersionExtensionNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetExtensionRepoVersionExtensionNotFound struct {
}

func (o *GetExtensionRepoVersionExtensionNotFound) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionNotFound ", 404)
}

func (o *GetExtensionRepoVersionExtensionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExtensionRepoVersionExtensionConflict creates a GetExtensionRepoVersionExtensionConflict with default headers values
func NewGetExtensionRepoVersionExtensionConflict() *GetExtensionRepoVersionExtensionConflict {
	return &GetExtensionRepoVersionExtensionConflict{}
}

/* GetExtensionRepoVersionExtensionConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GetExtensionRepoVersionExtensionConflict struct {
}

func (o *GetExtensionRepoVersionExtensionConflict) Error() string {
	return fmt.Sprintf("[GET /extension-repository/{bucketName}/{groupId}/{artifactId}/{version}/extensions/{name}][%d] getExtensionRepoVersionExtensionConflict ", 409)
}

func (o *GetExtensionRepoVersionExtensionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
