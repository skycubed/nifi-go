// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateAccessTokenByTryingAllProvidersReader is a Reader for the CreateAccessTokenByTryingAllProviders structure.
type CreateAccessTokenByTryingAllProvidersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccessTokenByTryingAllProvidersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAccessTokenByTryingAllProvidersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccessTokenByTryingAllProvidersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAccessTokenByTryingAllProvidersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAccessTokenByTryingAllProvidersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAccessTokenByTryingAllProvidersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAccessTokenByTryingAllProvidersOK creates a CreateAccessTokenByTryingAllProvidersOK with default headers values
func NewCreateAccessTokenByTryingAllProvidersOK() *CreateAccessTokenByTryingAllProvidersOK {
	return &CreateAccessTokenByTryingAllProvidersOK{}
}

/*
CreateAccessTokenByTryingAllProvidersOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateAccessTokenByTryingAllProvidersOK struct {
	Payload string
}

// IsSuccess returns true when this create access token by trying all providers o k response has a 2xx status code
func (o *CreateAccessTokenByTryingAllProvidersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create access token by trying all providers o k response has a 3xx status code
func (o *CreateAccessTokenByTryingAllProvidersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create access token by trying all providers o k response has a 4xx status code
func (o *CreateAccessTokenByTryingAllProvidersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create access token by trying all providers o k response has a 5xx status code
func (o *CreateAccessTokenByTryingAllProvidersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create access token by trying all providers o k response a status code equal to that given
func (o *CreateAccessTokenByTryingAllProvidersOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateAccessTokenByTryingAllProvidersOK) Error() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersOK  %+v", 200, o.Payload)
}

func (o *CreateAccessTokenByTryingAllProvidersOK) String() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersOK  %+v", 200, o.Payload)
}

func (o *CreateAccessTokenByTryingAllProvidersOK) GetPayload() string {
	return o.Payload
}

func (o *CreateAccessTokenByTryingAllProvidersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccessTokenByTryingAllProvidersBadRequest creates a CreateAccessTokenByTryingAllProvidersBadRequest with default headers values
func NewCreateAccessTokenByTryingAllProvidersBadRequest() *CreateAccessTokenByTryingAllProvidersBadRequest {
	return &CreateAccessTokenByTryingAllProvidersBadRequest{}
}

/*
CreateAccessTokenByTryingAllProvidersBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateAccessTokenByTryingAllProvidersBadRequest struct {
}

// IsSuccess returns true when this create access token by trying all providers bad request response has a 2xx status code
func (o *CreateAccessTokenByTryingAllProvidersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create access token by trying all providers bad request response has a 3xx status code
func (o *CreateAccessTokenByTryingAllProvidersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create access token by trying all providers bad request response has a 4xx status code
func (o *CreateAccessTokenByTryingAllProvidersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create access token by trying all providers bad request response has a 5xx status code
func (o *CreateAccessTokenByTryingAllProvidersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create access token by trying all providers bad request response a status code equal to that given
func (o *CreateAccessTokenByTryingAllProvidersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateAccessTokenByTryingAllProvidersBadRequest) Error() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersBadRequest ", 400)
}

func (o *CreateAccessTokenByTryingAllProvidersBadRequest) String() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersBadRequest ", 400)
}

func (o *CreateAccessTokenByTryingAllProvidersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenByTryingAllProvidersUnauthorized creates a CreateAccessTokenByTryingAllProvidersUnauthorized with default headers values
func NewCreateAccessTokenByTryingAllProvidersUnauthorized() *CreateAccessTokenByTryingAllProvidersUnauthorized {
	return &CreateAccessTokenByTryingAllProvidersUnauthorized{}
}

/*
CreateAccessTokenByTryingAllProvidersUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateAccessTokenByTryingAllProvidersUnauthorized struct {
}

// IsSuccess returns true when this create access token by trying all providers unauthorized response has a 2xx status code
func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create access token by trying all providers unauthorized response has a 3xx status code
func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create access token by trying all providers unauthorized response has a 4xx status code
func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create access token by trying all providers unauthorized response has a 5xx status code
func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create access token by trying all providers unauthorized response a status code equal to that given
func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersUnauthorized ", 401)
}

func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) String() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersUnauthorized ", 401)
}

func (o *CreateAccessTokenByTryingAllProvidersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenByTryingAllProvidersConflict creates a CreateAccessTokenByTryingAllProvidersConflict with default headers values
func NewCreateAccessTokenByTryingAllProvidersConflict() *CreateAccessTokenByTryingAllProvidersConflict {
	return &CreateAccessTokenByTryingAllProvidersConflict{}
}

/*
CreateAccessTokenByTryingAllProvidersConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid. The NiFi Registry may not be configured to support login with username/password.
*/
type CreateAccessTokenByTryingAllProvidersConflict struct {
}

// IsSuccess returns true when this create access token by trying all providers conflict response has a 2xx status code
func (o *CreateAccessTokenByTryingAllProvidersConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create access token by trying all providers conflict response has a 3xx status code
func (o *CreateAccessTokenByTryingAllProvidersConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create access token by trying all providers conflict response has a 4xx status code
func (o *CreateAccessTokenByTryingAllProvidersConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create access token by trying all providers conflict response has a 5xx status code
func (o *CreateAccessTokenByTryingAllProvidersConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create access token by trying all providers conflict response a status code equal to that given
func (o *CreateAccessTokenByTryingAllProvidersConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateAccessTokenByTryingAllProvidersConflict) Error() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersConflict ", 409)
}

func (o *CreateAccessTokenByTryingAllProvidersConflict) String() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersConflict ", 409)
}

func (o *CreateAccessTokenByTryingAllProvidersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenByTryingAllProvidersInternalServerError creates a CreateAccessTokenByTryingAllProvidersInternalServerError with default headers values
func NewCreateAccessTokenByTryingAllProvidersInternalServerError() *CreateAccessTokenByTryingAllProvidersInternalServerError {
	return &CreateAccessTokenByTryingAllProvidersInternalServerError{}
}

/*
CreateAccessTokenByTryingAllProvidersInternalServerError describes a response with status code 500, with default header values.

NiFi Registry was unable to complete the request because an unexpected error occurred.
*/
type CreateAccessTokenByTryingAllProvidersInternalServerError struct {
}

// IsSuccess returns true when this create access token by trying all providers internal server error response has a 2xx status code
func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create access token by trying all providers internal server error response has a 3xx status code
func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create access token by trying all providers internal server error response has a 4xx status code
func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create access token by trying all providers internal server error response has a 5xx status code
func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create access token by trying all providers internal server error response a status code equal to that given
func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersInternalServerError ", 500)
}

func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) String() string {
	return fmt.Sprintf("[POST /access/token][%d] createAccessTokenByTryingAllProvidersInternalServerError ", 500)
}

func (o *CreateAccessTokenByTryingAllProvidersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
