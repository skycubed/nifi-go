// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetIdentityProviderUsageInstructionsReader is a Reader for the GetIdentityProviderUsageInstructions structure.
type GetIdentityProviderUsageInstructionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityProviderUsageInstructionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityProviderUsageInstructionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityProviderUsageInstructionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetIdentityProviderUsageInstructionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityProviderUsageInstructionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /access/token/identity-provider/usage] getIdentityProviderUsageInstructions", response, response.Code())
	}
}

// NewGetIdentityProviderUsageInstructionsOK creates a GetIdentityProviderUsageInstructionsOK with default headers values
func NewGetIdentityProviderUsageInstructionsOK() *GetIdentityProviderUsageInstructionsOK {
	return &GetIdentityProviderUsageInstructionsOK{}
}

/*
GetIdentityProviderUsageInstructionsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetIdentityProviderUsageInstructionsOK struct {
	Payload string
}

// IsSuccess returns true when this get identity provider usage instructions o k response has a 2xx status code
func (o *GetIdentityProviderUsageInstructionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identity provider usage instructions o k response has a 3xx status code
func (o *GetIdentityProviderUsageInstructionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity provider usage instructions o k response has a 4xx status code
func (o *GetIdentityProviderUsageInstructionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identity provider usage instructions o k response has a 5xx status code
func (o *GetIdentityProviderUsageInstructionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity provider usage instructions o k response a status code equal to that given
func (o *GetIdentityProviderUsageInstructionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get identity provider usage instructions o k response
func (o *GetIdentityProviderUsageInstructionsOK) Code() int {
	return 200
}

func (o *GetIdentityProviderUsageInstructionsOK) Error() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsOK  %+v", 200, o.Payload)
}

func (o *GetIdentityProviderUsageInstructionsOK) String() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsOK  %+v", 200, o.Payload)
}

func (o *GetIdentityProviderUsageInstructionsOK) GetPayload() string {
	return o.Payload
}

func (o *GetIdentityProviderUsageInstructionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityProviderUsageInstructionsBadRequest creates a GetIdentityProviderUsageInstructionsBadRequest with default headers values
func NewGetIdentityProviderUsageInstructionsBadRequest() *GetIdentityProviderUsageInstructionsBadRequest {
	return &GetIdentityProviderUsageInstructionsBadRequest{}
}

/*
GetIdentityProviderUsageInstructionsBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetIdentityProviderUsageInstructionsBadRequest struct {
}

// IsSuccess returns true when this get identity provider usage instructions bad request response has a 2xx status code
func (o *GetIdentityProviderUsageInstructionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity provider usage instructions bad request response has a 3xx status code
func (o *GetIdentityProviderUsageInstructionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity provider usage instructions bad request response has a 4xx status code
func (o *GetIdentityProviderUsageInstructionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity provider usage instructions bad request response has a 5xx status code
func (o *GetIdentityProviderUsageInstructionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity provider usage instructions bad request response a status code equal to that given
func (o *GetIdentityProviderUsageInstructionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get identity provider usage instructions bad request response
func (o *GetIdentityProviderUsageInstructionsBadRequest) Code() int {
	return 400
}

func (o *GetIdentityProviderUsageInstructionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsBadRequest ", 400)
}

func (o *GetIdentityProviderUsageInstructionsBadRequest) String() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsBadRequest ", 400)
}

func (o *GetIdentityProviderUsageInstructionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIdentityProviderUsageInstructionsConflict creates a GetIdentityProviderUsageInstructionsConflict with default headers values
func NewGetIdentityProviderUsageInstructionsConflict() *GetIdentityProviderUsageInstructionsConflict {
	return &GetIdentityProviderUsageInstructionsConflict{}
}

/*
GetIdentityProviderUsageInstructionsConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid. The NiFi Registry may not be configured to support login with customized credentials.
*/
type GetIdentityProviderUsageInstructionsConflict struct {
}

// IsSuccess returns true when this get identity provider usage instructions conflict response has a 2xx status code
func (o *GetIdentityProviderUsageInstructionsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity provider usage instructions conflict response has a 3xx status code
func (o *GetIdentityProviderUsageInstructionsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity provider usage instructions conflict response has a 4xx status code
func (o *GetIdentityProviderUsageInstructionsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity provider usage instructions conflict response has a 5xx status code
func (o *GetIdentityProviderUsageInstructionsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity provider usage instructions conflict response a status code equal to that given
func (o *GetIdentityProviderUsageInstructionsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get identity provider usage instructions conflict response
func (o *GetIdentityProviderUsageInstructionsConflict) Code() int {
	return 409
}

func (o *GetIdentityProviderUsageInstructionsConflict) Error() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsConflict ", 409)
}

func (o *GetIdentityProviderUsageInstructionsConflict) String() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsConflict ", 409)
}

func (o *GetIdentityProviderUsageInstructionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIdentityProviderUsageInstructionsInternalServerError creates a GetIdentityProviderUsageInstructionsInternalServerError with default headers values
func NewGetIdentityProviderUsageInstructionsInternalServerError() *GetIdentityProviderUsageInstructionsInternalServerError {
	return &GetIdentityProviderUsageInstructionsInternalServerError{}
}

/*
GetIdentityProviderUsageInstructionsInternalServerError describes a response with status code 500, with default header values.

NiFi Registry was unable to complete the request because an unexpected error occurred.
*/
type GetIdentityProviderUsageInstructionsInternalServerError struct {
}

// IsSuccess returns true when this get identity provider usage instructions internal server error response has a 2xx status code
func (o *GetIdentityProviderUsageInstructionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity provider usage instructions internal server error response has a 3xx status code
func (o *GetIdentityProviderUsageInstructionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity provider usage instructions internal server error response has a 4xx status code
func (o *GetIdentityProviderUsageInstructionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identity provider usage instructions internal server error response has a 5xx status code
func (o *GetIdentityProviderUsageInstructionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identity provider usage instructions internal server error response a status code equal to that given
func (o *GetIdentityProviderUsageInstructionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get identity provider usage instructions internal server error response
func (o *GetIdentityProviderUsageInstructionsInternalServerError) Code() int {
	return 500
}

func (o *GetIdentityProviderUsageInstructionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsInternalServerError ", 500)
}

func (o *GetIdentityProviderUsageInstructionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /access/token/identity-provider/usage][%d] getIdentityProviderUsageInstructionsInternalServerError ", 500)
}

func (o *GetIdentityProviderUsageInstructionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
