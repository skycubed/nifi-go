// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogoutCompleteReader is a Reader for the LogoutComplete structure.
type LogoutCompleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogoutCompleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogoutCompleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLogoutCompleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogoutCompleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /access/logout/complete] logoutComplete", response, response.Code())
	}
}

// NewLogoutCompleteOK creates a LogoutCompleteOK with default headers values
func NewLogoutCompleteOK() *LogoutCompleteOK {
	return &LogoutCompleteOK{}
}

/*
LogoutCompleteOK describes a response with status code 200, with default header values.

User was logged out successfully.
*/
type LogoutCompleteOK struct {
}

// IsSuccess returns true when this logout complete o k response has a 2xx status code
func (o *LogoutCompleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this logout complete o k response has a 3xx status code
func (o *LogoutCompleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logout complete o k response has a 4xx status code
func (o *LogoutCompleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this logout complete o k response has a 5xx status code
func (o *LogoutCompleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this logout complete o k response a status code equal to that given
func (o *LogoutCompleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the logout complete o k response
func (o *LogoutCompleteOK) Code() int {
	return 200
}

func (o *LogoutCompleteOK) Error() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteOK ", 200)
}

func (o *LogoutCompleteOK) String() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteOK ", 200)
}

func (o *LogoutCompleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogoutCompleteUnauthorized creates a LogoutCompleteUnauthorized with default headers values
func NewLogoutCompleteUnauthorized() *LogoutCompleteUnauthorized {
	return &LogoutCompleteUnauthorized{}
}

/*
LogoutCompleteUnauthorized describes a response with status code 401, with default header values.

Authentication token provided was empty or not in the correct JWT format.
*/
type LogoutCompleteUnauthorized struct {
}

// IsSuccess returns true when this logout complete unauthorized response has a 2xx status code
func (o *LogoutCompleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logout complete unauthorized response has a 3xx status code
func (o *LogoutCompleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logout complete unauthorized response has a 4xx status code
func (o *LogoutCompleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this logout complete unauthorized response has a 5xx status code
func (o *LogoutCompleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this logout complete unauthorized response a status code equal to that given
func (o *LogoutCompleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the logout complete unauthorized response
func (o *LogoutCompleteUnauthorized) Code() int {
	return 401
}

func (o *LogoutCompleteUnauthorized) Error() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteUnauthorized ", 401)
}

func (o *LogoutCompleteUnauthorized) String() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteUnauthorized ", 401)
}

func (o *LogoutCompleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogoutCompleteInternalServerError creates a LogoutCompleteInternalServerError with default headers values
func NewLogoutCompleteInternalServerError() *LogoutCompleteInternalServerError {
	return &LogoutCompleteInternalServerError{}
}

/*
LogoutCompleteInternalServerError describes a response with status code 500, with default header values.

Client failed to log out.
*/
type LogoutCompleteInternalServerError struct {
}

// IsSuccess returns true when this logout complete internal server error response has a 2xx status code
func (o *LogoutCompleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logout complete internal server error response has a 3xx status code
func (o *LogoutCompleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logout complete internal server error response has a 4xx status code
func (o *LogoutCompleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this logout complete internal server error response has a 5xx status code
func (o *LogoutCompleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this logout complete internal server error response a status code equal to that given
func (o *LogoutCompleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the logout complete internal server error response
func (o *LogoutCompleteInternalServerError) Code() int {
	return 500
}

func (o *LogoutCompleteInternalServerError) Error() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteInternalServerError ", 500)
}

func (o *LogoutCompleteInternalServerError) String() string {
	return fmt.Sprintf("[GET /access/logout/complete][%d] logoutCompleteInternalServerError ", 500)
}

func (o *LogoutCompleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
