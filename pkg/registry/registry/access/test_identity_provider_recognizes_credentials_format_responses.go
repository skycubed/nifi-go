// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TestIdentityProviderRecognizesCredentialsFormatReader is a Reader for the TestIdentityProviderRecognizesCredentialsFormat structure.
type TestIdentityProviderRecognizesCredentialsFormatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestIdentityProviderRecognizesCredentialsFormatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestIdentityProviderRecognizesCredentialsFormatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTestIdentityProviderRecognizesCredentialsFormatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTestIdentityProviderRecognizesCredentialsFormatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTestIdentityProviderRecognizesCredentialsFormatConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTestIdentityProviderRecognizesCredentialsFormatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTestIdentityProviderRecognizesCredentialsFormatOK creates a TestIdentityProviderRecognizesCredentialsFormatOK with default headers values
func NewTestIdentityProviderRecognizesCredentialsFormatOK() *TestIdentityProviderRecognizesCredentialsFormatOK {
	return &TestIdentityProviderRecognizesCredentialsFormatOK{}
}

/* TestIdentityProviderRecognizesCredentialsFormatOK describes a response with status code 200, with default header values.

successful operation
*/
type TestIdentityProviderRecognizesCredentialsFormatOK struct {
	Payload string
}

func (o *TestIdentityProviderRecognizesCredentialsFormatOK) Error() string {
	return fmt.Sprintf("[POST /access/token/identity-provider/test][%d] testIdentityProviderRecognizesCredentialsFormatOK  %+v", 200, o.Payload)
}
func (o *TestIdentityProviderRecognizesCredentialsFormatOK) GetPayload() string {
	return o.Payload
}

func (o *TestIdentityProviderRecognizesCredentialsFormatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestIdentityProviderRecognizesCredentialsFormatBadRequest creates a TestIdentityProviderRecognizesCredentialsFormatBadRequest with default headers values
func NewTestIdentityProviderRecognizesCredentialsFormatBadRequest() *TestIdentityProviderRecognizesCredentialsFormatBadRequest {
	return &TestIdentityProviderRecognizesCredentialsFormatBadRequest{}
}

/* TestIdentityProviderRecognizesCredentialsFormatBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type TestIdentityProviderRecognizesCredentialsFormatBadRequest struct {
}

func (o *TestIdentityProviderRecognizesCredentialsFormatBadRequest) Error() string {
	return fmt.Sprintf("[POST /access/token/identity-provider/test][%d] testIdentityProviderRecognizesCredentialsFormatBadRequest ", 400)
}

func (o *TestIdentityProviderRecognizesCredentialsFormatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestIdentityProviderRecognizesCredentialsFormatUnauthorized creates a TestIdentityProviderRecognizesCredentialsFormatUnauthorized with default headers values
func NewTestIdentityProviderRecognizesCredentialsFormatUnauthorized() *TestIdentityProviderRecognizesCredentialsFormatUnauthorized {
	return &TestIdentityProviderRecognizesCredentialsFormatUnauthorized{}
}

/* TestIdentityProviderRecognizesCredentialsFormatUnauthorized describes a response with status code 401, with default header values.

The format of the credentials were not recognized by the currently configured identity provider.
*/
type TestIdentityProviderRecognizesCredentialsFormatUnauthorized struct {
}

func (o *TestIdentityProviderRecognizesCredentialsFormatUnauthorized) Error() string {
	return fmt.Sprintf("[POST /access/token/identity-provider/test][%d] testIdentityProviderRecognizesCredentialsFormatUnauthorized ", 401)
}

func (o *TestIdentityProviderRecognizesCredentialsFormatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestIdentityProviderRecognizesCredentialsFormatConflict creates a TestIdentityProviderRecognizesCredentialsFormatConflict with default headers values
func NewTestIdentityProviderRecognizesCredentialsFormatConflict() *TestIdentityProviderRecognizesCredentialsFormatConflict {
	return &TestIdentityProviderRecognizesCredentialsFormatConflict{}
}

/* TestIdentityProviderRecognizesCredentialsFormatConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid. The NiFi Registry may not be configured to support login with customized credentials.
*/
type TestIdentityProviderRecognizesCredentialsFormatConflict struct {
}

func (o *TestIdentityProviderRecognizesCredentialsFormatConflict) Error() string {
	return fmt.Sprintf("[POST /access/token/identity-provider/test][%d] testIdentityProviderRecognizesCredentialsFormatConflict ", 409)
}

func (o *TestIdentityProviderRecognizesCredentialsFormatConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestIdentityProviderRecognizesCredentialsFormatInternalServerError creates a TestIdentityProviderRecognizesCredentialsFormatInternalServerError with default headers values
func NewTestIdentityProviderRecognizesCredentialsFormatInternalServerError() *TestIdentityProviderRecognizesCredentialsFormatInternalServerError {
	return &TestIdentityProviderRecognizesCredentialsFormatInternalServerError{}
}

/* TestIdentityProviderRecognizesCredentialsFormatInternalServerError describes a response with status code 500, with default header values.

NiFi Registry was unable to complete the request because an unexpected error occurred.
*/
type TestIdentityProviderRecognizesCredentialsFormatInternalServerError struct {
}

func (o *TestIdentityProviderRecognizesCredentialsFormatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /access/token/identity-provider/test][%d] testIdentityProviderRecognizesCredentialsFormatInternalServerError ", 500)
}

func (o *TestIdentityProviderRecognizesCredentialsFormatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
