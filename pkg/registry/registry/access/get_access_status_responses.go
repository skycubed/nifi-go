// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GetAccessStatusReader is a Reader for the GetAccessStatus structure.
type GetAccessStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccessStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccessStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewGetAccessStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccessStatusOK creates a GetAccessStatusOK with default headers values
func NewGetAccessStatusOK() *GetAccessStatusOK {
	return &GetAccessStatusOK{}
}

/* GetAccessStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAccessStatusOK struct {
	Payload *models.CurrentUser
}

func (o *GetAccessStatusOK) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusOK  %+v", 200, o.Payload)
}
func (o *GetAccessStatusOK) GetPayload() *models.CurrentUser {
	return o.Payload
}

func (o *GetAccessStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CurrentUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessStatusConflict creates a GetAccessStatusConflict with default headers values
func NewGetAccessStatusConflict() *GetAccessStatusConflict {
	return &GetAccessStatusConflict{}
}

/* GetAccessStatusConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid. The NiFi Registry might be running unsecured.
*/
type GetAccessStatusConflict struct {
}

func (o *GetAccessStatusConflict) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusConflict ", 409)
}

func (o *GetAccessStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
