// Code generated by go-swagger; DO NOT EDIT.

package flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/registry/models"
)

// GlobalGetFlowVersionReader is a Reader for the GlobalGetFlowVersion structure.
type GlobalGetFlowVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GlobalGetFlowVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGlobalGetFlowVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGlobalGetFlowVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGlobalGetFlowVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGlobalGetFlowVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGlobalGetFlowVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGlobalGetFlowVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGlobalGetFlowVersionOK creates a GlobalGetFlowVersionOK with default headers values
func NewGlobalGetFlowVersionOK() *GlobalGetFlowVersionOK {
	return &GlobalGetFlowVersionOK{}
}

/* GlobalGetFlowVersionOK describes a response with status code 200, with default header values.

successful operation
*/
type GlobalGetFlowVersionOK struct {
	Payload *models.VersionedFlowSnapshot
}

func (o *GlobalGetFlowVersionOK) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionOK  %+v", 200, o.Payload)
}
func (o *GlobalGetFlowVersionOK) GetPayload() *models.VersionedFlowSnapshot {
	return o.Payload
}

func (o *GlobalGetFlowVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowSnapshot)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGlobalGetFlowVersionBadRequest creates a GlobalGetFlowVersionBadRequest with default headers values
func NewGlobalGetFlowVersionBadRequest() *GlobalGetFlowVersionBadRequest {
	return &GlobalGetFlowVersionBadRequest{}
}

/* GlobalGetFlowVersionBadRequest describes a response with status code 400, with default header values.

NiFi Registry was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GlobalGetFlowVersionBadRequest struct {
}

func (o *GlobalGetFlowVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionBadRequest ", 400)
}

func (o *GlobalGetFlowVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalGetFlowVersionUnauthorized creates a GlobalGetFlowVersionUnauthorized with default headers values
func NewGlobalGetFlowVersionUnauthorized() *GlobalGetFlowVersionUnauthorized {
	return &GlobalGetFlowVersionUnauthorized{}
}

/* GlobalGetFlowVersionUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GlobalGetFlowVersionUnauthorized struct {
}

func (o *GlobalGetFlowVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionUnauthorized ", 401)
}

func (o *GlobalGetFlowVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalGetFlowVersionForbidden creates a GlobalGetFlowVersionForbidden with default headers values
func NewGlobalGetFlowVersionForbidden() *GlobalGetFlowVersionForbidden {
	return &GlobalGetFlowVersionForbidden{}
}

/* GlobalGetFlowVersionForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GlobalGetFlowVersionForbidden struct {
}

func (o *GlobalGetFlowVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionForbidden ", 403)
}

func (o *GlobalGetFlowVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalGetFlowVersionNotFound creates a GlobalGetFlowVersionNotFound with default headers values
func NewGlobalGetFlowVersionNotFound() *GlobalGetFlowVersionNotFound {
	return &GlobalGetFlowVersionNotFound{}
}

/* GlobalGetFlowVersionNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GlobalGetFlowVersionNotFound struct {
}

func (o *GlobalGetFlowVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionNotFound ", 404)
}

func (o *GlobalGetFlowVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalGetFlowVersionConflict creates a GlobalGetFlowVersionConflict with default headers values
func NewGlobalGetFlowVersionConflict() *GlobalGetFlowVersionConflict {
	return &GlobalGetFlowVersionConflict{}
}

/* GlobalGetFlowVersionConflict describes a response with status code 409, with default header values.

NiFi Registry was unable to complete the request because it assumes a server state that is not valid.
*/
type GlobalGetFlowVersionConflict struct {
}

func (o *GlobalGetFlowVersionConflict) Error() string {
	return fmt.Sprintf("[GET /flows/{flowId}/versions/{versionNumber}][%d] globalGetFlowVersionConflict ", 409)
}

func (o *GlobalGetFlowVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
