// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ParameterGroupConfigurationEntity parameter group configuration entity
//
// swagger:model ParameterGroupConfigurationEntity
type ParameterGroupConfigurationEntity struct {

	// The name of the external parameter group to which the provided parameter names apply.
	GroupName string `json:"groupName,omitempty"`

	// The name of the ParameterContext that receives the parameters in this group
	ParameterContextName string `json:"parameterContextName,omitempty"`

	// All fetched parameter names that should be applied.
	ParameterSensitivities map[string]string `json:"parameterSensitivities,omitempty"`

	// True if this group should be synchronized to a ParameterContext, including creating one if it does not exist.
	Synchronized bool `json:"synchronized,omitempty"`
}

// Validate validates this parameter group configuration entity
func (m *ParameterGroupConfigurationEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParameterSensitivities(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// additional properties value enum
var parameterGroupConfigurationEntityParameterSensitivitiesValueEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SENSITIVE","NON_SENSITIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		parameterGroupConfigurationEntityParameterSensitivitiesValueEnum = append(parameterGroupConfigurationEntityParameterSensitivitiesValueEnum, v)
	}
}

func (m *ParameterGroupConfigurationEntity) validateParameterSensitivitiesValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, parameterGroupConfigurationEntityParameterSensitivitiesValueEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ParameterGroupConfigurationEntity) validateParameterSensitivities(formats strfmt.Registry) error {
	if swag.IsZero(m.ParameterSensitivities) { // not required
		return nil
	}

	for k := range m.ParameterSensitivities {

		// value enum
		if err := m.validateParameterSensitivitiesValueEnum("parameterSensitivities"+"."+k, "body", m.ParameterSensitivities[k]); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this parameter group configuration entity based on context it is used
func (m *ParameterGroupConfigurationEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ParameterGroupConfigurationEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ParameterGroupConfigurationEntity) UnmarshalBinary(b []byte) error {
	var res ParameterGroupConfigurationEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
