// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReplayLastEventRequestEntity replay last event request entity
//
// swagger:model ReplayLastEventRequestEntity
type ReplayLastEventRequestEntity struct {

	// The UUID of the component whose last event should be replayed.
	ComponentID string `json:"componentId,omitempty"`

	// Which nodes are to replay their last provenance event.
	// Enum: [ALL PRIMARY]
	Nodes string `json:"nodes,omitempty"`
}

// Validate validates this replay last event request entity
func (m *ReplayLastEventRequestEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var replayLastEventRequestEntityTypeNodesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ALL","PRIMARY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		replayLastEventRequestEntityTypeNodesPropEnum = append(replayLastEventRequestEntityTypeNodesPropEnum, v)
	}
}

const (

	// ReplayLastEventRequestEntityNodesALL captures enum value "ALL"
	ReplayLastEventRequestEntityNodesALL string = "ALL"

	// ReplayLastEventRequestEntityNodesPRIMARY captures enum value "PRIMARY"
	ReplayLastEventRequestEntityNodesPRIMARY string = "PRIMARY"
)

// prop value enum
func (m *ReplayLastEventRequestEntity) validateNodesEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, replayLastEventRequestEntityTypeNodesPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReplayLastEventRequestEntity) validateNodes(formats strfmt.Registry) error {
	if swag.IsZero(m.Nodes) { // not required
		return nil
	}

	// value enum
	if err := m.validateNodesEnum("nodes", "body", m.Nodes); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this replay last event request entity based on context it is used
func (m *ReplayLastEventRequestEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReplayLastEventRequestEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplayLastEventRequestEntity) UnmarshalBinary(b []byte) error {
	var res ReplayLastEventRequestEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
