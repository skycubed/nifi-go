// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlowFileSummaryDTO flow file summary d t o
//
// swagger:model FlowFileSummaryDTO
type FlowFileSummaryDTO struct {

	// The label for the node where this FlowFile resides.
	ClusterNodeAddress string `json:"clusterNodeAddress,omitempty"`

	// The id of the node where this FlowFile resides.
	ClusterNodeID string `json:"clusterNodeId,omitempty"`

	// The FlowFile filename.
	Filename string `json:"filename,omitempty"`

	// Duration since the FlowFile's greatest ancestor entered the flow.
	LineageDuration int64 `json:"lineageDuration,omitempty"`

	// If the FlowFile is penalized.
	Penalized bool `json:"penalized,omitempty"`

	// How long in milliseconds until the FlowFile penalty expires.
	PenaltyExpiresIn int64 `json:"penaltyExpiresIn,omitempty"`

	// The FlowFile's position in the queue.
	Position int32 `json:"position,omitempty"`

	// How long this FlowFile has been enqueued.
	QueuedDuration int64 `json:"queuedDuration,omitempty"`

	// The FlowFile file size.
	Size int64 `json:"size,omitempty"`

	// The URI that can be used to access this FlowFile.
	URI string `json:"uri,omitempty"`

	// The FlowFile UUID.
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this flow file summary d t o
func (m *FlowFileSummaryDTO) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flow file summary d t o based on context it is used
func (m *FlowFileSummaryDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FlowFileSummaryDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FlowFileSummaryDTO) UnmarshalBinary(b []byte) error {
	var res FlowFileSummaryDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
