// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetConnectionReader is a Reader for the GetConnection structure.
type GetConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetConnectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectionOK creates a GetConnectionOK with default headers values
func NewGetConnectionOK() *GetConnectionOK {
	return &GetConnectionOK{}
}

/*
GetConnectionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConnectionOK struct {
	Payload *models.ConnectionEntity
}

// IsSuccess returns true when this get connection o k response has a 2xx status code
func (o *GetConnectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connection o k response has a 3xx status code
func (o *GetConnectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection o k response has a 4xx status code
func (o *GetConnectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection o k response has a 5xx status code
func (o *GetConnectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection o k response a status code equal to that given
func (o *GetConnectionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConnectionOK) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionOK  %+v", 200, o.Payload)
}

func (o *GetConnectionOK) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionOK  %+v", 200, o.Payload)
}

func (o *GetConnectionOK) GetPayload() *models.ConnectionEntity {
	return o.Payload
}

func (o *GetConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionBadRequest creates a GetConnectionBadRequest with default headers values
func NewGetConnectionBadRequest() *GetConnectionBadRequest {
	return &GetConnectionBadRequest{}
}

/*
GetConnectionBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetConnectionBadRequest struct {
}

// IsSuccess returns true when this get connection bad request response has a 2xx status code
func (o *GetConnectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection bad request response has a 3xx status code
func (o *GetConnectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection bad request response has a 4xx status code
func (o *GetConnectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection bad request response has a 5xx status code
func (o *GetConnectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection bad request response a status code equal to that given
func (o *GetConnectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConnectionBadRequest) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionBadRequest ", 400)
}

func (o *GetConnectionBadRequest) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionBadRequest ", 400)
}

func (o *GetConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionUnauthorized creates a GetConnectionUnauthorized with default headers values
func NewGetConnectionUnauthorized() *GetConnectionUnauthorized {
	return &GetConnectionUnauthorized{}
}

/*
GetConnectionUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetConnectionUnauthorized struct {
}

// IsSuccess returns true when this get connection unauthorized response has a 2xx status code
func (o *GetConnectionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection unauthorized response has a 3xx status code
func (o *GetConnectionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection unauthorized response has a 4xx status code
func (o *GetConnectionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection unauthorized response has a 5xx status code
func (o *GetConnectionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection unauthorized response a status code equal to that given
func (o *GetConnectionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConnectionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionUnauthorized ", 401)
}

func (o *GetConnectionUnauthorized) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionUnauthorized ", 401)
}

func (o *GetConnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionForbidden creates a GetConnectionForbidden with default headers values
func NewGetConnectionForbidden() *GetConnectionForbidden {
	return &GetConnectionForbidden{}
}

/*
GetConnectionForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetConnectionForbidden struct {
}

// IsSuccess returns true when this get connection forbidden response has a 2xx status code
func (o *GetConnectionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection forbidden response has a 3xx status code
func (o *GetConnectionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection forbidden response has a 4xx status code
func (o *GetConnectionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection forbidden response has a 5xx status code
func (o *GetConnectionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection forbidden response a status code equal to that given
func (o *GetConnectionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConnectionForbidden) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionForbidden ", 403)
}

func (o *GetConnectionForbidden) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionForbidden ", 403)
}

func (o *GetConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionNotFound creates a GetConnectionNotFound with default headers values
func NewGetConnectionNotFound() *GetConnectionNotFound {
	return &GetConnectionNotFound{}
}

/*
GetConnectionNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetConnectionNotFound struct {
}

// IsSuccess returns true when this get connection not found response has a 2xx status code
func (o *GetConnectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection not found response has a 3xx status code
func (o *GetConnectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection not found response has a 4xx status code
func (o *GetConnectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection not found response has a 5xx status code
func (o *GetConnectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection not found response a status code equal to that given
func (o *GetConnectionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConnectionNotFound) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionNotFound ", 404)
}

func (o *GetConnectionNotFound) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionNotFound ", 404)
}

func (o *GetConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionConflict creates a GetConnectionConflict with default headers values
func NewGetConnectionConflict() *GetConnectionConflict {
	return &GetConnectionConflict{}
}

/*
GetConnectionConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetConnectionConflict struct {
}

// IsSuccess returns true when this get connection conflict response has a 2xx status code
func (o *GetConnectionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection conflict response has a 3xx status code
func (o *GetConnectionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection conflict response has a 4xx status code
func (o *GetConnectionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection conflict response has a 5xx status code
func (o *GetConnectionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection conflict response a status code equal to that given
func (o *GetConnectionConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetConnectionConflict) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionConflict ", 409)
}

func (o *GetConnectionConflict) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionConflict ", 409)
}

func (o *GetConnectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
