// Code generated by go-swagger; DO NOT EDIT.

package provenance_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetOutputContentReader is a Reader for the GetOutputContent structure.
type GetOutputContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputContentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutputContentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutputContentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetOutputContentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutputContentOK creates a GetOutputContentOK with default headers values
func NewGetOutputContentOK() *GetOutputContentOK {
	return &GetOutputContentOK{}
}

/* GetOutputContentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutputContentOK struct {
	Payload models.StreamingOutput
}

func (o *GetOutputContentOK) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentOK  %+v", 200, o.Payload)
}
func (o *GetOutputContentOK) GetPayload() models.StreamingOutput {
	return o.Payload
}

func (o *GetOutputContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputContentBadRequest creates a GetOutputContentBadRequest with default headers values
func NewGetOutputContentBadRequest() *GetOutputContentBadRequest {
	return &GetOutputContentBadRequest{}
}

/* GetOutputContentBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetOutputContentBadRequest struct {
}

func (o *GetOutputContentBadRequest) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentBadRequest ", 400)
}

func (o *GetOutputContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentUnauthorized creates a GetOutputContentUnauthorized with default headers values
func NewGetOutputContentUnauthorized() *GetOutputContentUnauthorized {
	return &GetOutputContentUnauthorized{}
}

/* GetOutputContentUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetOutputContentUnauthorized struct {
}

func (o *GetOutputContentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentUnauthorized ", 401)
}

func (o *GetOutputContentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentForbidden creates a GetOutputContentForbidden with default headers values
func NewGetOutputContentForbidden() *GetOutputContentForbidden {
	return &GetOutputContentForbidden{}
}

/* GetOutputContentForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetOutputContentForbidden struct {
}

func (o *GetOutputContentForbidden) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentForbidden ", 403)
}

func (o *GetOutputContentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentNotFound creates a GetOutputContentNotFound with default headers values
func NewGetOutputContentNotFound() *GetOutputContentNotFound {
	return &GetOutputContentNotFound{}
}

/* GetOutputContentNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetOutputContentNotFound struct {
}

func (o *GetOutputContentNotFound) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentNotFound ", 404)
}

func (o *GetOutputContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentConflict creates a GetOutputContentConflict with default headers values
func NewGetOutputContentConflict() *GetOutputContentConflict {
	return &GetOutputContentConflict{}
}

/* GetOutputContentConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetOutputContentConflict struct {
}

func (o *GetOutputContentConflict) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentConflict ", 409)
}

func (o *GetOutputContentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
