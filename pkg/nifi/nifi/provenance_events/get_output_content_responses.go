// Code generated by go-swagger; DO NOT EDIT.

package provenance_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetOutputContentReader is a Reader for the GetOutputContent structure.
type GetOutputContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputContentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutputContentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutputContentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetOutputContentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /provenance-events/{id}/content/output] getOutputContent", response, response.Code())
	}
}

// NewGetOutputContentOK creates a GetOutputContentOK with default headers values
func NewGetOutputContentOK() *GetOutputContentOK {
	return &GetOutputContentOK{}
}

/*
GetOutputContentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOutputContentOK struct {
	Payload models.StreamingOutput
}

// IsSuccess returns true when this get output content o k response has a 2xx status code
func (o *GetOutputContentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get output content o k response has a 3xx status code
func (o *GetOutputContentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content o k response has a 4xx status code
func (o *GetOutputContentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get output content o k response has a 5xx status code
func (o *GetOutputContentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content o k response a status code equal to that given
func (o *GetOutputContentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get output content o k response
func (o *GetOutputContentOK) Code() int {
	return 200
}

func (o *GetOutputContentOK) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentOK  %+v", 200, o.Payload)
}

func (o *GetOutputContentOK) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentOK  %+v", 200, o.Payload)
}

func (o *GetOutputContentOK) GetPayload() models.StreamingOutput {
	return o.Payload
}

func (o *GetOutputContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputContentBadRequest creates a GetOutputContentBadRequest with default headers values
func NewGetOutputContentBadRequest() *GetOutputContentBadRequest {
	return &GetOutputContentBadRequest{}
}

/*
GetOutputContentBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetOutputContentBadRequest struct {
}

// IsSuccess returns true when this get output content bad request response has a 2xx status code
func (o *GetOutputContentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output content bad request response has a 3xx status code
func (o *GetOutputContentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content bad request response has a 4xx status code
func (o *GetOutputContentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output content bad request response has a 5xx status code
func (o *GetOutputContentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content bad request response a status code equal to that given
func (o *GetOutputContentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get output content bad request response
func (o *GetOutputContentBadRequest) Code() int {
	return 400
}

func (o *GetOutputContentBadRequest) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentBadRequest ", 400)
}

func (o *GetOutputContentBadRequest) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentBadRequest ", 400)
}

func (o *GetOutputContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentUnauthorized creates a GetOutputContentUnauthorized with default headers values
func NewGetOutputContentUnauthorized() *GetOutputContentUnauthorized {
	return &GetOutputContentUnauthorized{}
}

/*
GetOutputContentUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetOutputContentUnauthorized struct {
}

// IsSuccess returns true when this get output content unauthorized response has a 2xx status code
func (o *GetOutputContentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output content unauthorized response has a 3xx status code
func (o *GetOutputContentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content unauthorized response has a 4xx status code
func (o *GetOutputContentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output content unauthorized response has a 5xx status code
func (o *GetOutputContentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content unauthorized response a status code equal to that given
func (o *GetOutputContentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get output content unauthorized response
func (o *GetOutputContentUnauthorized) Code() int {
	return 401
}

func (o *GetOutputContentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentUnauthorized ", 401)
}

func (o *GetOutputContentUnauthorized) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentUnauthorized ", 401)
}

func (o *GetOutputContentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentForbidden creates a GetOutputContentForbidden with default headers values
func NewGetOutputContentForbidden() *GetOutputContentForbidden {
	return &GetOutputContentForbidden{}
}

/*
GetOutputContentForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetOutputContentForbidden struct {
}

// IsSuccess returns true when this get output content forbidden response has a 2xx status code
func (o *GetOutputContentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output content forbidden response has a 3xx status code
func (o *GetOutputContentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content forbidden response has a 4xx status code
func (o *GetOutputContentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output content forbidden response has a 5xx status code
func (o *GetOutputContentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content forbidden response a status code equal to that given
func (o *GetOutputContentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get output content forbidden response
func (o *GetOutputContentForbidden) Code() int {
	return 403
}

func (o *GetOutputContentForbidden) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentForbidden ", 403)
}

func (o *GetOutputContentForbidden) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentForbidden ", 403)
}

func (o *GetOutputContentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentNotFound creates a GetOutputContentNotFound with default headers values
func NewGetOutputContentNotFound() *GetOutputContentNotFound {
	return &GetOutputContentNotFound{}
}

/*
GetOutputContentNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetOutputContentNotFound struct {
}

// IsSuccess returns true when this get output content not found response has a 2xx status code
func (o *GetOutputContentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output content not found response has a 3xx status code
func (o *GetOutputContentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content not found response has a 4xx status code
func (o *GetOutputContentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output content not found response has a 5xx status code
func (o *GetOutputContentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content not found response a status code equal to that given
func (o *GetOutputContentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get output content not found response
func (o *GetOutputContentNotFound) Code() int {
	return 404
}

func (o *GetOutputContentNotFound) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentNotFound ", 404)
}

func (o *GetOutputContentNotFound) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentNotFound ", 404)
}

func (o *GetOutputContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputContentConflict creates a GetOutputContentConflict with default headers values
func NewGetOutputContentConflict() *GetOutputContentConflict {
	return &GetOutputContentConflict{}
}

/*
GetOutputContentConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetOutputContentConflict struct {
}

// IsSuccess returns true when this get output content conflict response has a 2xx status code
func (o *GetOutputContentConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output content conflict response has a 3xx status code
func (o *GetOutputContentConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output content conflict response has a 4xx status code
func (o *GetOutputContentConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output content conflict response has a 5xx status code
func (o *GetOutputContentConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get output content conflict response a status code equal to that given
func (o *GetOutputContentConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get output content conflict response
func (o *GetOutputContentConflict) Code() int {
	return 409
}

func (o *GetOutputContentConflict) Error() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentConflict ", 409)
}

func (o *GetOutputContentConflict) String() string {
	return fmt.Sprintf("[GET /provenance-events/{id}/content/output][%d] getOutputContentConflict ", 409)
}

func (o *GetOutputContentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
