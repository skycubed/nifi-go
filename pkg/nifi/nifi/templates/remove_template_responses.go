// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// RemoveTemplateReader is a Reader for the RemoveTemplate structure.
type RemoveTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /templates/{id}] removeTemplate", response, response.Code())
	}
}

// NewRemoveTemplateOK creates a RemoveTemplateOK with default headers values
func NewRemoveTemplateOK() *RemoveTemplateOK {
	return &RemoveTemplateOK{}
}

/*
RemoveTemplateOK describes a response with status code 200, with default header values.

successful operation
*/
type RemoveTemplateOK struct {
	Payload *models.TemplateEntity
}

// IsSuccess returns true when this remove template o k response has a 2xx status code
func (o *RemoveTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove template o k response has a 3xx status code
func (o *RemoveTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template o k response has a 4xx status code
func (o *RemoveTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove template o k response has a 5xx status code
func (o *RemoveTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template o k response a status code equal to that given
func (o *RemoveTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove template o k response
func (o *RemoveTemplateOK) Code() int {
	return 200
}

func (o *RemoveTemplateOK) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateOK  %+v", 200, o.Payload)
}

func (o *RemoveTemplateOK) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateOK  %+v", 200, o.Payload)
}

func (o *RemoveTemplateOK) GetPayload() *models.TemplateEntity {
	return o.Payload
}

func (o *RemoveTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TemplateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTemplateBadRequest creates a RemoveTemplateBadRequest with default headers values
func NewRemoveTemplateBadRequest() *RemoveTemplateBadRequest {
	return &RemoveTemplateBadRequest{}
}

/*
RemoveTemplateBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type RemoveTemplateBadRequest struct {
}

// IsSuccess returns true when this remove template bad request response has a 2xx status code
func (o *RemoveTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove template bad request response has a 3xx status code
func (o *RemoveTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template bad request response has a 4xx status code
func (o *RemoveTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove template bad request response has a 5xx status code
func (o *RemoveTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template bad request response a status code equal to that given
func (o *RemoveTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove template bad request response
func (o *RemoveTemplateBadRequest) Code() int {
	return 400
}

func (o *RemoveTemplateBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateBadRequest ", 400)
}

func (o *RemoveTemplateBadRequest) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateBadRequest ", 400)
}

func (o *RemoveTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveTemplateUnauthorized creates a RemoveTemplateUnauthorized with default headers values
func NewRemoveTemplateUnauthorized() *RemoveTemplateUnauthorized {
	return &RemoveTemplateUnauthorized{}
}

/*
RemoveTemplateUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type RemoveTemplateUnauthorized struct {
}

// IsSuccess returns true when this remove template unauthorized response has a 2xx status code
func (o *RemoveTemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove template unauthorized response has a 3xx status code
func (o *RemoveTemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template unauthorized response has a 4xx status code
func (o *RemoveTemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove template unauthorized response has a 5xx status code
func (o *RemoveTemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template unauthorized response a status code equal to that given
func (o *RemoveTemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove template unauthorized response
func (o *RemoveTemplateUnauthorized) Code() int {
	return 401
}

func (o *RemoveTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateUnauthorized ", 401)
}

func (o *RemoveTemplateUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateUnauthorized ", 401)
}

func (o *RemoveTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveTemplateForbidden creates a RemoveTemplateForbidden with default headers values
func NewRemoveTemplateForbidden() *RemoveTemplateForbidden {
	return &RemoveTemplateForbidden{}
}

/*
RemoveTemplateForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type RemoveTemplateForbidden struct {
}

// IsSuccess returns true when this remove template forbidden response has a 2xx status code
func (o *RemoveTemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove template forbidden response has a 3xx status code
func (o *RemoveTemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template forbidden response has a 4xx status code
func (o *RemoveTemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove template forbidden response has a 5xx status code
func (o *RemoveTemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template forbidden response a status code equal to that given
func (o *RemoveTemplateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the remove template forbidden response
func (o *RemoveTemplateForbidden) Code() int {
	return 403
}

func (o *RemoveTemplateForbidden) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateForbidden ", 403)
}

func (o *RemoveTemplateForbidden) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateForbidden ", 403)
}

func (o *RemoveTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveTemplateNotFound creates a RemoveTemplateNotFound with default headers values
func NewRemoveTemplateNotFound() *RemoveTemplateNotFound {
	return &RemoveTemplateNotFound{}
}

/*
RemoveTemplateNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type RemoveTemplateNotFound struct {
}

// IsSuccess returns true when this remove template not found response has a 2xx status code
func (o *RemoveTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove template not found response has a 3xx status code
func (o *RemoveTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template not found response has a 4xx status code
func (o *RemoveTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove template not found response has a 5xx status code
func (o *RemoveTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template not found response a status code equal to that given
func (o *RemoveTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove template not found response
func (o *RemoveTemplateNotFound) Code() int {
	return 404
}

func (o *RemoveTemplateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateNotFound ", 404)
}

func (o *RemoveTemplateNotFound) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateNotFound ", 404)
}

func (o *RemoveTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveTemplateConflict creates a RemoveTemplateConflict with default headers values
func NewRemoveTemplateConflict() *RemoveTemplateConflict {
	return &RemoveTemplateConflict{}
}

/*
RemoveTemplateConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type RemoveTemplateConflict struct {
}

// IsSuccess returns true when this remove template conflict response has a 2xx status code
func (o *RemoveTemplateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove template conflict response has a 3xx status code
func (o *RemoveTemplateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove template conflict response has a 4xx status code
func (o *RemoveTemplateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove template conflict response has a 5xx status code
func (o *RemoveTemplateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this remove template conflict response a status code equal to that given
func (o *RemoveTemplateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the remove template conflict response
func (o *RemoveTemplateConflict) Code() int {
	return 409
}

func (o *RemoveTemplateConflict) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateConflict ", 409)
}

func (o *RemoveTemplateConflict) String() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] removeTemplateConflict ", 409)
}

func (o *RemoveTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
