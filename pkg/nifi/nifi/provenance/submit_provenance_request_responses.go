// Code generated by go-swagger; DO NOT EDIT.

package provenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SubmitProvenanceRequestReader is a Reader for the SubmitProvenanceRequest structure.
type SubmitProvenanceRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitProvenanceRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSubmitProvenanceRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitProvenanceRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubmitProvenanceRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitProvenanceRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitProvenanceRequestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubmitProvenanceRequestCreated creates a SubmitProvenanceRequestCreated with default headers values
func NewSubmitProvenanceRequestCreated() *SubmitProvenanceRequestCreated {
	return &SubmitProvenanceRequestCreated{}
}

/*
SubmitProvenanceRequestCreated describes a response with status code 201, with default header values.

successful operation
*/
type SubmitProvenanceRequestCreated struct {
	Payload *models.ProvenanceEntity
}

// IsSuccess returns true when this submit provenance request created response has a 2xx status code
func (o *SubmitProvenanceRequestCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit provenance request created response has a 3xx status code
func (o *SubmitProvenanceRequestCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit provenance request created response has a 4xx status code
func (o *SubmitProvenanceRequestCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit provenance request created response has a 5xx status code
func (o *SubmitProvenanceRequestCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this submit provenance request created response a status code equal to that given
func (o *SubmitProvenanceRequestCreated) IsCode(code int) bool {
	return code == 201
}

func (o *SubmitProvenanceRequestCreated) Error() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestCreated  %+v", 201, o.Payload)
}

func (o *SubmitProvenanceRequestCreated) String() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestCreated  %+v", 201, o.Payload)
}

func (o *SubmitProvenanceRequestCreated) GetPayload() *models.ProvenanceEntity {
	return o.Payload
}

func (o *SubmitProvenanceRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProvenanceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitProvenanceRequestBadRequest creates a SubmitProvenanceRequestBadRequest with default headers values
func NewSubmitProvenanceRequestBadRequest() *SubmitProvenanceRequestBadRequest {
	return &SubmitProvenanceRequestBadRequest{}
}

/*
SubmitProvenanceRequestBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SubmitProvenanceRequestBadRequest struct {
}

// IsSuccess returns true when this submit provenance request bad request response has a 2xx status code
func (o *SubmitProvenanceRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit provenance request bad request response has a 3xx status code
func (o *SubmitProvenanceRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit provenance request bad request response has a 4xx status code
func (o *SubmitProvenanceRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit provenance request bad request response has a 5xx status code
func (o *SubmitProvenanceRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this submit provenance request bad request response a status code equal to that given
func (o *SubmitProvenanceRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SubmitProvenanceRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestBadRequest ", 400)
}

func (o *SubmitProvenanceRequestBadRequest) String() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestBadRequest ", 400)
}

func (o *SubmitProvenanceRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitProvenanceRequestUnauthorized creates a SubmitProvenanceRequestUnauthorized with default headers values
func NewSubmitProvenanceRequestUnauthorized() *SubmitProvenanceRequestUnauthorized {
	return &SubmitProvenanceRequestUnauthorized{}
}

/*
SubmitProvenanceRequestUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SubmitProvenanceRequestUnauthorized struct {
}

// IsSuccess returns true when this submit provenance request unauthorized response has a 2xx status code
func (o *SubmitProvenanceRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit provenance request unauthorized response has a 3xx status code
func (o *SubmitProvenanceRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit provenance request unauthorized response has a 4xx status code
func (o *SubmitProvenanceRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit provenance request unauthorized response has a 5xx status code
func (o *SubmitProvenanceRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this submit provenance request unauthorized response a status code equal to that given
func (o *SubmitProvenanceRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SubmitProvenanceRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestUnauthorized ", 401)
}

func (o *SubmitProvenanceRequestUnauthorized) String() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestUnauthorized ", 401)
}

func (o *SubmitProvenanceRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitProvenanceRequestForbidden creates a SubmitProvenanceRequestForbidden with default headers values
func NewSubmitProvenanceRequestForbidden() *SubmitProvenanceRequestForbidden {
	return &SubmitProvenanceRequestForbidden{}
}

/*
SubmitProvenanceRequestForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SubmitProvenanceRequestForbidden struct {
}

// IsSuccess returns true when this submit provenance request forbidden response has a 2xx status code
func (o *SubmitProvenanceRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit provenance request forbidden response has a 3xx status code
func (o *SubmitProvenanceRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit provenance request forbidden response has a 4xx status code
func (o *SubmitProvenanceRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit provenance request forbidden response has a 5xx status code
func (o *SubmitProvenanceRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this submit provenance request forbidden response a status code equal to that given
func (o *SubmitProvenanceRequestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SubmitProvenanceRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestForbidden ", 403)
}

func (o *SubmitProvenanceRequestForbidden) String() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestForbidden ", 403)
}

func (o *SubmitProvenanceRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitProvenanceRequestConflict creates a SubmitProvenanceRequestConflict with default headers values
func NewSubmitProvenanceRequestConflict() *SubmitProvenanceRequestConflict {
	return &SubmitProvenanceRequestConflict{}
}

/*
SubmitProvenanceRequestConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SubmitProvenanceRequestConflict struct {
}

// IsSuccess returns true when this submit provenance request conflict response has a 2xx status code
func (o *SubmitProvenanceRequestConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit provenance request conflict response has a 3xx status code
func (o *SubmitProvenanceRequestConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit provenance request conflict response has a 4xx status code
func (o *SubmitProvenanceRequestConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit provenance request conflict response has a 5xx status code
func (o *SubmitProvenanceRequestConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this submit provenance request conflict response a status code equal to that given
func (o *SubmitProvenanceRequestConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SubmitProvenanceRequestConflict) Error() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestConflict ", 409)
}

func (o *SubmitProvenanceRequestConflict) String() string {
	return fmt.Sprintf("[POST /provenance][%d] submitProvenanceRequestConflict ", 409)
}

func (o *SubmitProvenanceRequestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
