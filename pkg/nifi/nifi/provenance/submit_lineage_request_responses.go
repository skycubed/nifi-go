// Code generated by go-swagger; DO NOT EDIT.

package provenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SubmitLineageRequestReader is a Reader for the SubmitLineageRequest structure.
type SubmitLineageRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitLineageRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSubmitLineageRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitLineageRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubmitLineageRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitLineageRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitLineageRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitLineageRequestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /provenance/lineage] submitLineageRequest", response, response.Code())
	}
}

// NewSubmitLineageRequestCreated creates a SubmitLineageRequestCreated with default headers values
func NewSubmitLineageRequestCreated() *SubmitLineageRequestCreated {
	return &SubmitLineageRequestCreated{}
}

/*
SubmitLineageRequestCreated describes a response with status code 201, with default header values.

successful operation
*/
type SubmitLineageRequestCreated struct {
	Payload *models.LineageEntity
}

// IsSuccess returns true when this submit lineage request created response has a 2xx status code
func (o *SubmitLineageRequestCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit lineage request created response has a 3xx status code
func (o *SubmitLineageRequestCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request created response has a 4xx status code
func (o *SubmitLineageRequestCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit lineage request created response has a 5xx status code
func (o *SubmitLineageRequestCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request created response a status code equal to that given
func (o *SubmitLineageRequestCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the submit lineage request created response
func (o *SubmitLineageRequestCreated) Code() int {
	return 201
}

func (o *SubmitLineageRequestCreated) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestCreated  %+v", 201, o.Payload)
}

func (o *SubmitLineageRequestCreated) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestCreated  %+v", 201, o.Payload)
}

func (o *SubmitLineageRequestCreated) GetPayload() *models.LineageEntity {
	return o.Payload
}

func (o *SubmitLineageRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LineageEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitLineageRequestBadRequest creates a SubmitLineageRequestBadRequest with default headers values
func NewSubmitLineageRequestBadRequest() *SubmitLineageRequestBadRequest {
	return &SubmitLineageRequestBadRequest{}
}

/*
SubmitLineageRequestBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SubmitLineageRequestBadRequest struct {
}

// IsSuccess returns true when this submit lineage request bad request response has a 2xx status code
func (o *SubmitLineageRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit lineage request bad request response has a 3xx status code
func (o *SubmitLineageRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request bad request response has a 4xx status code
func (o *SubmitLineageRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit lineage request bad request response has a 5xx status code
func (o *SubmitLineageRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request bad request response a status code equal to that given
func (o *SubmitLineageRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the submit lineage request bad request response
func (o *SubmitLineageRequestBadRequest) Code() int {
	return 400
}

func (o *SubmitLineageRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestBadRequest ", 400)
}

func (o *SubmitLineageRequestBadRequest) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestBadRequest ", 400)
}

func (o *SubmitLineageRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitLineageRequestUnauthorized creates a SubmitLineageRequestUnauthorized with default headers values
func NewSubmitLineageRequestUnauthorized() *SubmitLineageRequestUnauthorized {
	return &SubmitLineageRequestUnauthorized{}
}

/*
SubmitLineageRequestUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SubmitLineageRequestUnauthorized struct {
}

// IsSuccess returns true when this submit lineage request unauthorized response has a 2xx status code
func (o *SubmitLineageRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit lineage request unauthorized response has a 3xx status code
func (o *SubmitLineageRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request unauthorized response has a 4xx status code
func (o *SubmitLineageRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit lineage request unauthorized response has a 5xx status code
func (o *SubmitLineageRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request unauthorized response a status code equal to that given
func (o *SubmitLineageRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the submit lineage request unauthorized response
func (o *SubmitLineageRequestUnauthorized) Code() int {
	return 401
}

func (o *SubmitLineageRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestUnauthorized ", 401)
}

func (o *SubmitLineageRequestUnauthorized) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestUnauthorized ", 401)
}

func (o *SubmitLineageRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitLineageRequestForbidden creates a SubmitLineageRequestForbidden with default headers values
func NewSubmitLineageRequestForbidden() *SubmitLineageRequestForbidden {
	return &SubmitLineageRequestForbidden{}
}

/*
SubmitLineageRequestForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SubmitLineageRequestForbidden struct {
}

// IsSuccess returns true when this submit lineage request forbidden response has a 2xx status code
func (o *SubmitLineageRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit lineage request forbidden response has a 3xx status code
func (o *SubmitLineageRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request forbidden response has a 4xx status code
func (o *SubmitLineageRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit lineage request forbidden response has a 5xx status code
func (o *SubmitLineageRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request forbidden response a status code equal to that given
func (o *SubmitLineageRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the submit lineage request forbidden response
func (o *SubmitLineageRequestForbidden) Code() int {
	return 403
}

func (o *SubmitLineageRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestForbidden ", 403)
}

func (o *SubmitLineageRequestForbidden) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestForbidden ", 403)
}

func (o *SubmitLineageRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitLineageRequestNotFound creates a SubmitLineageRequestNotFound with default headers values
func NewSubmitLineageRequestNotFound() *SubmitLineageRequestNotFound {
	return &SubmitLineageRequestNotFound{}
}

/*
SubmitLineageRequestNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type SubmitLineageRequestNotFound struct {
}

// IsSuccess returns true when this submit lineage request not found response has a 2xx status code
func (o *SubmitLineageRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit lineage request not found response has a 3xx status code
func (o *SubmitLineageRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request not found response has a 4xx status code
func (o *SubmitLineageRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit lineage request not found response has a 5xx status code
func (o *SubmitLineageRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request not found response a status code equal to that given
func (o *SubmitLineageRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the submit lineage request not found response
func (o *SubmitLineageRequestNotFound) Code() int {
	return 404
}

func (o *SubmitLineageRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestNotFound ", 404)
}

func (o *SubmitLineageRequestNotFound) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestNotFound ", 404)
}

func (o *SubmitLineageRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitLineageRequestConflict creates a SubmitLineageRequestConflict with default headers values
func NewSubmitLineageRequestConflict() *SubmitLineageRequestConflict {
	return &SubmitLineageRequestConflict{}
}

/*
SubmitLineageRequestConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SubmitLineageRequestConflict struct {
}

// IsSuccess returns true when this submit lineage request conflict response has a 2xx status code
func (o *SubmitLineageRequestConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit lineage request conflict response has a 3xx status code
func (o *SubmitLineageRequestConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit lineage request conflict response has a 4xx status code
func (o *SubmitLineageRequestConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit lineage request conflict response has a 5xx status code
func (o *SubmitLineageRequestConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this submit lineage request conflict response a status code equal to that given
func (o *SubmitLineageRequestConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the submit lineage request conflict response
func (o *SubmitLineageRequestConflict) Code() int {
	return 409
}

func (o *SubmitLineageRequestConflict) Error() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestConflict ", 409)
}

func (o *SubmitLineageRequestConflict) String() string {
	return fmt.Sprintf("[POST /provenance/lineage][%d] submitLineageRequestConflict ", 409)
}

func (o *SubmitLineageRequestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
