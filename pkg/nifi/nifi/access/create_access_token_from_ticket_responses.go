// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateAccessTokenFromTicketReader is a Reader for the CreateAccessTokenFromTicket structure.
type CreateAccessTokenFromTicketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccessTokenFromTicketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAccessTokenFromTicketCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccessTokenFromTicketBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAccessTokenFromTicketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAccessTokenFromTicketConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAccessTokenFromTicketInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAccessTokenFromTicketCreated creates a CreateAccessTokenFromTicketCreated with default headers values
func NewCreateAccessTokenFromTicketCreated() *CreateAccessTokenFromTicketCreated {
	return &CreateAccessTokenFromTicketCreated{}
}

/* CreateAccessTokenFromTicketCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateAccessTokenFromTicketCreated struct {
	Payload string
}

func (o *CreateAccessTokenFromTicketCreated) Error() string {
	return fmt.Sprintf("[POST /access/kerberos][%d] createAccessTokenFromTicketCreated  %+v", 201, o.Payload)
}
func (o *CreateAccessTokenFromTicketCreated) GetPayload() string {
	return o.Payload
}

func (o *CreateAccessTokenFromTicketCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccessTokenFromTicketBadRequest creates a CreateAccessTokenFromTicketBadRequest with default headers values
func NewCreateAccessTokenFromTicketBadRequest() *CreateAccessTokenFromTicketBadRequest {
	return &CreateAccessTokenFromTicketBadRequest{}
}

/* CreateAccessTokenFromTicketBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateAccessTokenFromTicketBadRequest struct {
}

func (o *CreateAccessTokenFromTicketBadRequest) Error() string {
	return fmt.Sprintf("[POST /access/kerberos][%d] createAccessTokenFromTicketBadRequest ", 400)
}

func (o *CreateAccessTokenFromTicketBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenFromTicketUnauthorized creates a CreateAccessTokenFromTicketUnauthorized with default headers values
func NewCreateAccessTokenFromTicketUnauthorized() *CreateAccessTokenFromTicketUnauthorized {
	return &CreateAccessTokenFromTicketUnauthorized{}
}

/* CreateAccessTokenFromTicketUnauthorized describes a response with status code 401, with default header values.

NiFi was unable to complete the request because it did not contain a valid Kerberos ticket in the Authorization header. Retry this request after initializing a ticket with kinit and ensuring your browser is configured to support SPNEGO.
*/
type CreateAccessTokenFromTicketUnauthorized struct {
}

func (o *CreateAccessTokenFromTicketUnauthorized) Error() string {
	return fmt.Sprintf("[POST /access/kerberos][%d] createAccessTokenFromTicketUnauthorized ", 401)
}

func (o *CreateAccessTokenFromTicketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenFromTicketConflict creates a CreateAccessTokenFromTicketConflict with default headers values
func NewCreateAccessTokenFromTicketConflict() *CreateAccessTokenFromTicketConflict {
	return &CreateAccessTokenFromTicketConflict{}
}

/* CreateAccessTokenFromTicketConflict describes a response with status code 409, with default header values.

Unable to create access token because NiFi is not in the appropriate state. (i.e. may not be configured to support Kerberos login.
*/
type CreateAccessTokenFromTicketConflict struct {
}

func (o *CreateAccessTokenFromTicketConflict) Error() string {
	return fmt.Sprintf("[POST /access/kerberos][%d] createAccessTokenFromTicketConflict ", 409)
}

func (o *CreateAccessTokenFromTicketConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenFromTicketInternalServerError creates a CreateAccessTokenFromTicketInternalServerError with default headers values
func NewCreateAccessTokenFromTicketInternalServerError() *CreateAccessTokenFromTicketInternalServerError {
	return &CreateAccessTokenFromTicketInternalServerError{}
}

/* CreateAccessTokenFromTicketInternalServerError describes a response with status code 500, with default header values.

Unable to create access token because an unexpected error occurred.
*/
type CreateAccessTokenFromTicketInternalServerError struct {
}

func (o *CreateAccessTokenFromTicketInternalServerError) Error() string {
	return fmt.Sprintf("[POST /access/kerberos][%d] createAccessTokenFromTicketInternalServerError ", 500)
}

func (o *CreateAccessTokenFromTicketInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
