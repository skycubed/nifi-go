// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetAccessStatusReader is a Reader for the GetAccessStatus structure.
type GetAccessStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccessStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccessStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccessStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAccessStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccessStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAccessStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccessStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccessStatusOK creates a GetAccessStatusOK with default headers values
func NewGetAccessStatusOK() *GetAccessStatusOK {
	return &GetAccessStatusOK{}
}

/* GetAccessStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAccessStatusOK struct {
	Payload *models.AccessStatusEntity
}

func (o *GetAccessStatusOK) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusOK  %+v", 200, o.Payload)
}
func (o *GetAccessStatusOK) GetPayload() *models.AccessStatusEntity {
	return o.Payload
}

func (o *GetAccessStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessStatusEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessStatusBadRequest creates a GetAccessStatusBadRequest with default headers values
func NewGetAccessStatusBadRequest() *GetAccessStatusBadRequest {
	return &GetAccessStatusBadRequest{}
}

/* GetAccessStatusBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetAccessStatusBadRequest struct {
}

func (o *GetAccessStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusBadRequest ", 400)
}

func (o *GetAccessStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccessStatusUnauthorized creates a GetAccessStatusUnauthorized with default headers values
func NewGetAccessStatusUnauthorized() *GetAccessStatusUnauthorized {
	return &GetAccessStatusUnauthorized{}
}

/* GetAccessStatusUnauthorized describes a response with status code 401, with default header values.

Unable to determine access status because the client could not be authenticated.
*/
type GetAccessStatusUnauthorized struct {
}

func (o *GetAccessStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusUnauthorized ", 401)
}

func (o *GetAccessStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccessStatusForbidden creates a GetAccessStatusForbidden with default headers values
func NewGetAccessStatusForbidden() *GetAccessStatusForbidden {
	return &GetAccessStatusForbidden{}
}

/* GetAccessStatusForbidden describes a response with status code 403, with default header values.

Unable to determine access status because the client is not authorized to make this request.
*/
type GetAccessStatusForbidden struct {
}

func (o *GetAccessStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusForbidden ", 403)
}

func (o *GetAccessStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccessStatusConflict creates a GetAccessStatusConflict with default headers values
func NewGetAccessStatusConflict() *GetAccessStatusConflict {
	return &GetAccessStatusConflict{}
}

/* GetAccessStatusConflict describes a response with status code 409, with default header values.

Unable to determine access status because NiFi is not in the appropriate state.
*/
type GetAccessStatusConflict struct {
}

func (o *GetAccessStatusConflict) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusConflict ", 409)
}

func (o *GetAccessStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccessStatusInternalServerError creates a GetAccessStatusInternalServerError with default headers values
func NewGetAccessStatusInternalServerError() *GetAccessStatusInternalServerError {
	return &GetAccessStatusInternalServerError{}
}

/* GetAccessStatusInternalServerError describes a response with status code 500, with default header values.

Unable to determine access status because an unexpected error occurred.
*/
type GetAccessStatusInternalServerError struct {
}

func (o *GetAccessStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /access][%d] getAccessStatusInternalServerError ", 500)
}

func (o *GetAccessStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
