// Code generated by go-swagger; DO NOT EDIT.

package parameter_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetParameterProviderReader is a Reader for the GetParameterProvider structure.
type GetParameterProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetParameterProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetParameterProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetParameterProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetParameterProviderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetParameterProviderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetParameterProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetParameterProviderConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetParameterProviderOK creates a GetParameterProviderOK with default headers values
func NewGetParameterProviderOK() *GetParameterProviderOK {
	return &GetParameterProviderOK{}
}

/*
GetParameterProviderOK describes a response with status code 200, with default header values.

successful operation
*/
type GetParameterProviderOK struct {
	Payload *models.ParameterProviderEntity
}

// IsSuccess returns true when this get parameter provider o k response has a 2xx status code
func (o *GetParameterProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get parameter provider o k response has a 3xx status code
func (o *GetParameterProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider o k response has a 4xx status code
func (o *GetParameterProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get parameter provider o k response has a 5xx status code
func (o *GetParameterProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider o k response a status code equal to that given
func (o *GetParameterProviderOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetParameterProviderOK) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderOK  %+v", 200, o.Payload)
}

func (o *GetParameterProviderOK) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderOK  %+v", 200, o.Payload)
}

func (o *GetParameterProviderOK) GetPayload() *models.ParameterProviderEntity {
	return o.Payload
}

func (o *GetParameterProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterProviderEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetParameterProviderBadRequest creates a GetParameterProviderBadRequest with default headers values
func NewGetParameterProviderBadRequest() *GetParameterProviderBadRequest {
	return &GetParameterProviderBadRequest{}
}

/*
GetParameterProviderBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetParameterProviderBadRequest struct {
}

// IsSuccess returns true when this get parameter provider bad request response has a 2xx status code
func (o *GetParameterProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter provider bad request response has a 3xx status code
func (o *GetParameterProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider bad request response has a 4xx status code
func (o *GetParameterProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter provider bad request response has a 5xx status code
func (o *GetParameterProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider bad request response a status code equal to that given
func (o *GetParameterProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetParameterProviderBadRequest) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderBadRequest ", 400)
}

func (o *GetParameterProviderBadRequest) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderBadRequest ", 400)
}

func (o *GetParameterProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProviderUnauthorized creates a GetParameterProviderUnauthorized with default headers values
func NewGetParameterProviderUnauthorized() *GetParameterProviderUnauthorized {
	return &GetParameterProviderUnauthorized{}
}

/*
GetParameterProviderUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetParameterProviderUnauthorized struct {
}

// IsSuccess returns true when this get parameter provider unauthorized response has a 2xx status code
func (o *GetParameterProviderUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter provider unauthorized response has a 3xx status code
func (o *GetParameterProviderUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider unauthorized response has a 4xx status code
func (o *GetParameterProviderUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter provider unauthorized response has a 5xx status code
func (o *GetParameterProviderUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider unauthorized response a status code equal to that given
func (o *GetParameterProviderUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetParameterProviderUnauthorized) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderUnauthorized ", 401)
}

func (o *GetParameterProviderUnauthorized) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderUnauthorized ", 401)
}

func (o *GetParameterProviderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProviderForbidden creates a GetParameterProviderForbidden with default headers values
func NewGetParameterProviderForbidden() *GetParameterProviderForbidden {
	return &GetParameterProviderForbidden{}
}

/*
GetParameterProviderForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetParameterProviderForbidden struct {
}

// IsSuccess returns true when this get parameter provider forbidden response has a 2xx status code
func (o *GetParameterProviderForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter provider forbidden response has a 3xx status code
func (o *GetParameterProviderForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider forbidden response has a 4xx status code
func (o *GetParameterProviderForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter provider forbidden response has a 5xx status code
func (o *GetParameterProviderForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider forbidden response a status code equal to that given
func (o *GetParameterProviderForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetParameterProviderForbidden) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderForbidden ", 403)
}

func (o *GetParameterProviderForbidden) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderForbidden ", 403)
}

func (o *GetParameterProviderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProviderNotFound creates a GetParameterProviderNotFound with default headers values
func NewGetParameterProviderNotFound() *GetParameterProviderNotFound {
	return &GetParameterProviderNotFound{}
}

/*
GetParameterProviderNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetParameterProviderNotFound struct {
}

// IsSuccess returns true when this get parameter provider not found response has a 2xx status code
func (o *GetParameterProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter provider not found response has a 3xx status code
func (o *GetParameterProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider not found response has a 4xx status code
func (o *GetParameterProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter provider not found response has a 5xx status code
func (o *GetParameterProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider not found response a status code equal to that given
func (o *GetParameterProviderNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetParameterProviderNotFound) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderNotFound ", 404)
}

func (o *GetParameterProviderNotFound) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderNotFound ", 404)
}

func (o *GetParameterProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProviderConflict creates a GetParameterProviderConflict with default headers values
func NewGetParameterProviderConflict() *GetParameterProviderConflict {
	return &GetParameterProviderConflict{}
}

/*
GetParameterProviderConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetParameterProviderConflict struct {
}

// IsSuccess returns true when this get parameter provider conflict response has a 2xx status code
func (o *GetParameterProviderConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter provider conflict response has a 3xx status code
func (o *GetParameterProviderConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter provider conflict response has a 4xx status code
func (o *GetParameterProviderConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter provider conflict response has a 5xx status code
func (o *GetParameterProviderConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter provider conflict response a status code equal to that given
func (o *GetParameterProviderConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetParameterProviderConflict) Error() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderConflict ", 409)
}

func (o *GetParameterProviderConflict) String() string {
	return fmt.Sprintf("[GET /parameter-providers/{id}][%d] getParameterProviderConflict ", 409)
}

func (o *GetParameterProviderConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
