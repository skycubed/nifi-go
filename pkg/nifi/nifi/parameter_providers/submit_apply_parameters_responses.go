// Code generated by go-swagger; DO NOT EDIT.

package parameter_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SubmitApplyParametersReader is a Reader for the SubmitApplyParameters structure.
type SubmitApplyParametersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitApplyParametersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitApplyParametersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitApplyParametersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubmitApplyParametersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitApplyParametersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitApplyParametersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitApplyParametersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /parameter-providers/{providerId}/apply-parameters-requests] submitApplyParameters", response, response.Code())
	}
}

// NewSubmitApplyParametersOK creates a SubmitApplyParametersOK with default headers values
func NewSubmitApplyParametersOK() *SubmitApplyParametersOK {
	return &SubmitApplyParametersOK{}
}

/*
SubmitApplyParametersOK describes a response with status code 200, with default header values.

successful operation
*/
type SubmitApplyParametersOK struct {
	Payload *models.ParameterProviderApplyParametersRequestEntity
}

// IsSuccess returns true when this submit apply parameters o k response has a 2xx status code
func (o *SubmitApplyParametersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit apply parameters o k response has a 3xx status code
func (o *SubmitApplyParametersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters o k response has a 4xx status code
func (o *SubmitApplyParametersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit apply parameters o k response has a 5xx status code
func (o *SubmitApplyParametersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters o k response a status code equal to that given
func (o *SubmitApplyParametersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the submit apply parameters o k response
func (o *SubmitApplyParametersOK) Code() int {
	return 200
}

func (o *SubmitApplyParametersOK) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersOK  %+v", 200, o.Payload)
}

func (o *SubmitApplyParametersOK) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersOK  %+v", 200, o.Payload)
}

func (o *SubmitApplyParametersOK) GetPayload() *models.ParameterProviderApplyParametersRequestEntity {
	return o.Payload
}

func (o *SubmitApplyParametersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterProviderApplyParametersRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitApplyParametersBadRequest creates a SubmitApplyParametersBadRequest with default headers values
func NewSubmitApplyParametersBadRequest() *SubmitApplyParametersBadRequest {
	return &SubmitApplyParametersBadRequest{}
}

/*
SubmitApplyParametersBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SubmitApplyParametersBadRequest struct {
}

// IsSuccess returns true when this submit apply parameters bad request response has a 2xx status code
func (o *SubmitApplyParametersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit apply parameters bad request response has a 3xx status code
func (o *SubmitApplyParametersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters bad request response has a 4xx status code
func (o *SubmitApplyParametersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit apply parameters bad request response has a 5xx status code
func (o *SubmitApplyParametersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters bad request response a status code equal to that given
func (o *SubmitApplyParametersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the submit apply parameters bad request response
func (o *SubmitApplyParametersBadRequest) Code() int {
	return 400
}

func (o *SubmitApplyParametersBadRequest) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersBadRequest ", 400)
}

func (o *SubmitApplyParametersBadRequest) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersBadRequest ", 400)
}

func (o *SubmitApplyParametersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitApplyParametersUnauthorized creates a SubmitApplyParametersUnauthorized with default headers values
func NewSubmitApplyParametersUnauthorized() *SubmitApplyParametersUnauthorized {
	return &SubmitApplyParametersUnauthorized{}
}

/*
SubmitApplyParametersUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SubmitApplyParametersUnauthorized struct {
}

// IsSuccess returns true when this submit apply parameters unauthorized response has a 2xx status code
func (o *SubmitApplyParametersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit apply parameters unauthorized response has a 3xx status code
func (o *SubmitApplyParametersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters unauthorized response has a 4xx status code
func (o *SubmitApplyParametersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit apply parameters unauthorized response has a 5xx status code
func (o *SubmitApplyParametersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters unauthorized response a status code equal to that given
func (o *SubmitApplyParametersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the submit apply parameters unauthorized response
func (o *SubmitApplyParametersUnauthorized) Code() int {
	return 401
}

func (o *SubmitApplyParametersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersUnauthorized ", 401)
}

func (o *SubmitApplyParametersUnauthorized) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersUnauthorized ", 401)
}

func (o *SubmitApplyParametersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitApplyParametersForbidden creates a SubmitApplyParametersForbidden with default headers values
func NewSubmitApplyParametersForbidden() *SubmitApplyParametersForbidden {
	return &SubmitApplyParametersForbidden{}
}

/*
SubmitApplyParametersForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SubmitApplyParametersForbidden struct {
}

// IsSuccess returns true when this submit apply parameters forbidden response has a 2xx status code
func (o *SubmitApplyParametersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit apply parameters forbidden response has a 3xx status code
func (o *SubmitApplyParametersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters forbidden response has a 4xx status code
func (o *SubmitApplyParametersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit apply parameters forbidden response has a 5xx status code
func (o *SubmitApplyParametersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters forbidden response a status code equal to that given
func (o *SubmitApplyParametersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the submit apply parameters forbidden response
func (o *SubmitApplyParametersForbidden) Code() int {
	return 403
}

func (o *SubmitApplyParametersForbidden) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersForbidden ", 403)
}

func (o *SubmitApplyParametersForbidden) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersForbidden ", 403)
}

func (o *SubmitApplyParametersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitApplyParametersNotFound creates a SubmitApplyParametersNotFound with default headers values
func NewSubmitApplyParametersNotFound() *SubmitApplyParametersNotFound {
	return &SubmitApplyParametersNotFound{}
}

/*
SubmitApplyParametersNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type SubmitApplyParametersNotFound struct {
}

// IsSuccess returns true when this submit apply parameters not found response has a 2xx status code
func (o *SubmitApplyParametersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit apply parameters not found response has a 3xx status code
func (o *SubmitApplyParametersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters not found response has a 4xx status code
func (o *SubmitApplyParametersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit apply parameters not found response has a 5xx status code
func (o *SubmitApplyParametersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters not found response a status code equal to that given
func (o *SubmitApplyParametersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the submit apply parameters not found response
func (o *SubmitApplyParametersNotFound) Code() int {
	return 404
}

func (o *SubmitApplyParametersNotFound) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersNotFound ", 404)
}

func (o *SubmitApplyParametersNotFound) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersNotFound ", 404)
}

func (o *SubmitApplyParametersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitApplyParametersConflict creates a SubmitApplyParametersConflict with default headers values
func NewSubmitApplyParametersConflict() *SubmitApplyParametersConflict {
	return &SubmitApplyParametersConflict{}
}

/*
SubmitApplyParametersConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SubmitApplyParametersConflict struct {
}

// IsSuccess returns true when this submit apply parameters conflict response has a 2xx status code
func (o *SubmitApplyParametersConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit apply parameters conflict response has a 3xx status code
func (o *SubmitApplyParametersConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit apply parameters conflict response has a 4xx status code
func (o *SubmitApplyParametersConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit apply parameters conflict response has a 5xx status code
func (o *SubmitApplyParametersConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this submit apply parameters conflict response a status code equal to that given
func (o *SubmitApplyParametersConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the submit apply parameters conflict response
func (o *SubmitApplyParametersConflict) Code() int {
	return 409
}

func (o *SubmitApplyParametersConflict) Error() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersConflict ", 409)
}

func (o *SubmitApplyParametersConflict) String() string {
	return fmt.Sprintf("[POST /parameter-providers/{providerId}/apply-parameters-requests][%d] submitApplyParametersConflict ", 409)
}

func (o *SubmitApplyParametersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
