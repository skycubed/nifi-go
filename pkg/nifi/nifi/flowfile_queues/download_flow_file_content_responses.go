// Code generated by go-swagger; DO NOT EDIT.

package flowfile_queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// DownloadFlowFileContentReader is a Reader for the DownloadFlowFileContent structure.
type DownloadFlowFileContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadFlowFileContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadFlowFileContentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadFlowFileContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDownloadFlowFileContentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadFlowFileContentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadFlowFileContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDownloadFlowFileContentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadFlowFileContentOK creates a DownloadFlowFileContentOK with default headers values
func NewDownloadFlowFileContentOK() *DownloadFlowFileContentOK {
	return &DownloadFlowFileContentOK{}
}

/* DownloadFlowFileContentOK describes a response with status code 200, with default header values.

successful operation
*/
type DownloadFlowFileContentOK struct {
	Payload models.StreamingOutput
}

func (o *DownloadFlowFileContentOK) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentOK  %+v", 200, o.Payload)
}
func (o *DownloadFlowFileContentOK) GetPayload() models.StreamingOutput {
	return o.Payload
}

func (o *DownloadFlowFileContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadFlowFileContentBadRequest creates a DownloadFlowFileContentBadRequest with default headers values
func NewDownloadFlowFileContentBadRequest() *DownloadFlowFileContentBadRequest {
	return &DownloadFlowFileContentBadRequest{}
}

/* DownloadFlowFileContentBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type DownloadFlowFileContentBadRequest struct {
}

func (o *DownloadFlowFileContentBadRequest) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentBadRequest ", 400)
}

func (o *DownloadFlowFileContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadFlowFileContentUnauthorized creates a DownloadFlowFileContentUnauthorized with default headers values
func NewDownloadFlowFileContentUnauthorized() *DownloadFlowFileContentUnauthorized {
	return &DownloadFlowFileContentUnauthorized{}
}

/* DownloadFlowFileContentUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type DownloadFlowFileContentUnauthorized struct {
}

func (o *DownloadFlowFileContentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentUnauthorized ", 401)
}

func (o *DownloadFlowFileContentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadFlowFileContentForbidden creates a DownloadFlowFileContentForbidden with default headers values
func NewDownloadFlowFileContentForbidden() *DownloadFlowFileContentForbidden {
	return &DownloadFlowFileContentForbidden{}
}

/* DownloadFlowFileContentForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type DownloadFlowFileContentForbidden struct {
}

func (o *DownloadFlowFileContentForbidden) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentForbidden ", 403)
}

func (o *DownloadFlowFileContentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadFlowFileContentNotFound creates a DownloadFlowFileContentNotFound with default headers values
func NewDownloadFlowFileContentNotFound() *DownloadFlowFileContentNotFound {
	return &DownloadFlowFileContentNotFound{}
}

/* DownloadFlowFileContentNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type DownloadFlowFileContentNotFound struct {
}

func (o *DownloadFlowFileContentNotFound) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentNotFound ", 404)
}

func (o *DownloadFlowFileContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadFlowFileContentConflict creates a DownloadFlowFileContentConflict with default headers values
func NewDownloadFlowFileContentConflict() *DownloadFlowFileContentConflict {
	return &DownloadFlowFileContentConflict{}
}

/* DownloadFlowFileContentConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type DownloadFlowFileContentConflict struct {
}

func (o *DownloadFlowFileContentConflict) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}/content][%d] downloadFlowFileContentConflict ", 409)
}

func (o *DownloadFlowFileContentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
