// Code generated by go-swagger; DO NOT EDIT.

package flowfile_queues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetFlowFileReader is a Reader for the GetFlowFile structure.
type GetFlowFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowFileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowFileOK creates a GetFlowFileOK with default headers values
func NewGetFlowFileOK() *GetFlowFileOK {
	return &GetFlowFileOK{}
}

/*
GetFlowFileOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowFileOK struct {
	Payload *models.FlowFileEntity
}

// IsSuccess returns true when this get flow file o k response has a 2xx status code
func (o *GetFlowFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow file o k response has a 3xx status code
func (o *GetFlowFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file o k response has a 4xx status code
func (o *GetFlowFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow file o k response has a 5xx status code
func (o *GetFlowFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file o k response a status code equal to that given
func (o *GetFlowFileOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFlowFileOK) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileOK  %+v", 200, o.Payload)
}

func (o *GetFlowFileOK) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileOK  %+v", 200, o.Payload)
}

func (o *GetFlowFileOK) GetPayload() *models.FlowFileEntity {
	return o.Payload
}

func (o *GetFlowFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowFileEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowFileBadRequest creates a GetFlowFileBadRequest with default headers values
func NewGetFlowFileBadRequest() *GetFlowFileBadRequest {
	return &GetFlowFileBadRequest{}
}

/*
GetFlowFileBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowFileBadRequest struct {
}

// IsSuccess returns true when this get flow file bad request response has a 2xx status code
func (o *GetFlowFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow file bad request response has a 3xx status code
func (o *GetFlowFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file bad request response has a 4xx status code
func (o *GetFlowFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow file bad request response has a 5xx status code
func (o *GetFlowFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file bad request response a status code equal to that given
func (o *GetFlowFileBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFlowFileBadRequest) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileBadRequest ", 400)
}

func (o *GetFlowFileBadRequest) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileBadRequest ", 400)
}

func (o *GetFlowFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowFileUnauthorized creates a GetFlowFileUnauthorized with default headers values
func NewGetFlowFileUnauthorized() *GetFlowFileUnauthorized {
	return &GetFlowFileUnauthorized{}
}

/*
GetFlowFileUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowFileUnauthorized struct {
}

// IsSuccess returns true when this get flow file unauthorized response has a 2xx status code
func (o *GetFlowFileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow file unauthorized response has a 3xx status code
func (o *GetFlowFileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file unauthorized response has a 4xx status code
func (o *GetFlowFileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow file unauthorized response has a 5xx status code
func (o *GetFlowFileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file unauthorized response a status code equal to that given
func (o *GetFlowFileUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFlowFileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileUnauthorized ", 401)
}

func (o *GetFlowFileUnauthorized) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileUnauthorized ", 401)
}

func (o *GetFlowFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowFileForbidden creates a GetFlowFileForbidden with default headers values
func NewGetFlowFileForbidden() *GetFlowFileForbidden {
	return &GetFlowFileForbidden{}
}

/*
GetFlowFileForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowFileForbidden struct {
}

// IsSuccess returns true when this get flow file forbidden response has a 2xx status code
func (o *GetFlowFileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow file forbidden response has a 3xx status code
func (o *GetFlowFileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file forbidden response has a 4xx status code
func (o *GetFlowFileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow file forbidden response has a 5xx status code
func (o *GetFlowFileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file forbidden response a status code equal to that given
func (o *GetFlowFileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFlowFileForbidden) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileForbidden ", 403)
}

func (o *GetFlowFileForbidden) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileForbidden ", 403)
}

func (o *GetFlowFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowFileNotFound creates a GetFlowFileNotFound with default headers values
func NewGetFlowFileNotFound() *GetFlowFileNotFound {
	return &GetFlowFileNotFound{}
}

/*
GetFlowFileNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowFileNotFound struct {
}

// IsSuccess returns true when this get flow file not found response has a 2xx status code
func (o *GetFlowFileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow file not found response has a 3xx status code
func (o *GetFlowFileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file not found response has a 4xx status code
func (o *GetFlowFileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow file not found response has a 5xx status code
func (o *GetFlowFileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file not found response a status code equal to that given
func (o *GetFlowFileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFlowFileNotFound) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileNotFound ", 404)
}

func (o *GetFlowFileNotFound) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileNotFound ", 404)
}

func (o *GetFlowFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowFileConflict creates a GetFlowFileConflict with default headers values
func NewGetFlowFileConflict() *GetFlowFileConflict {
	return &GetFlowFileConflict{}
}

/*
GetFlowFileConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetFlowFileConflict struct {
}

// IsSuccess returns true when this get flow file conflict response has a 2xx status code
func (o *GetFlowFileConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow file conflict response has a 3xx status code
func (o *GetFlowFileConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow file conflict response has a 4xx status code
func (o *GetFlowFileConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow file conflict response has a 5xx status code
func (o *GetFlowFileConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow file conflict response a status code equal to that given
func (o *GetFlowFileConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetFlowFileConflict) Error() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileConflict ", 409)
}

func (o *GetFlowFileConflict) String() string {
	return fmt.Sprintf("[GET /flowfile-queues/{id}/flowfiles/{flowfile-uuid}][%d] getFlowFileConflict ", 409)
}

func (o *GetFlowFileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
