// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetBannersReader is a Reader for the GetBanners structure.
type GetBannersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBannersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBannersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBannersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBannersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBannersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetBannersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBannersOK creates a GetBannersOK with default headers values
func NewGetBannersOK() *GetBannersOK {
	return &GetBannersOK{}
}

/*
GetBannersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBannersOK struct {
	Payload *models.BannerEntity
}

// IsSuccess returns true when this get banners o k response has a 2xx status code
func (o *GetBannersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get banners o k response has a 3xx status code
func (o *GetBannersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get banners o k response has a 4xx status code
func (o *GetBannersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get banners o k response has a 5xx status code
func (o *GetBannersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get banners o k response a status code equal to that given
func (o *GetBannersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBannersOK) Error() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersOK  %+v", 200, o.Payload)
}

func (o *GetBannersOK) String() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersOK  %+v", 200, o.Payload)
}

func (o *GetBannersOK) GetPayload() *models.BannerEntity {
	return o.Payload
}

func (o *GetBannersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BannerEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBannersBadRequest creates a GetBannersBadRequest with default headers values
func NewGetBannersBadRequest() *GetBannersBadRequest {
	return &GetBannersBadRequest{}
}

/*
GetBannersBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetBannersBadRequest struct {
}

// IsSuccess returns true when this get banners bad request response has a 2xx status code
func (o *GetBannersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get banners bad request response has a 3xx status code
func (o *GetBannersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get banners bad request response has a 4xx status code
func (o *GetBannersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get banners bad request response has a 5xx status code
func (o *GetBannersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get banners bad request response a status code equal to that given
func (o *GetBannersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetBannersBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersBadRequest ", 400)
}

func (o *GetBannersBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersBadRequest ", 400)
}

func (o *GetBannersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBannersUnauthorized creates a GetBannersUnauthorized with default headers values
func NewGetBannersUnauthorized() *GetBannersUnauthorized {
	return &GetBannersUnauthorized{}
}

/*
GetBannersUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetBannersUnauthorized struct {
}

// IsSuccess returns true when this get banners unauthorized response has a 2xx status code
func (o *GetBannersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get banners unauthorized response has a 3xx status code
func (o *GetBannersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get banners unauthorized response has a 4xx status code
func (o *GetBannersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get banners unauthorized response has a 5xx status code
func (o *GetBannersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get banners unauthorized response a status code equal to that given
func (o *GetBannersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetBannersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersUnauthorized ", 401)
}

func (o *GetBannersUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersUnauthorized ", 401)
}

func (o *GetBannersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBannersForbidden creates a GetBannersForbidden with default headers values
func NewGetBannersForbidden() *GetBannersForbidden {
	return &GetBannersForbidden{}
}

/*
GetBannersForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetBannersForbidden struct {
}

// IsSuccess returns true when this get banners forbidden response has a 2xx status code
func (o *GetBannersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get banners forbidden response has a 3xx status code
func (o *GetBannersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get banners forbidden response has a 4xx status code
func (o *GetBannersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get banners forbidden response has a 5xx status code
func (o *GetBannersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get banners forbidden response a status code equal to that given
func (o *GetBannersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetBannersForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersForbidden ", 403)
}

func (o *GetBannersForbidden) String() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersForbidden ", 403)
}

func (o *GetBannersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBannersConflict creates a GetBannersConflict with default headers values
func NewGetBannersConflict() *GetBannersConflict {
	return &GetBannersConflict{}
}

/*
GetBannersConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetBannersConflict struct {
}

// IsSuccess returns true when this get banners conflict response has a 2xx status code
func (o *GetBannersConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get banners conflict response has a 3xx status code
func (o *GetBannersConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get banners conflict response has a 4xx status code
func (o *GetBannersConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get banners conflict response has a 5xx status code
func (o *GetBannersConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get banners conflict response a status code equal to that given
func (o *GetBannersConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetBannersConflict) Error() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersConflict ", 409)
}

func (o *GetBannersConflict) String() string {
	return fmt.Sprintf("[GET /flow/banners][%d] getBannersConflict ", 409)
}

func (o *GetBannersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
