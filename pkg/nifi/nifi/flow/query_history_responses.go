// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// QueryHistoryReader is a Reader for the QueryHistory structure.
type QueryHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewQueryHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewQueryHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewQueryHistoryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewQueryHistoryOK creates a QueryHistoryOK with default headers values
func NewQueryHistoryOK() *QueryHistoryOK {
	return &QueryHistoryOK{}
}

/* QueryHistoryOK describes a response with status code 200, with default header values.

successful operation
*/
type QueryHistoryOK struct {
	Payload *models.HistoryEntity
}

func (o *QueryHistoryOK) Error() string {
	return fmt.Sprintf("[GET /flow/history][%d] queryHistoryOK  %+v", 200, o.Payload)
}
func (o *QueryHistoryOK) GetPayload() *models.HistoryEntity {
	return o.Payload
}

func (o *QueryHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HistoryEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryHistoryBadRequest creates a QueryHistoryBadRequest with default headers values
func NewQueryHistoryBadRequest() *QueryHistoryBadRequest {
	return &QueryHistoryBadRequest{}
}

/* QueryHistoryBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type QueryHistoryBadRequest struct {
}

func (o *QueryHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/history][%d] queryHistoryBadRequest ", 400)
}

func (o *QueryHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewQueryHistoryUnauthorized creates a QueryHistoryUnauthorized with default headers values
func NewQueryHistoryUnauthorized() *QueryHistoryUnauthorized {
	return &QueryHistoryUnauthorized{}
}

/* QueryHistoryUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type QueryHistoryUnauthorized struct {
}

func (o *QueryHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/history][%d] queryHistoryUnauthorized ", 401)
}

func (o *QueryHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewQueryHistoryForbidden creates a QueryHistoryForbidden with default headers values
func NewQueryHistoryForbidden() *QueryHistoryForbidden {
	return &QueryHistoryForbidden{}
}

/* QueryHistoryForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type QueryHistoryForbidden struct {
}

func (o *QueryHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/history][%d] queryHistoryForbidden ", 403)
}

func (o *QueryHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewQueryHistoryConflict creates a QueryHistoryConflict with default headers values
func NewQueryHistoryConflict() *QueryHistoryConflict {
	return &QueryHistoryConflict{}
}

/* QueryHistoryConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type QueryHistoryConflict struct {
}

func (o *QueryHistoryConflict) Error() string {
	return fmt.Sprintf("[GET /flow/history][%d] queryHistoryConflict ", 409)
}

func (o *QueryHistoryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
