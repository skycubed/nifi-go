// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetActionReader is a Reader for the GetAction structure.
type GetActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetActionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetActionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetActionOK creates a GetActionOK with default headers values
func NewGetActionOK() *GetActionOK {
	return &GetActionOK{}
}

/*
GetActionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetActionOK struct {
	Payload *models.ActionEntity
}

// IsSuccess returns true when this get action o k response has a 2xx status code
func (o *GetActionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get action o k response has a 3xx status code
func (o *GetActionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action o k response has a 4xx status code
func (o *GetActionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action o k response has a 5xx status code
func (o *GetActionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get action o k response a status code equal to that given
func (o *GetActionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetActionOK) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionOK  %+v", 200, o.Payload)
}

func (o *GetActionOK) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionOK  %+v", 200, o.Payload)
}

func (o *GetActionOK) GetPayload() *models.ActionEntity {
	return o.Payload
}

func (o *GetActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActionEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionBadRequest creates a GetActionBadRequest with default headers values
func NewGetActionBadRequest() *GetActionBadRequest {
	return &GetActionBadRequest{}
}

/*
GetActionBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetActionBadRequest struct {
}

// IsSuccess returns true when this get action bad request response has a 2xx status code
func (o *GetActionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action bad request response has a 3xx status code
func (o *GetActionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action bad request response has a 4xx status code
func (o *GetActionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action bad request response has a 5xx status code
func (o *GetActionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get action bad request response a status code equal to that given
func (o *GetActionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetActionBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionBadRequest ", 400)
}

func (o *GetActionBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionBadRequest ", 400)
}

func (o *GetActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionUnauthorized creates a GetActionUnauthorized with default headers values
func NewGetActionUnauthorized() *GetActionUnauthorized {
	return &GetActionUnauthorized{}
}

/*
GetActionUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetActionUnauthorized struct {
}

// IsSuccess returns true when this get action unauthorized response has a 2xx status code
func (o *GetActionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action unauthorized response has a 3xx status code
func (o *GetActionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action unauthorized response has a 4xx status code
func (o *GetActionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action unauthorized response has a 5xx status code
func (o *GetActionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get action unauthorized response a status code equal to that given
func (o *GetActionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetActionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionUnauthorized ", 401)
}

func (o *GetActionUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionUnauthorized ", 401)
}

func (o *GetActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionForbidden creates a GetActionForbidden with default headers values
func NewGetActionForbidden() *GetActionForbidden {
	return &GetActionForbidden{}
}

/*
GetActionForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetActionForbidden struct {
}

// IsSuccess returns true when this get action forbidden response has a 2xx status code
func (o *GetActionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action forbidden response has a 3xx status code
func (o *GetActionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action forbidden response has a 4xx status code
func (o *GetActionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action forbidden response has a 5xx status code
func (o *GetActionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get action forbidden response a status code equal to that given
func (o *GetActionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetActionForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionForbidden ", 403)
}

func (o *GetActionForbidden) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionForbidden ", 403)
}

func (o *GetActionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionNotFound creates a GetActionNotFound with default headers values
func NewGetActionNotFound() *GetActionNotFound {
	return &GetActionNotFound{}
}

/*
GetActionNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetActionNotFound struct {
}

// IsSuccess returns true when this get action not found response has a 2xx status code
func (o *GetActionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action not found response has a 3xx status code
func (o *GetActionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action not found response has a 4xx status code
func (o *GetActionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action not found response has a 5xx status code
func (o *GetActionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get action not found response a status code equal to that given
func (o *GetActionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetActionNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionNotFound ", 404)
}

func (o *GetActionNotFound) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionNotFound ", 404)
}

func (o *GetActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionConflict creates a GetActionConflict with default headers values
func NewGetActionConflict() *GetActionConflict {
	return &GetActionConflict{}
}

/*
GetActionConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetActionConflict struct {
}

// IsSuccess returns true when this get action conflict response has a 2xx status code
func (o *GetActionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action conflict response has a 3xx status code
func (o *GetActionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action conflict response has a 4xx status code
func (o *GetActionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action conflict response has a 5xx status code
func (o *GetActionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get action conflict response a status code equal to that given
func (o *GetActionConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetActionConflict) Error() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionConflict ", 409)
}

func (o *GetActionConflict) String() string {
	return fmt.Sprintf("[GET /flow/history/{id}][%d] getActionConflict ", 409)
}

func (o *GetActionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
