// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetFlowReader is a Reader for the GetFlow structure.
type GetFlowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowOK creates a GetFlowOK with default headers values
func NewGetFlowOK() *GetFlowOK {
	return &GetFlowOK{}
}

/* GetFlowOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowOK struct {
	Payload *models.ProcessGroupFlowEntity
}

func (o *GetFlowOK) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowOK  %+v", 200, o.Payload)
}
func (o *GetFlowOK) GetPayload() *models.ProcessGroupFlowEntity {
	return o.Payload
}

func (o *GetFlowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessGroupFlowEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowBadRequest creates a GetFlowBadRequest with default headers values
func NewGetFlowBadRequest() *GetFlowBadRequest {
	return &GetFlowBadRequest{}
}

/* GetFlowBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowBadRequest struct {
}

func (o *GetFlowBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowBadRequest ", 400)
}

func (o *GetFlowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowUnauthorized creates a GetFlowUnauthorized with default headers values
func NewGetFlowUnauthorized() *GetFlowUnauthorized {
	return &GetFlowUnauthorized{}
}

/* GetFlowUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowUnauthorized struct {
}

func (o *GetFlowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowUnauthorized ", 401)
}

func (o *GetFlowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowForbidden creates a GetFlowForbidden with default headers values
func NewGetFlowForbidden() *GetFlowForbidden {
	return &GetFlowForbidden{}
}

/* GetFlowForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowForbidden struct {
}

func (o *GetFlowForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowForbidden ", 403)
}

func (o *GetFlowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowNotFound creates a GetFlowNotFound with default headers values
func NewGetFlowNotFound() *GetFlowNotFound {
	return &GetFlowNotFound{}
}

/* GetFlowNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowNotFound struct {
}

func (o *GetFlowNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowNotFound ", 404)
}

func (o *GetFlowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowConflict creates a GetFlowConflict with default headers values
func NewGetFlowConflict() *GetFlowConflict {
	return &GetFlowConflict{}
}

/* GetFlowConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetFlowConflict struct {
}

func (o *GetFlowConflict) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}][%d] getFlowConflict ", 409)
}

func (o *GetFlowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
