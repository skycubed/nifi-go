// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetFlowMetricsParams creates a new GetFlowMetricsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetFlowMetricsParams() *GetFlowMetricsParams {
	return &GetFlowMetricsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlowMetricsParamsWithTimeout creates a new GetFlowMetricsParams object
// with the ability to set a timeout on a request.
func NewGetFlowMetricsParamsWithTimeout(timeout time.Duration) *GetFlowMetricsParams {
	return &GetFlowMetricsParams{
		timeout: timeout,
	}
}

// NewGetFlowMetricsParamsWithContext creates a new GetFlowMetricsParams object
// with the ability to set a context for a request.
func NewGetFlowMetricsParamsWithContext(ctx context.Context) *GetFlowMetricsParams {
	return &GetFlowMetricsParams{
		Context: ctx,
	}
}

// NewGetFlowMetricsParamsWithHTTPClient creates a new GetFlowMetricsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetFlowMetricsParamsWithHTTPClient(client *http.Client) *GetFlowMetricsParams {
	return &GetFlowMetricsParams{
		HTTPClient: client,
	}
}

/*
GetFlowMetricsParams contains all the parameters to send to the API endpoint

	for the get flow metrics operation.

	Typically these are written to a http.Request.
*/
type GetFlowMetricsParams struct {

	/* IncludedRegistries.

	   Set of included metrics registries
	*/
	IncludedRegistries []string

	/* Producer.

	   The producer for flow file metrics. Each producer may have its own output format.
	*/
	Producer string

	/* RootFieldName.

	   Name of the first field of JSON object. Applicable for JSON producer only.
	*/
	RootFieldName *string

	/* SampleLabelValue.

	   Regular Expression Pattern to be applied against the sample label value field
	*/
	SampleLabelValue *string

	/* SampleName.

	   Regular Expression Pattern to be applied against the sample name field
	*/
	SampleName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get flow metrics params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFlowMetricsParams) WithDefaults() *GetFlowMetricsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get flow metrics params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFlowMetricsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get flow metrics params
func (o *GetFlowMetricsParams) WithTimeout(timeout time.Duration) *GetFlowMetricsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flow metrics params
func (o *GetFlowMetricsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flow metrics params
func (o *GetFlowMetricsParams) WithContext(ctx context.Context) *GetFlowMetricsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flow metrics params
func (o *GetFlowMetricsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flow metrics params
func (o *GetFlowMetricsParams) WithHTTPClient(client *http.Client) *GetFlowMetricsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flow metrics params
func (o *GetFlowMetricsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludedRegistries adds the includedRegistries to the get flow metrics params
func (o *GetFlowMetricsParams) WithIncludedRegistries(includedRegistries []string) *GetFlowMetricsParams {
	o.SetIncludedRegistries(includedRegistries)
	return o
}

// SetIncludedRegistries adds the includedRegistries to the get flow metrics params
func (o *GetFlowMetricsParams) SetIncludedRegistries(includedRegistries []string) {
	o.IncludedRegistries = includedRegistries
}

// WithProducer adds the producer to the get flow metrics params
func (o *GetFlowMetricsParams) WithProducer(producer string) *GetFlowMetricsParams {
	o.SetProducer(producer)
	return o
}

// SetProducer adds the producer to the get flow metrics params
func (o *GetFlowMetricsParams) SetProducer(producer string) {
	o.Producer = producer
}

// WithRootFieldName adds the rootFieldName to the get flow metrics params
func (o *GetFlowMetricsParams) WithRootFieldName(rootFieldName *string) *GetFlowMetricsParams {
	o.SetRootFieldName(rootFieldName)
	return o
}

// SetRootFieldName adds the rootFieldName to the get flow metrics params
func (o *GetFlowMetricsParams) SetRootFieldName(rootFieldName *string) {
	o.RootFieldName = rootFieldName
}

// WithSampleLabelValue adds the sampleLabelValue to the get flow metrics params
func (o *GetFlowMetricsParams) WithSampleLabelValue(sampleLabelValue *string) *GetFlowMetricsParams {
	o.SetSampleLabelValue(sampleLabelValue)
	return o
}

// SetSampleLabelValue adds the sampleLabelValue to the get flow metrics params
func (o *GetFlowMetricsParams) SetSampleLabelValue(sampleLabelValue *string) {
	o.SampleLabelValue = sampleLabelValue
}

// WithSampleName adds the sampleName to the get flow metrics params
func (o *GetFlowMetricsParams) WithSampleName(sampleName *string) *GetFlowMetricsParams {
	o.SetSampleName(sampleName)
	return o
}

// SetSampleName adds the sampleName to the get flow metrics params
func (o *GetFlowMetricsParams) SetSampleName(sampleName *string) {
	o.SampleName = sampleName
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlowMetricsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludedRegistries != nil {

		// binding items for includedRegistries
		joinedIncludedRegistries := o.bindParamIncludedRegistries(reg)

		// query array param includedRegistries
		if err := r.SetQueryParam("includedRegistries", joinedIncludedRegistries...); err != nil {
			return err
		}
	}

	// path param producer
	if err := r.SetPathParam("producer", o.Producer); err != nil {
		return err
	}

	if o.RootFieldName != nil {

		// query param rootFieldName
		var qrRootFieldName string

		if o.RootFieldName != nil {
			qrRootFieldName = *o.RootFieldName
		}
		qRootFieldName := qrRootFieldName
		if qRootFieldName != "" {

			if err := r.SetQueryParam("rootFieldName", qRootFieldName); err != nil {
				return err
			}
		}
	}

	if o.SampleLabelValue != nil {

		// query param sampleLabelValue
		var qrSampleLabelValue string

		if o.SampleLabelValue != nil {
			qrSampleLabelValue = *o.SampleLabelValue
		}
		qSampleLabelValue := qrSampleLabelValue
		if qSampleLabelValue != "" {

			if err := r.SetQueryParam("sampleLabelValue", qSampleLabelValue); err != nil {
				return err
			}
		}
	}

	if o.SampleName != nil {

		// query param sampleName
		var qrSampleName string

		if o.SampleName != nil {
			qrSampleName = *o.SampleName
		}
		qSampleName := qrSampleName
		if qSampleName != "" {

			if err := r.SetQueryParam("sampleName", qSampleName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetFlowMetrics binds the parameter includedRegistries
func (o *GetFlowMetricsParams) bindParamIncludedRegistries(formats strfmt.Registry) []string {
	includedRegistriesIR := o.IncludedRegistries

	var includedRegistriesIC []string
	for _, includedRegistriesIIR := range includedRegistriesIR { // explode []string

		includedRegistriesIIV := includedRegistriesIIR // string as string
		includedRegistriesIC = append(includedRegistriesIC, includedRegistriesIIV)
	}

	// items.CollectionFormat: "multi"
	includedRegistriesIS := swag.JoinByFormat(includedRegistriesIC, "multi")

	return includedRegistriesIS
}
