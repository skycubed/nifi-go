// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetControllerServicesFromGroupReader is a Reader for the GetControllerServicesFromGroup structure.
type GetControllerServicesFromGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetControllerServicesFromGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetControllerServicesFromGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetControllerServicesFromGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetControllerServicesFromGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetControllerServicesFromGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetControllerServicesFromGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetControllerServicesFromGroupOK creates a GetControllerServicesFromGroupOK with default headers values
func NewGetControllerServicesFromGroupOK() *GetControllerServicesFromGroupOK {
	return &GetControllerServicesFromGroupOK{}
}

/*
GetControllerServicesFromGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetControllerServicesFromGroupOK struct {
	Payload *models.ControllerServicesEntity
}

// IsSuccess returns true when this get controller services from group o k response has a 2xx status code
func (o *GetControllerServicesFromGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get controller services from group o k response has a 3xx status code
func (o *GetControllerServicesFromGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get controller services from group o k response has a 4xx status code
func (o *GetControllerServicesFromGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get controller services from group o k response has a 5xx status code
func (o *GetControllerServicesFromGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get controller services from group o k response a status code equal to that given
func (o *GetControllerServicesFromGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetControllerServicesFromGroupOK) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupOK  %+v", 200, o.Payload)
}

func (o *GetControllerServicesFromGroupOK) String() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupOK  %+v", 200, o.Payload)
}

func (o *GetControllerServicesFromGroupOK) GetPayload() *models.ControllerServicesEntity {
	return o.Payload
}

func (o *GetControllerServicesFromGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServicesEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetControllerServicesFromGroupBadRequest creates a GetControllerServicesFromGroupBadRequest with default headers values
func NewGetControllerServicesFromGroupBadRequest() *GetControllerServicesFromGroupBadRequest {
	return &GetControllerServicesFromGroupBadRequest{}
}

/*
GetControllerServicesFromGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetControllerServicesFromGroupBadRequest struct {
}

// IsSuccess returns true when this get controller services from group bad request response has a 2xx status code
func (o *GetControllerServicesFromGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get controller services from group bad request response has a 3xx status code
func (o *GetControllerServicesFromGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get controller services from group bad request response has a 4xx status code
func (o *GetControllerServicesFromGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get controller services from group bad request response has a 5xx status code
func (o *GetControllerServicesFromGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get controller services from group bad request response a status code equal to that given
func (o *GetControllerServicesFromGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetControllerServicesFromGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupBadRequest ", 400)
}

func (o *GetControllerServicesFromGroupBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupBadRequest ", 400)
}

func (o *GetControllerServicesFromGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServicesFromGroupUnauthorized creates a GetControllerServicesFromGroupUnauthorized with default headers values
func NewGetControllerServicesFromGroupUnauthorized() *GetControllerServicesFromGroupUnauthorized {
	return &GetControllerServicesFromGroupUnauthorized{}
}

/*
GetControllerServicesFromGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetControllerServicesFromGroupUnauthorized struct {
}

// IsSuccess returns true when this get controller services from group unauthorized response has a 2xx status code
func (o *GetControllerServicesFromGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get controller services from group unauthorized response has a 3xx status code
func (o *GetControllerServicesFromGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get controller services from group unauthorized response has a 4xx status code
func (o *GetControllerServicesFromGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get controller services from group unauthorized response has a 5xx status code
func (o *GetControllerServicesFromGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get controller services from group unauthorized response a status code equal to that given
func (o *GetControllerServicesFromGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetControllerServicesFromGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupUnauthorized ", 401)
}

func (o *GetControllerServicesFromGroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupUnauthorized ", 401)
}

func (o *GetControllerServicesFromGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServicesFromGroupForbidden creates a GetControllerServicesFromGroupForbidden with default headers values
func NewGetControllerServicesFromGroupForbidden() *GetControllerServicesFromGroupForbidden {
	return &GetControllerServicesFromGroupForbidden{}
}

/*
GetControllerServicesFromGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetControllerServicesFromGroupForbidden struct {
}

// IsSuccess returns true when this get controller services from group forbidden response has a 2xx status code
func (o *GetControllerServicesFromGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get controller services from group forbidden response has a 3xx status code
func (o *GetControllerServicesFromGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get controller services from group forbidden response has a 4xx status code
func (o *GetControllerServicesFromGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get controller services from group forbidden response has a 5xx status code
func (o *GetControllerServicesFromGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get controller services from group forbidden response a status code equal to that given
func (o *GetControllerServicesFromGroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetControllerServicesFromGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupForbidden ", 403)
}

func (o *GetControllerServicesFromGroupForbidden) String() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupForbidden ", 403)
}

func (o *GetControllerServicesFromGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServicesFromGroupConflict creates a GetControllerServicesFromGroupConflict with default headers values
func NewGetControllerServicesFromGroupConflict() *GetControllerServicesFromGroupConflict {
	return &GetControllerServicesFromGroupConflict{}
}

/*
GetControllerServicesFromGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetControllerServicesFromGroupConflict struct {
}

// IsSuccess returns true when this get controller services from group conflict response has a 2xx status code
func (o *GetControllerServicesFromGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get controller services from group conflict response has a 3xx status code
func (o *GetControllerServicesFromGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get controller services from group conflict response has a 4xx status code
func (o *GetControllerServicesFromGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get controller services from group conflict response has a 5xx status code
func (o *GetControllerServicesFromGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get controller services from group conflict response a status code equal to that given
func (o *GetControllerServicesFromGroupConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetControllerServicesFromGroupConflict) Error() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupConflict ", 409)
}

func (o *GetControllerServicesFromGroupConflict) String() string {
	return fmt.Sprintf("[GET /flow/process-groups/{id}/controller-services][%d] getControllerServicesFromGroupConflict ", 409)
}

func (o *GetControllerServicesFromGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
