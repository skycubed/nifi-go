// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetReportingTasksReader is a Reader for the GetReportingTasks structure.
type GetReportingTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportingTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportingTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReportingTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetReportingTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReportingTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetReportingTasksConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReportingTasksOK creates a GetReportingTasksOK with default headers values
func NewGetReportingTasksOK() *GetReportingTasksOK {
	return &GetReportingTasksOK{}
}

/* GetReportingTasksOK describes a response with status code 200, with default header values.

successful operation
*/
type GetReportingTasksOK struct {
	Payload *models.ReportingTasksEntity
}

func (o *GetReportingTasksOK) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-tasks][%d] getReportingTasksOK  %+v", 200, o.Payload)
}
func (o *GetReportingTasksOK) GetPayload() *models.ReportingTasksEntity {
	return o.Payload
}

func (o *GetReportingTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportingTasksEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportingTasksBadRequest creates a GetReportingTasksBadRequest with default headers values
func NewGetReportingTasksBadRequest() *GetReportingTasksBadRequest {
	return &GetReportingTasksBadRequest{}
}

/* GetReportingTasksBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetReportingTasksBadRequest struct {
}

func (o *GetReportingTasksBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-tasks][%d] getReportingTasksBadRequest ", 400)
}

func (o *GetReportingTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTasksUnauthorized creates a GetReportingTasksUnauthorized with default headers values
func NewGetReportingTasksUnauthorized() *GetReportingTasksUnauthorized {
	return &GetReportingTasksUnauthorized{}
}

/* GetReportingTasksUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetReportingTasksUnauthorized struct {
}

func (o *GetReportingTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-tasks][%d] getReportingTasksUnauthorized ", 401)
}

func (o *GetReportingTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTasksForbidden creates a GetReportingTasksForbidden with default headers values
func NewGetReportingTasksForbidden() *GetReportingTasksForbidden {
	return &GetReportingTasksForbidden{}
}

/* GetReportingTasksForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetReportingTasksForbidden struct {
}

func (o *GetReportingTasksForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-tasks][%d] getReportingTasksForbidden ", 403)
}

func (o *GetReportingTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTasksConflict creates a GetReportingTasksConflict with default headers values
func NewGetReportingTasksConflict() *GetReportingTasksConflict {
	return &GetReportingTasksConflict{}
}

/* GetReportingTasksConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetReportingTasksConflict struct {
}

func (o *GetReportingTasksConflict) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-tasks][%d] getReportingTasksConflict ", 409)
}

func (o *GetReportingTasksConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
