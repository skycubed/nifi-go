// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetParameterProvidersReader is a Reader for the GetParameterProviders structure.
type GetParameterProvidersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetParameterProvidersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetParameterProvidersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetParameterProvidersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetParameterProvidersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetParameterProvidersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetParameterProvidersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /flow/parameter-providers] getParameterProviders", response, response.Code())
	}
}

// NewGetParameterProvidersOK creates a GetParameterProvidersOK with default headers values
func NewGetParameterProvidersOK() *GetParameterProvidersOK {
	return &GetParameterProvidersOK{}
}

/*
GetParameterProvidersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetParameterProvidersOK struct {
	Payload *models.ParameterProvidersEntity
}

// IsSuccess returns true when this get parameter providers o k response has a 2xx status code
func (o *GetParameterProvidersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get parameter providers o k response has a 3xx status code
func (o *GetParameterProvidersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter providers o k response has a 4xx status code
func (o *GetParameterProvidersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get parameter providers o k response has a 5xx status code
func (o *GetParameterProvidersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter providers o k response a status code equal to that given
func (o *GetParameterProvidersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get parameter providers o k response
func (o *GetParameterProvidersOK) Code() int {
	return 200
}

func (o *GetParameterProvidersOK) Error() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersOK  %+v", 200, o.Payload)
}

func (o *GetParameterProvidersOK) String() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersOK  %+v", 200, o.Payload)
}

func (o *GetParameterProvidersOK) GetPayload() *models.ParameterProvidersEntity {
	return o.Payload
}

func (o *GetParameterProvidersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterProvidersEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetParameterProvidersBadRequest creates a GetParameterProvidersBadRequest with default headers values
func NewGetParameterProvidersBadRequest() *GetParameterProvidersBadRequest {
	return &GetParameterProvidersBadRequest{}
}

/*
GetParameterProvidersBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetParameterProvidersBadRequest struct {
}

// IsSuccess returns true when this get parameter providers bad request response has a 2xx status code
func (o *GetParameterProvidersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter providers bad request response has a 3xx status code
func (o *GetParameterProvidersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter providers bad request response has a 4xx status code
func (o *GetParameterProvidersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter providers bad request response has a 5xx status code
func (o *GetParameterProvidersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter providers bad request response a status code equal to that given
func (o *GetParameterProvidersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get parameter providers bad request response
func (o *GetParameterProvidersBadRequest) Code() int {
	return 400
}

func (o *GetParameterProvidersBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersBadRequest ", 400)
}

func (o *GetParameterProvidersBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersBadRequest ", 400)
}

func (o *GetParameterProvidersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProvidersUnauthorized creates a GetParameterProvidersUnauthorized with default headers values
func NewGetParameterProvidersUnauthorized() *GetParameterProvidersUnauthorized {
	return &GetParameterProvidersUnauthorized{}
}

/*
GetParameterProvidersUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetParameterProvidersUnauthorized struct {
}

// IsSuccess returns true when this get parameter providers unauthorized response has a 2xx status code
func (o *GetParameterProvidersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter providers unauthorized response has a 3xx status code
func (o *GetParameterProvidersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter providers unauthorized response has a 4xx status code
func (o *GetParameterProvidersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter providers unauthorized response has a 5xx status code
func (o *GetParameterProvidersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter providers unauthorized response a status code equal to that given
func (o *GetParameterProvidersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get parameter providers unauthorized response
func (o *GetParameterProvidersUnauthorized) Code() int {
	return 401
}

func (o *GetParameterProvidersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersUnauthorized ", 401)
}

func (o *GetParameterProvidersUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersUnauthorized ", 401)
}

func (o *GetParameterProvidersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProvidersForbidden creates a GetParameterProvidersForbidden with default headers values
func NewGetParameterProvidersForbidden() *GetParameterProvidersForbidden {
	return &GetParameterProvidersForbidden{}
}

/*
GetParameterProvidersForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetParameterProvidersForbidden struct {
}

// IsSuccess returns true when this get parameter providers forbidden response has a 2xx status code
func (o *GetParameterProvidersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter providers forbidden response has a 3xx status code
func (o *GetParameterProvidersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter providers forbidden response has a 4xx status code
func (o *GetParameterProvidersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter providers forbidden response has a 5xx status code
func (o *GetParameterProvidersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter providers forbidden response a status code equal to that given
func (o *GetParameterProvidersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get parameter providers forbidden response
func (o *GetParameterProvidersForbidden) Code() int {
	return 403
}

func (o *GetParameterProvidersForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersForbidden ", 403)
}

func (o *GetParameterProvidersForbidden) String() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersForbidden ", 403)
}

func (o *GetParameterProvidersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParameterProvidersConflict creates a GetParameterProvidersConflict with default headers values
func NewGetParameterProvidersConflict() *GetParameterProvidersConflict {
	return &GetParameterProvidersConflict{}
}

/*
GetParameterProvidersConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetParameterProvidersConflict struct {
}

// IsSuccess returns true when this get parameter providers conflict response has a 2xx status code
func (o *GetParameterProvidersConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parameter providers conflict response has a 3xx status code
func (o *GetParameterProvidersConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parameter providers conflict response has a 4xx status code
func (o *GetParameterProvidersConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parameter providers conflict response has a 5xx status code
func (o *GetParameterProvidersConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get parameter providers conflict response a status code equal to that given
func (o *GetParameterProvidersConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get parameter providers conflict response
func (o *GetParameterProvidersConflict) Code() int {
	return 409
}

func (o *GetParameterProvidersConflict) Error() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersConflict ", 409)
}

func (o *GetParameterProvidersConflict) String() string {
	return fmt.Sprintf("[GET /flow/parameter-providers][%d] getParameterProvidersConflict ", 409)
}

func (o *GetParameterProvidersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
