// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetReportingTaskTypesReader is a Reader for the GetReportingTaskTypes structure.
type GetReportingTaskTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportingTaskTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportingTaskTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReportingTaskTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetReportingTaskTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReportingTaskTypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetReportingTaskTypesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReportingTaskTypesOK creates a GetReportingTaskTypesOK with default headers values
func NewGetReportingTaskTypesOK() *GetReportingTaskTypesOK {
	return &GetReportingTaskTypesOK{}
}

/* GetReportingTaskTypesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetReportingTaskTypesOK struct {
	Payload *models.ReportingTaskTypesEntity
}

func (o *GetReportingTaskTypesOK) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-task-types][%d] getReportingTaskTypesOK  %+v", 200, o.Payload)
}
func (o *GetReportingTaskTypesOK) GetPayload() *models.ReportingTaskTypesEntity {
	return o.Payload
}

func (o *GetReportingTaskTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportingTaskTypesEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportingTaskTypesBadRequest creates a GetReportingTaskTypesBadRequest with default headers values
func NewGetReportingTaskTypesBadRequest() *GetReportingTaskTypesBadRequest {
	return &GetReportingTaskTypesBadRequest{}
}

/* GetReportingTaskTypesBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetReportingTaskTypesBadRequest struct {
}

func (o *GetReportingTaskTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-task-types][%d] getReportingTaskTypesBadRequest ", 400)
}

func (o *GetReportingTaskTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTaskTypesUnauthorized creates a GetReportingTaskTypesUnauthorized with default headers values
func NewGetReportingTaskTypesUnauthorized() *GetReportingTaskTypesUnauthorized {
	return &GetReportingTaskTypesUnauthorized{}
}

/* GetReportingTaskTypesUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetReportingTaskTypesUnauthorized struct {
}

func (o *GetReportingTaskTypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-task-types][%d] getReportingTaskTypesUnauthorized ", 401)
}

func (o *GetReportingTaskTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTaskTypesForbidden creates a GetReportingTaskTypesForbidden with default headers values
func NewGetReportingTaskTypesForbidden() *GetReportingTaskTypesForbidden {
	return &GetReportingTaskTypesForbidden{}
}

/* GetReportingTaskTypesForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetReportingTaskTypesForbidden struct {
}

func (o *GetReportingTaskTypesForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-task-types][%d] getReportingTaskTypesForbidden ", 403)
}

func (o *GetReportingTaskTypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReportingTaskTypesConflict creates a GetReportingTaskTypesConflict with default headers values
func NewGetReportingTaskTypesConflict() *GetReportingTaskTypesConflict {
	return &GetReportingTaskTypesConflict{}
}

/* GetReportingTaskTypesConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetReportingTaskTypesConflict struct {
}

func (o *GetReportingTaskTypesConflict) Error() string {
	return fmt.Sprintf("[GET /flow/reporting-task-types][%d] getReportingTaskTypesConflict ", 409)
}

func (o *GetReportingTaskTypesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
