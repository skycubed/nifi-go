// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SearchClusterReader is a Reader for the SearchCluster structure.
type SearchClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSearchClusterConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchClusterOK creates a SearchClusterOK with default headers values
func NewSearchClusterOK() *SearchClusterOK {
	return &SearchClusterOK{}
}

/* SearchClusterOK describes a response with status code 200, with default header values.

successful operation
*/
type SearchClusterOK struct {
	Payload *models.ClusterSearchResultsEntity
}

func (o *SearchClusterOK) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterOK  %+v", 200, o.Payload)
}
func (o *SearchClusterOK) GetPayload() *models.ClusterSearchResultsEntity {
	return o.Payload
}

func (o *SearchClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterSearchResultsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchClusterBadRequest creates a SearchClusterBadRequest with default headers values
func NewSearchClusterBadRequest() *SearchClusterBadRequest {
	return &SearchClusterBadRequest{}
}

/* SearchClusterBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SearchClusterBadRequest struct {
}

func (o *SearchClusterBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterBadRequest ", 400)
}

func (o *SearchClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchClusterUnauthorized creates a SearchClusterUnauthorized with default headers values
func NewSearchClusterUnauthorized() *SearchClusterUnauthorized {
	return &SearchClusterUnauthorized{}
}

/* SearchClusterUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SearchClusterUnauthorized struct {
}

func (o *SearchClusterUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterUnauthorized ", 401)
}

func (o *SearchClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchClusterForbidden creates a SearchClusterForbidden with default headers values
func NewSearchClusterForbidden() *SearchClusterForbidden {
	return &SearchClusterForbidden{}
}

/* SearchClusterForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SearchClusterForbidden struct {
}

func (o *SearchClusterForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterForbidden ", 403)
}

func (o *SearchClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchClusterNotFound creates a SearchClusterNotFound with default headers values
func NewSearchClusterNotFound() *SearchClusterNotFound {
	return &SearchClusterNotFound{}
}

/* SearchClusterNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type SearchClusterNotFound struct {
}

func (o *SearchClusterNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterNotFound ", 404)
}

func (o *SearchClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchClusterConflict creates a SearchClusterConflict with default headers values
func NewSearchClusterConflict() *SearchClusterConflict {
	return &SearchClusterConflict{}
}

/* SearchClusterConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SearchClusterConflict struct {
}

func (o *SearchClusterConflict) Error() string {
	return fmt.Sprintf("[GET /flow/cluster/search-results][%d] searchClusterConflict ", 409)
}

func (o *SearchClusterConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
