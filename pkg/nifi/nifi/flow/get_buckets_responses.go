// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetBucketsReader is a Reader for the GetBuckets structure.
type GetBucketsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBucketsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBucketsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBucketsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBucketsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBucketsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBucketsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetBucketsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /flow/registries/{id}/buckets] getBuckets", response, response.Code())
	}
}

// NewGetBucketsOK creates a GetBucketsOK with default headers values
func NewGetBucketsOK() *GetBucketsOK {
	return &GetBucketsOK{}
}

/*
GetBucketsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBucketsOK struct {
	Payload *models.FlowRegistryBucketsEntity
}

// IsSuccess returns true when this get buckets o k response has a 2xx status code
func (o *GetBucketsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get buckets o k response has a 3xx status code
func (o *GetBucketsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets o k response has a 4xx status code
func (o *GetBucketsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get buckets o k response has a 5xx status code
func (o *GetBucketsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets o k response a status code equal to that given
func (o *GetBucketsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get buckets o k response
func (o *GetBucketsOK) Code() int {
	return 200
}

func (o *GetBucketsOK) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsOK  %+v", 200, o.Payload)
}

func (o *GetBucketsOK) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsOK  %+v", 200, o.Payload)
}

func (o *GetBucketsOK) GetPayload() *models.FlowRegistryBucketsEntity {
	return o.Payload
}

func (o *GetBucketsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowRegistryBucketsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBucketsBadRequest creates a GetBucketsBadRequest with default headers values
func NewGetBucketsBadRequest() *GetBucketsBadRequest {
	return &GetBucketsBadRequest{}
}

/*
GetBucketsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetBucketsBadRequest struct {
}

// IsSuccess returns true when this get buckets bad request response has a 2xx status code
func (o *GetBucketsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get buckets bad request response has a 3xx status code
func (o *GetBucketsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets bad request response has a 4xx status code
func (o *GetBucketsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get buckets bad request response has a 5xx status code
func (o *GetBucketsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets bad request response a status code equal to that given
func (o *GetBucketsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get buckets bad request response
func (o *GetBucketsBadRequest) Code() int {
	return 400
}

func (o *GetBucketsBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsBadRequest ", 400)
}

func (o *GetBucketsBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsBadRequest ", 400)
}

func (o *GetBucketsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketsUnauthorized creates a GetBucketsUnauthorized with default headers values
func NewGetBucketsUnauthorized() *GetBucketsUnauthorized {
	return &GetBucketsUnauthorized{}
}

/*
GetBucketsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetBucketsUnauthorized struct {
}

// IsSuccess returns true when this get buckets unauthorized response has a 2xx status code
func (o *GetBucketsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get buckets unauthorized response has a 3xx status code
func (o *GetBucketsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets unauthorized response has a 4xx status code
func (o *GetBucketsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get buckets unauthorized response has a 5xx status code
func (o *GetBucketsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets unauthorized response a status code equal to that given
func (o *GetBucketsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get buckets unauthorized response
func (o *GetBucketsUnauthorized) Code() int {
	return 401
}

func (o *GetBucketsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsUnauthorized ", 401)
}

func (o *GetBucketsUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsUnauthorized ", 401)
}

func (o *GetBucketsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketsForbidden creates a GetBucketsForbidden with default headers values
func NewGetBucketsForbidden() *GetBucketsForbidden {
	return &GetBucketsForbidden{}
}

/*
GetBucketsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetBucketsForbidden struct {
}

// IsSuccess returns true when this get buckets forbidden response has a 2xx status code
func (o *GetBucketsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get buckets forbidden response has a 3xx status code
func (o *GetBucketsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets forbidden response has a 4xx status code
func (o *GetBucketsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get buckets forbidden response has a 5xx status code
func (o *GetBucketsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets forbidden response a status code equal to that given
func (o *GetBucketsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get buckets forbidden response
func (o *GetBucketsForbidden) Code() int {
	return 403
}

func (o *GetBucketsForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsForbidden ", 403)
}

func (o *GetBucketsForbidden) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsForbidden ", 403)
}

func (o *GetBucketsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketsNotFound creates a GetBucketsNotFound with default headers values
func NewGetBucketsNotFound() *GetBucketsNotFound {
	return &GetBucketsNotFound{}
}

/*
GetBucketsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetBucketsNotFound struct {
}

// IsSuccess returns true when this get buckets not found response has a 2xx status code
func (o *GetBucketsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get buckets not found response has a 3xx status code
func (o *GetBucketsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets not found response has a 4xx status code
func (o *GetBucketsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get buckets not found response has a 5xx status code
func (o *GetBucketsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets not found response a status code equal to that given
func (o *GetBucketsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get buckets not found response
func (o *GetBucketsNotFound) Code() int {
	return 404
}

func (o *GetBucketsNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsNotFound ", 404)
}

func (o *GetBucketsNotFound) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsNotFound ", 404)
}

func (o *GetBucketsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBucketsConflict creates a GetBucketsConflict with default headers values
func NewGetBucketsConflict() *GetBucketsConflict {
	return &GetBucketsConflict{}
}

/*
GetBucketsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetBucketsConflict struct {
}

// IsSuccess returns true when this get buckets conflict response has a 2xx status code
func (o *GetBucketsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get buckets conflict response has a 3xx status code
func (o *GetBucketsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get buckets conflict response has a 4xx status code
func (o *GetBucketsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get buckets conflict response has a 5xx status code
func (o *GetBucketsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get buckets conflict response a status code equal to that given
func (o *GetBucketsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get buckets conflict response
func (o *GetBucketsConflict) Code() int {
	return 409
}

func (o *GetBucketsConflict) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsConflict ", 409)
}

func (o *GetBucketsConflict) String() string {
	return fmt.Sprintf("[GET /flow/registries/{id}/buckets][%d] getBucketsConflict ", 409)
}

func (o *GetBucketsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
