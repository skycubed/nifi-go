// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetFlowMetricsReader is a Reader for the GetFlowMetrics structure.
type GetFlowMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowMetricsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowMetricsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowMetricsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /flow/metrics/{producer}] getFlowMetrics", response, response.Code())
	}
}

// NewGetFlowMetricsOK creates a GetFlowMetricsOK with default headers values
func NewGetFlowMetricsOK() *GetFlowMetricsOK {
	return &GetFlowMetricsOK{}
}

/*
GetFlowMetricsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowMetricsOK struct {
	Payload models.StreamingOutput
}

// IsSuccess returns true when this get flow metrics o k response has a 2xx status code
func (o *GetFlowMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow metrics o k response has a 3xx status code
func (o *GetFlowMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics o k response has a 4xx status code
func (o *GetFlowMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow metrics o k response has a 5xx status code
func (o *GetFlowMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics o k response a status code equal to that given
func (o *GetFlowMetricsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get flow metrics o k response
func (o *GetFlowMetricsOK) Code() int {
	return 200
}

func (o *GetFlowMetricsOK) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsOK  %+v", 200, o.Payload)
}

func (o *GetFlowMetricsOK) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsOK  %+v", 200, o.Payload)
}

func (o *GetFlowMetricsOK) GetPayload() models.StreamingOutput {
	return o.Payload
}

func (o *GetFlowMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowMetricsBadRequest creates a GetFlowMetricsBadRequest with default headers values
func NewGetFlowMetricsBadRequest() *GetFlowMetricsBadRequest {
	return &GetFlowMetricsBadRequest{}
}

/*
GetFlowMetricsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowMetricsBadRequest struct {
}

// IsSuccess returns true when this get flow metrics bad request response has a 2xx status code
func (o *GetFlowMetricsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow metrics bad request response has a 3xx status code
func (o *GetFlowMetricsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics bad request response has a 4xx status code
func (o *GetFlowMetricsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow metrics bad request response has a 5xx status code
func (o *GetFlowMetricsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics bad request response a status code equal to that given
func (o *GetFlowMetricsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get flow metrics bad request response
func (o *GetFlowMetricsBadRequest) Code() int {
	return 400
}

func (o *GetFlowMetricsBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsBadRequest ", 400)
}

func (o *GetFlowMetricsBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsBadRequest ", 400)
}

func (o *GetFlowMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsUnauthorized creates a GetFlowMetricsUnauthorized with default headers values
func NewGetFlowMetricsUnauthorized() *GetFlowMetricsUnauthorized {
	return &GetFlowMetricsUnauthorized{}
}

/*
GetFlowMetricsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowMetricsUnauthorized struct {
}

// IsSuccess returns true when this get flow metrics unauthorized response has a 2xx status code
func (o *GetFlowMetricsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow metrics unauthorized response has a 3xx status code
func (o *GetFlowMetricsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics unauthorized response has a 4xx status code
func (o *GetFlowMetricsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow metrics unauthorized response has a 5xx status code
func (o *GetFlowMetricsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics unauthorized response a status code equal to that given
func (o *GetFlowMetricsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get flow metrics unauthorized response
func (o *GetFlowMetricsUnauthorized) Code() int {
	return 401
}

func (o *GetFlowMetricsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsUnauthorized ", 401)
}

func (o *GetFlowMetricsUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsUnauthorized ", 401)
}

func (o *GetFlowMetricsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsForbidden creates a GetFlowMetricsForbidden with default headers values
func NewGetFlowMetricsForbidden() *GetFlowMetricsForbidden {
	return &GetFlowMetricsForbidden{}
}

/*
GetFlowMetricsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowMetricsForbidden struct {
}

// IsSuccess returns true when this get flow metrics forbidden response has a 2xx status code
func (o *GetFlowMetricsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow metrics forbidden response has a 3xx status code
func (o *GetFlowMetricsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics forbidden response has a 4xx status code
func (o *GetFlowMetricsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow metrics forbidden response has a 5xx status code
func (o *GetFlowMetricsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics forbidden response a status code equal to that given
func (o *GetFlowMetricsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get flow metrics forbidden response
func (o *GetFlowMetricsForbidden) Code() int {
	return 403
}

func (o *GetFlowMetricsForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsForbidden ", 403)
}

func (o *GetFlowMetricsForbidden) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsForbidden ", 403)
}

func (o *GetFlowMetricsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsNotFound creates a GetFlowMetricsNotFound with default headers values
func NewGetFlowMetricsNotFound() *GetFlowMetricsNotFound {
	return &GetFlowMetricsNotFound{}
}

/*
GetFlowMetricsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowMetricsNotFound struct {
}

// IsSuccess returns true when this get flow metrics not found response has a 2xx status code
func (o *GetFlowMetricsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow metrics not found response has a 3xx status code
func (o *GetFlowMetricsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics not found response has a 4xx status code
func (o *GetFlowMetricsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow metrics not found response has a 5xx status code
func (o *GetFlowMetricsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics not found response a status code equal to that given
func (o *GetFlowMetricsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get flow metrics not found response
func (o *GetFlowMetricsNotFound) Code() int {
	return 404
}

func (o *GetFlowMetricsNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsNotFound ", 404)
}

func (o *GetFlowMetricsNotFound) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsNotFound ", 404)
}

func (o *GetFlowMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsConflict creates a GetFlowMetricsConflict with default headers values
func NewGetFlowMetricsConflict() *GetFlowMetricsConflict {
	return &GetFlowMetricsConflict{}
}

/*
GetFlowMetricsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetFlowMetricsConflict struct {
}

// IsSuccess returns true when this get flow metrics conflict response has a 2xx status code
func (o *GetFlowMetricsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow metrics conflict response has a 3xx status code
func (o *GetFlowMetricsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow metrics conflict response has a 4xx status code
func (o *GetFlowMetricsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow metrics conflict response has a 5xx status code
func (o *GetFlowMetricsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow metrics conflict response a status code equal to that given
func (o *GetFlowMetricsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get flow metrics conflict response
func (o *GetFlowMetricsConflict) Code() int {
	return 409
}

func (o *GetFlowMetricsConflict) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsConflict ", 409)
}

func (o *GetFlowMetricsConflict) String() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsConflict ", 409)
}

func (o *GetFlowMetricsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
