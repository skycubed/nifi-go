// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetFlowMetricsReader is a Reader for the GetFlowMetrics structure.
type GetFlowMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowMetricsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowMetricsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowMetricsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowMetricsOK creates a GetFlowMetricsOK with default headers values
func NewGetFlowMetricsOK() *GetFlowMetricsOK {
	return &GetFlowMetricsOK{}
}

/* GetFlowMetricsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowMetricsOK struct {
	Payload models.StreamingOutput
}

func (o *GetFlowMetricsOK) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsOK  %+v", 200, o.Payload)
}
func (o *GetFlowMetricsOK) GetPayload() models.StreamingOutput {
	return o.Payload
}

func (o *GetFlowMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowMetricsBadRequest creates a GetFlowMetricsBadRequest with default headers values
func NewGetFlowMetricsBadRequest() *GetFlowMetricsBadRequest {
	return &GetFlowMetricsBadRequest{}
}

/* GetFlowMetricsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowMetricsBadRequest struct {
}

func (o *GetFlowMetricsBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsBadRequest ", 400)
}

func (o *GetFlowMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsUnauthorized creates a GetFlowMetricsUnauthorized with default headers values
func NewGetFlowMetricsUnauthorized() *GetFlowMetricsUnauthorized {
	return &GetFlowMetricsUnauthorized{}
}

/* GetFlowMetricsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowMetricsUnauthorized struct {
}

func (o *GetFlowMetricsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsUnauthorized ", 401)
}

func (o *GetFlowMetricsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsForbidden creates a GetFlowMetricsForbidden with default headers values
func NewGetFlowMetricsForbidden() *GetFlowMetricsForbidden {
	return &GetFlowMetricsForbidden{}
}

/* GetFlowMetricsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowMetricsForbidden struct {
}

func (o *GetFlowMetricsForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsForbidden ", 403)
}

func (o *GetFlowMetricsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsNotFound creates a GetFlowMetricsNotFound with default headers values
func NewGetFlowMetricsNotFound() *GetFlowMetricsNotFound {
	return &GetFlowMetricsNotFound{}
}

/* GetFlowMetricsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetFlowMetricsNotFound struct {
}

func (o *GetFlowMetricsNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsNotFound ", 404)
}

func (o *GetFlowMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowMetricsConflict creates a GetFlowMetricsConflict with default headers values
func NewGetFlowMetricsConflict() *GetFlowMetricsConflict {
	return &GetFlowMetricsConflict{}
}

/* GetFlowMetricsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetFlowMetricsConflict struct {
}

func (o *GetFlowMetricsConflict) Error() string {
	return fmt.Sprintf("[GET /flow/metrics/{producer}][%d] getFlowMetricsConflict ", 409)
}

func (o *GetFlowMetricsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
