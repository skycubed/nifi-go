// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetFlowConfigReader is a Reader for the GetFlowConfig structure.
type GetFlowConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetFlowConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /flow/config] getFlowConfig", response, response.Code())
	}
}

// NewGetFlowConfigOK creates a GetFlowConfigOK with default headers values
func NewGetFlowConfigOK() *GetFlowConfigOK {
	return &GetFlowConfigOK{}
}

/*
GetFlowConfigOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFlowConfigOK struct {
	Payload *models.FlowConfigurationEntity
}

// IsSuccess returns true when this get flow config o k response has a 2xx status code
func (o *GetFlowConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow config o k response has a 3xx status code
func (o *GetFlowConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow config o k response has a 4xx status code
func (o *GetFlowConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow config o k response has a 5xx status code
func (o *GetFlowConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow config o k response a status code equal to that given
func (o *GetFlowConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get flow config o k response
func (o *GetFlowConfigOK) Code() int {
	return 200
}

func (o *GetFlowConfigOK) Error() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigOK  %+v", 200, o.Payload)
}

func (o *GetFlowConfigOK) String() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigOK  %+v", 200, o.Payload)
}

func (o *GetFlowConfigOK) GetPayload() *models.FlowConfigurationEntity {
	return o.Payload
}

func (o *GetFlowConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowConfigurationEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowConfigBadRequest creates a GetFlowConfigBadRequest with default headers values
func NewGetFlowConfigBadRequest() *GetFlowConfigBadRequest {
	return &GetFlowConfigBadRequest{}
}

/*
GetFlowConfigBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetFlowConfigBadRequest struct {
}

// IsSuccess returns true when this get flow config bad request response has a 2xx status code
func (o *GetFlowConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow config bad request response has a 3xx status code
func (o *GetFlowConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow config bad request response has a 4xx status code
func (o *GetFlowConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow config bad request response has a 5xx status code
func (o *GetFlowConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow config bad request response a status code equal to that given
func (o *GetFlowConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get flow config bad request response
func (o *GetFlowConfigBadRequest) Code() int {
	return 400
}

func (o *GetFlowConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigBadRequest ", 400)
}

func (o *GetFlowConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigBadRequest ", 400)
}

func (o *GetFlowConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowConfigUnauthorized creates a GetFlowConfigUnauthorized with default headers values
func NewGetFlowConfigUnauthorized() *GetFlowConfigUnauthorized {
	return &GetFlowConfigUnauthorized{}
}

/*
GetFlowConfigUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetFlowConfigUnauthorized struct {
}

// IsSuccess returns true when this get flow config unauthorized response has a 2xx status code
func (o *GetFlowConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow config unauthorized response has a 3xx status code
func (o *GetFlowConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow config unauthorized response has a 4xx status code
func (o *GetFlowConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow config unauthorized response has a 5xx status code
func (o *GetFlowConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow config unauthorized response a status code equal to that given
func (o *GetFlowConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get flow config unauthorized response
func (o *GetFlowConfigUnauthorized) Code() int {
	return 401
}

func (o *GetFlowConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigUnauthorized ", 401)
}

func (o *GetFlowConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigUnauthorized ", 401)
}

func (o *GetFlowConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowConfigForbidden creates a GetFlowConfigForbidden with default headers values
func NewGetFlowConfigForbidden() *GetFlowConfigForbidden {
	return &GetFlowConfigForbidden{}
}

/*
GetFlowConfigForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetFlowConfigForbidden struct {
}

// IsSuccess returns true when this get flow config forbidden response has a 2xx status code
func (o *GetFlowConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow config forbidden response has a 3xx status code
func (o *GetFlowConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow config forbidden response has a 4xx status code
func (o *GetFlowConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow config forbidden response has a 5xx status code
func (o *GetFlowConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow config forbidden response a status code equal to that given
func (o *GetFlowConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get flow config forbidden response
func (o *GetFlowConfigForbidden) Code() int {
	return 403
}

func (o *GetFlowConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigForbidden ", 403)
}

func (o *GetFlowConfigForbidden) String() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigForbidden ", 403)
}

func (o *GetFlowConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlowConfigConflict creates a GetFlowConfigConflict with default headers values
func NewGetFlowConfigConflict() *GetFlowConfigConflict {
	return &GetFlowConfigConflict{}
}

/*
GetFlowConfigConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetFlowConfigConflict struct {
}

// IsSuccess returns true when this get flow config conflict response has a 2xx status code
func (o *GetFlowConfigConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow config conflict response has a 3xx status code
func (o *GetFlowConfigConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow config conflict response has a 4xx status code
func (o *GetFlowConfigConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow config conflict response has a 5xx status code
func (o *GetFlowConfigConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow config conflict response a status code equal to that given
func (o *GetFlowConfigConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get flow config conflict response
func (o *GetFlowConfigConflict) Code() int {
	return 409
}

func (o *GetFlowConfigConflict) Error() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigConflict ", 409)
}

func (o *GetFlowConfigConflict) String() string {
	return fmt.Sprintf("[GET /flow/config][%d] getFlowConfigConflict ", 409)
}

func (o *GetFlowConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
