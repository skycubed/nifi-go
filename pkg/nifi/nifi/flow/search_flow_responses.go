// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SearchFlowReader is a Reader for the SearchFlow structure.
type SearchFlowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchFlowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchFlowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchFlowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchFlowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchFlowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSearchFlowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchFlowOK creates a SearchFlowOK with default headers values
func NewSearchFlowOK() *SearchFlowOK {
	return &SearchFlowOK{}
}

/* SearchFlowOK describes a response with status code 200, with default header values.

successful operation
*/
type SearchFlowOK struct {
	Payload *models.SearchResultsEntity
}

func (o *SearchFlowOK) Error() string {
	return fmt.Sprintf("[GET /flow/search-results][%d] searchFlowOK  %+v", 200, o.Payload)
}
func (o *SearchFlowOK) GetPayload() *models.SearchResultsEntity {
	return o.Payload
}

func (o *SearchFlowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchResultsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchFlowBadRequest creates a SearchFlowBadRequest with default headers values
func NewSearchFlowBadRequest() *SearchFlowBadRequest {
	return &SearchFlowBadRequest{}
}

/* SearchFlowBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SearchFlowBadRequest struct {
}

func (o *SearchFlowBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/search-results][%d] searchFlowBadRequest ", 400)
}

func (o *SearchFlowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchFlowUnauthorized creates a SearchFlowUnauthorized with default headers values
func NewSearchFlowUnauthorized() *SearchFlowUnauthorized {
	return &SearchFlowUnauthorized{}
}

/* SearchFlowUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SearchFlowUnauthorized struct {
}

func (o *SearchFlowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/search-results][%d] searchFlowUnauthorized ", 401)
}

func (o *SearchFlowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchFlowForbidden creates a SearchFlowForbidden with default headers values
func NewSearchFlowForbidden() *SearchFlowForbidden {
	return &SearchFlowForbidden{}
}

/* SearchFlowForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SearchFlowForbidden struct {
}

func (o *SearchFlowForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/search-results][%d] searchFlowForbidden ", 403)
}

func (o *SearchFlowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchFlowConflict creates a SearchFlowConflict with default headers values
func NewSearchFlowConflict() *SearchFlowConflict {
	return &SearchFlowConflict{}
}

/* SearchFlowConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SearchFlowConflict struct {
}

func (o *SearchFlowConflict) Error() string {
	return fmt.Sprintf("[GET /flow/search-results][%d] searchFlowConflict ", 409)
}

func (o *SearchFlowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
