// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetDetailsReader is a Reader for the GetDetails structure.
type GetDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetDetailsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDetailsOK creates a GetDetailsOK with default headers values
func NewGetDetailsOK() *GetDetailsOK {
	return &GetDetailsOK{}
}

/*
GetDetailsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetDetailsOK struct {
	Payload *models.VersionedFlowEntity
}

// IsSuccess returns true when this get details o k response has a 2xx status code
func (o *GetDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get details o k response has a 3xx status code
func (o *GetDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details o k response has a 4xx status code
func (o *GetDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get details o k response has a 5xx status code
func (o *GetDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get details o k response a status code equal to that given
func (o *GetDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDetailsOK) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsOK  %+v", 200, o.Payload)
}

func (o *GetDetailsOK) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsOK  %+v", 200, o.Payload)
}

func (o *GetDetailsOK) GetPayload() *models.VersionedFlowEntity {
	return o.Payload
}

func (o *GetDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDetailsBadRequest creates a GetDetailsBadRequest with default headers values
func NewGetDetailsBadRequest() *GetDetailsBadRequest {
	return &GetDetailsBadRequest{}
}

/*
GetDetailsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetDetailsBadRequest struct {
}

// IsSuccess returns true when this get details bad request response has a 2xx status code
func (o *GetDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get details bad request response has a 3xx status code
func (o *GetDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details bad request response has a 4xx status code
func (o *GetDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get details bad request response has a 5xx status code
func (o *GetDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get details bad request response a status code equal to that given
func (o *GetDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsBadRequest ", 400)
}

func (o *GetDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsBadRequest ", 400)
}

func (o *GetDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDetailsUnauthorized creates a GetDetailsUnauthorized with default headers values
func NewGetDetailsUnauthorized() *GetDetailsUnauthorized {
	return &GetDetailsUnauthorized{}
}

/*
GetDetailsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetDetailsUnauthorized struct {
}

// IsSuccess returns true when this get details unauthorized response has a 2xx status code
func (o *GetDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get details unauthorized response has a 3xx status code
func (o *GetDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details unauthorized response has a 4xx status code
func (o *GetDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get details unauthorized response has a 5xx status code
func (o *GetDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get details unauthorized response a status code equal to that given
func (o *GetDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsUnauthorized ", 401)
}

func (o *GetDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsUnauthorized ", 401)
}

func (o *GetDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDetailsForbidden creates a GetDetailsForbidden with default headers values
func NewGetDetailsForbidden() *GetDetailsForbidden {
	return &GetDetailsForbidden{}
}

/*
GetDetailsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetDetailsForbidden struct {
}

// IsSuccess returns true when this get details forbidden response has a 2xx status code
func (o *GetDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get details forbidden response has a 3xx status code
func (o *GetDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details forbidden response has a 4xx status code
func (o *GetDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get details forbidden response has a 5xx status code
func (o *GetDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get details forbidden response a status code equal to that given
func (o *GetDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsForbidden ", 403)
}

func (o *GetDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsForbidden ", 403)
}

func (o *GetDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDetailsNotFound creates a GetDetailsNotFound with default headers values
func NewGetDetailsNotFound() *GetDetailsNotFound {
	return &GetDetailsNotFound{}
}

/*
GetDetailsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetDetailsNotFound struct {
}

// IsSuccess returns true when this get details not found response has a 2xx status code
func (o *GetDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get details not found response has a 3xx status code
func (o *GetDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details not found response has a 4xx status code
func (o *GetDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get details not found response has a 5xx status code
func (o *GetDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get details not found response a status code equal to that given
func (o *GetDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsNotFound ", 404)
}

func (o *GetDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsNotFound ", 404)
}

func (o *GetDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDetailsConflict creates a GetDetailsConflict with default headers values
func NewGetDetailsConflict() *GetDetailsConflict {
	return &GetDetailsConflict{}
}

/*
GetDetailsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetDetailsConflict struct {
}

// IsSuccess returns true when this get details conflict response has a 2xx status code
func (o *GetDetailsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get details conflict response has a 3xx status code
func (o *GetDetailsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get details conflict response has a 4xx status code
func (o *GetDetailsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get details conflict response has a 5xx status code
func (o *GetDetailsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get details conflict response a status code equal to that given
func (o *GetDetailsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetDetailsConflict) Error() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsConflict ", 409)
}

func (o *GetDetailsConflict) String() string {
	return fmt.Sprintf("[GET /flow/registries/{registry-id}/buckets/{bucket-id}/flows/{flow-id}/details][%d] getDetailsConflict ", 409)
}

func (o *GetDetailsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
