// Code generated by go-swagger; DO NOT EDIT.

package labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetLabelReader is a Reader for the GetLabel structure.
type GetLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLabelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLabelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLabelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLabelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetLabelConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLabelOK creates a GetLabelOK with default headers values
func NewGetLabelOK() *GetLabelOK {
	return &GetLabelOK{}
}

/* GetLabelOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLabelOK struct {
	Payload *models.LabelEntity
}

func (o *GetLabelOK) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelOK  %+v", 200, o.Payload)
}
func (o *GetLabelOK) GetPayload() *models.LabelEntity {
	return o.Payload
}

func (o *GetLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LabelEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLabelBadRequest creates a GetLabelBadRequest with default headers values
func NewGetLabelBadRequest() *GetLabelBadRequest {
	return &GetLabelBadRequest{}
}

/* GetLabelBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetLabelBadRequest struct {
}

func (o *GetLabelBadRequest) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelBadRequest ", 400)
}

func (o *GetLabelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLabelUnauthorized creates a GetLabelUnauthorized with default headers values
func NewGetLabelUnauthorized() *GetLabelUnauthorized {
	return &GetLabelUnauthorized{}
}

/* GetLabelUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetLabelUnauthorized struct {
}

func (o *GetLabelUnauthorized) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelUnauthorized ", 401)
}

func (o *GetLabelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLabelForbidden creates a GetLabelForbidden with default headers values
func NewGetLabelForbidden() *GetLabelForbidden {
	return &GetLabelForbidden{}
}

/* GetLabelForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetLabelForbidden struct {
}

func (o *GetLabelForbidden) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelForbidden ", 403)
}

func (o *GetLabelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLabelNotFound creates a GetLabelNotFound with default headers values
func NewGetLabelNotFound() *GetLabelNotFound {
	return &GetLabelNotFound{}
}

/* GetLabelNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetLabelNotFound struct {
}

func (o *GetLabelNotFound) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelNotFound ", 404)
}

func (o *GetLabelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLabelConflict creates a GetLabelConflict with default headers values
func NewGetLabelConflict() *GetLabelConflict {
	return &GetLabelConflict{}
}

/* GetLabelConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetLabelConflict struct {
}

func (o *GetLabelConflict) Error() string {
	return fmt.Sprintf("[GET /labels/{id}][%d] getLabelConflict ", 409)
}

func (o *GetLabelConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
