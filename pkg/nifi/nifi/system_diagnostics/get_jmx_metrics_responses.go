// Code generated by go-swagger; DO NOT EDIT.

package system_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetJmxMetricsReader is a Reader for the GetJmxMetrics structure.
type GetJmxMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJmxMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJmxMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJmxMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetJmxMetricsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJmxMetricsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJmxMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetJmxMetricsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /system-diagnostics/jmx-metrics] getJmxMetrics", response, response.Code())
	}
}

// NewGetJmxMetricsOK creates a GetJmxMetricsOK with default headers values
func NewGetJmxMetricsOK() *GetJmxMetricsOK {
	return &GetJmxMetricsOK{}
}

/*
GetJmxMetricsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetJmxMetricsOK struct {
	Payload *models.JmxMetricsResultsEntity
}

// IsSuccess returns true when this get jmx metrics o k response has a 2xx status code
func (o *GetJmxMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get jmx metrics o k response has a 3xx status code
func (o *GetJmxMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics o k response has a 4xx status code
func (o *GetJmxMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get jmx metrics o k response has a 5xx status code
func (o *GetJmxMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics o k response a status code equal to that given
func (o *GetJmxMetricsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get jmx metrics o k response
func (o *GetJmxMetricsOK) Code() int {
	return 200
}

func (o *GetJmxMetricsOK) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsOK  %+v", 200, o.Payload)
}

func (o *GetJmxMetricsOK) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsOK  %+v", 200, o.Payload)
}

func (o *GetJmxMetricsOK) GetPayload() *models.JmxMetricsResultsEntity {
	return o.Payload
}

func (o *GetJmxMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JmxMetricsResultsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJmxMetricsBadRequest creates a GetJmxMetricsBadRequest with default headers values
func NewGetJmxMetricsBadRequest() *GetJmxMetricsBadRequest {
	return &GetJmxMetricsBadRequest{}
}

/*
GetJmxMetricsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetJmxMetricsBadRequest struct {
}

// IsSuccess returns true when this get jmx metrics bad request response has a 2xx status code
func (o *GetJmxMetricsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jmx metrics bad request response has a 3xx status code
func (o *GetJmxMetricsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics bad request response has a 4xx status code
func (o *GetJmxMetricsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jmx metrics bad request response has a 5xx status code
func (o *GetJmxMetricsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics bad request response a status code equal to that given
func (o *GetJmxMetricsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get jmx metrics bad request response
func (o *GetJmxMetricsBadRequest) Code() int {
	return 400
}

func (o *GetJmxMetricsBadRequest) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsBadRequest ", 400)
}

func (o *GetJmxMetricsBadRequest) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsBadRequest ", 400)
}

func (o *GetJmxMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJmxMetricsUnauthorized creates a GetJmxMetricsUnauthorized with default headers values
func NewGetJmxMetricsUnauthorized() *GetJmxMetricsUnauthorized {
	return &GetJmxMetricsUnauthorized{}
}

/*
GetJmxMetricsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetJmxMetricsUnauthorized struct {
}

// IsSuccess returns true when this get jmx metrics unauthorized response has a 2xx status code
func (o *GetJmxMetricsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jmx metrics unauthorized response has a 3xx status code
func (o *GetJmxMetricsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics unauthorized response has a 4xx status code
func (o *GetJmxMetricsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jmx metrics unauthorized response has a 5xx status code
func (o *GetJmxMetricsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics unauthorized response a status code equal to that given
func (o *GetJmxMetricsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get jmx metrics unauthorized response
func (o *GetJmxMetricsUnauthorized) Code() int {
	return 401
}

func (o *GetJmxMetricsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsUnauthorized ", 401)
}

func (o *GetJmxMetricsUnauthorized) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsUnauthorized ", 401)
}

func (o *GetJmxMetricsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJmxMetricsForbidden creates a GetJmxMetricsForbidden with default headers values
func NewGetJmxMetricsForbidden() *GetJmxMetricsForbidden {
	return &GetJmxMetricsForbidden{}
}

/*
GetJmxMetricsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetJmxMetricsForbidden struct {
}

// IsSuccess returns true when this get jmx metrics forbidden response has a 2xx status code
func (o *GetJmxMetricsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jmx metrics forbidden response has a 3xx status code
func (o *GetJmxMetricsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics forbidden response has a 4xx status code
func (o *GetJmxMetricsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jmx metrics forbidden response has a 5xx status code
func (o *GetJmxMetricsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics forbidden response a status code equal to that given
func (o *GetJmxMetricsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get jmx metrics forbidden response
func (o *GetJmxMetricsForbidden) Code() int {
	return 403
}

func (o *GetJmxMetricsForbidden) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsForbidden ", 403)
}

func (o *GetJmxMetricsForbidden) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsForbidden ", 403)
}

func (o *GetJmxMetricsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJmxMetricsNotFound creates a GetJmxMetricsNotFound with default headers values
func NewGetJmxMetricsNotFound() *GetJmxMetricsNotFound {
	return &GetJmxMetricsNotFound{}
}

/*
GetJmxMetricsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetJmxMetricsNotFound struct {
}

// IsSuccess returns true when this get jmx metrics not found response has a 2xx status code
func (o *GetJmxMetricsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jmx metrics not found response has a 3xx status code
func (o *GetJmxMetricsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics not found response has a 4xx status code
func (o *GetJmxMetricsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jmx metrics not found response has a 5xx status code
func (o *GetJmxMetricsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics not found response a status code equal to that given
func (o *GetJmxMetricsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get jmx metrics not found response
func (o *GetJmxMetricsNotFound) Code() int {
	return 404
}

func (o *GetJmxMetricsNotFound) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsNotFound ", 404)
}

func (o *GetJmxMetricsNotFound) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsNotFound ", 404)
}

func (o *GetJmxMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJmxMetricsConflict creates a GetJmxMetricsConflict with default headers values
func NewGetJmxMetricsConflict() *GetJmxMetricsConflict {
	return &GetJmxMetricsConflict{}
}

/*
GetJmxMetricsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetJmxMetricsConflict struct {
}

// IsSuccess returns true when this get jmx metrics conflict response has a 2xx status code
func (o *GetJmxMetricsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jmx metrics conflict response has a 3xx status code
func (o *GetJmxMetricsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jmx metrics conflict response has a 4xx status code
func (o *GetJmxMetricsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jmx metrics conflict response has a 5xx status code
func (o *GetJmxMetricsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get jmx metrics conflict response a status code equal to that given
func (o *GetJmxMetricsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get jmx metrics conflict response
func (o *GetJmxMetricsConflict) Code() int {
	return 409
}

func (o *GetJmxMetricsConflict) Error() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsConflict ", 409)
}

func (o *GetJmxMetricsConflict) String() string {
	return fmt.Sprintf("[GET /system-diagnostics/jmx-metrics][%d] getJmxMetricsConflict ", 409)
}

func (o *GetJmxMetricsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
