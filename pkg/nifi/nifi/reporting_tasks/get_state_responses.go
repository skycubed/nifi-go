// Code generated by go-swagger; DO NOT EDIT.

package reporting_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetStateReader is a Reader for the GetState structure.
type GetStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStateOK creates a GetStateOK with default headers values
func NewGetStateOK() *GetStateOK {
	return &GetStateOK{}
}

/* GetStateOK describes a response with status code 200, with default header values.

successful operation
*/
type GetStateOK struct {
	Payload *models.ComponentStateEntity
}

func (o *GetStateOK) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateOK  %+v", 200, o.Payload)
}
func (o *GetStateOK) GetPayload() *models.ComponentStateEntity {
	return o.Payload
}

func (o *GetStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentStateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStateBadRequest creates a GetStateBadRequest with default headers values
func NewGetStateBadRequest() *GetStateBadRequest {
	return &GetStateBadRequest{}
}

/* GetStateBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetStateBadRequest struct {
}

func (o *GetStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateBadRequest ", 400)
}

func (o *GetStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateUnauthorized creates a GetStateUnauthorized with default headers values
func NewGetStateUnauthorized() *GetStateUnauthorized {
	return &GetStateUnauthorized{}
}

/* GetStateUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetStateUnauthorized struct {
}

func (o *GetStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateUnauthorized ", 401)
}

func (o *GetStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateForbidden creates a GetStateForbidden with default headers values
func NewGetStateForbidden() *GetStateForbidden {
	return &GetStateForbidden{}
}

/* GetStateForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetStateForbidden struct {
}

func (o *GetStateForbidden) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateForbidden ", 403)
}

func (o *GetStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateNotFound creates a GetStateNotFound with default headers values
func NewGetStateNotFound() *GetStateNotFound {
	return &GetStateNotFound{}
}

/* GetStateNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetStateNotFound struct {
}

func (o *GetStateNotFound) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateNotFound ", 404)
}

func (o *GetStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateConflict creates a GetStateConflict with default headers values
func NewGetStateConflict() *GetStateConflict {
	return &GetStateConflict{}
}

/* GetStateConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetStateConflict struct {
}

func (o *GetStateConflict) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/state][%d] getStateConflict ", 409)
}

func (o *GetStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
