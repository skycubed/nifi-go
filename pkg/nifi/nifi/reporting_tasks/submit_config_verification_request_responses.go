// Code generated by go-swagger; DO NOT EDIT.

package reporting_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SubmitConfigVerificationRequestReader is a Reader for the SubmitConfigVerificationRequest structure.
type SubmitConfigVerificationRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitConfigVerificationRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitConfigVerificationRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitConfigVerificationRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubmitConfigVerificationRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitConfigVerificationRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitConfigVerificationRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitConfigVerificationRequestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubmitConfigVerificationRequestOK creates a SubmitConfigVerificationRequestOK with default headers values
func NewSubmitConfigVerificationRequestOK() *SubmitConfigVerificationRequestOK {
	return &SubmitConfigVerificationRequestOK{}
}

/* SubmitConfigVerificationRequestOK describes a response with status code 200, with default header values.

successful operation
*/
type SubmitConfigVerificationRequestOK struct {
	Payload *models.VerifyConfigRequestEntity
}

func (o *SubmitConfigVerificationRequestOK) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestOK  %+v", 200, o.Payload)
}
func (o *SubmitConfigVerificationRequestOK) GetPayload() *models.VerifyConfigRequestEntity {
	return o.Payload
}

func (o *SubmitConfigVerificationRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VerifyConfigRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitConfigVerificationRequestBadRequest creates a SubmitConfigVerificationRequestBadRequest with default headers values
func NewSubmitConfigVerificationRequestBadRequest() *SubmitConfigVerificationRequestBadRequest {
	return &SubmitConfigVerificationRequestBadRequest{}
}

/* SubmitConfigVerificationRequestBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SubmitConfigVerificationRequestBadRequest struct {
}

func (o *SubmitConfigVerificationRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestBadRequest ", 400)
}

func (o *SubmitConfigVerificationRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitConfigVerificationRequestUnauthorized creates a SubmitConfigVerificationRequestUnauthorized with default headers values
func NewSubmitConfigVerificationRequestUnauthorized() *SubmitConfigVerificationRequestUnauthorized {
	return &SubmitConfigVerificationRequestUnauthorized{}
}

/* SubmitConfigVerificationRequestUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SubmitConfigVerificationRequestUnauthorized struct {
}

func (o *SubmitConfigVerificationRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestUnauthorized ", 401)
}

func (o *SubmitConfigVerificationRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitConfigVerificationRequestForbidden creates a SubmitConfigVerificationRequestForbidden with default headers values
func NewSubmitConfigVerificationRequestForbidden() *SubmitConfigVerificationRequestForbidden {
	return &SubmitConfigVerificationRequestForbidden{}
}

/* SubmitConfigVerificationRequestForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SubmitConfigVerificationRequestForbidden struct {
}

func (o *SubmitConfigVerificationRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestForbidden ", 403)
}

func (o *SubmitConfigVerificationRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitConfigVerificationRequestNotFound creates a SubmitConfigVerificationRequestNotFound with default headers values
func NewSubmitConfigVerificationRequestNotFound() *SubmitConfigVerificationRequestNotFound {
	return &SubmitConfigVerificationRequestNotFound{}
}

/* SubmitConfigVerificationRequestNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type SubmitConfigVerificationRequestNotFound struct {
}

func (o *SubmitConfigVerificationRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestNotFound ", 404)
}

func (o *SubmitConfigVerificationRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitConfigVerificationRequestConflict creates a SubmitConfigVerificationRequestConflict with default headers values
func NewSubmitConfigVerificationRequestConflict() *SubmitConfigVerificationRequestConflict {
	return &SubmitConfigVerificationRequestConflict{}
}

/* SubmitConfigVerificationRequestConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SubmitConfigVerificationRequestConflict struct {
}

func (o *SubmitConfigVerificationRequestConflict) Error() string {
	return fmt.Sprintf("[POST /reporting-tasks/{id}/config/verification-requests][%d] submitConfigVerificationRequestConflict ", 409)
}

func (o *SubmitConfigVerificationRequestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
