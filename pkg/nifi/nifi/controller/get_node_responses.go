// Code generated by go-swagger; DO NOT EDIT.

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetNodeReader is a Reader for the GetNode structure.
type GetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNodeOK creates a GetNodeOK with default headers values
func NewGetNodeOK() *GetNodeOK {
	return &GetNodeOK{}
}

/* GetNodeOK describes a response with status code 200, with default header values.

successful operation
*/
type GetNodeOK struct {
	Payload *models.NodeEntity
}

func (o *GetNodeOK) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeOK  %+v", 200, o.Payload)
}
func (o *GetNodeOK) GetPayload() *models.NodeEntity {
	return o.Payload
}

func (o *GetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodeBadRequest creates a GetNodeBadRequest with default headers values
func NewGetNodeBadRequest() *GetNodeBadRequest {
	return &GetNodeBadRequest{}
}

/* GetNodeBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetNodeBadRequest struct {
}

func (o *GetNodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeBadRequest ", 400)
}

func (o *GetNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeUnauthorized creates a GetNodeUnauthorized with default headers values
func NewGetNodeUnauthorized() *GetNodeUnauthorized {
	return &GetNodeUnauthorized{}
}

/* GetNodeUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetNodeUnauthorized struct {
}

func (o *GetNodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeUnauthorized ", 401)
}

func (o *GetNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeForbidden creates a GetNodeForbidden with default headers values
func NewGetNodeForbidden() *GetNodeForbidden {
	return &GetNodeForbidden{}
}

/* GetNodeForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetNodeForbidden struct {
}

func (o *GetNodeForbidden) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeForbidden ", 403)
}

func (o *GetNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeNotFound creates a GetNodeNotFound with default headers values
func NewGetNodeNotFound() *GetNodeNotFound {
	return &GetNodeNotFound{}
}

/* GetNodeNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetNodeNotFound struct {
}

func (o *GetNodeNotFound) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeNotFound ", 404)
}

func (o *GetNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeConflict creates a GetNodeConflict with default headers values
func NewGetNodeConflict() *GetNodeConflict {
	return &GetNodeConflict{}
}

/* GetNodeConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetNodeConflict struct {
}

func (o *GetNodeConflict) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeConflict ", 409)
}

func (o *GetNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
