// Code generated by go-swagger; DO NOT EDIT.

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetNodeReader is a Reader for the GetNode structure.
type GetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /controller/cluster/nodes/{id}] getNode", response, response.Code())
	}
}

// NewGetNodeOK creates a GetNodeOK with default headers values
func NewGetNodeOK() *GetNodeOK {
	return &GetNodeOK{}
}

/*
GetNodeOK describes a response with status code 200, with default header values.

successful operation
*/
type GetNodeOK struct {
	Payload *models.NodeEntity
}

// IsSuccess returns true when this get node o k response has a 2xx status code
func (o *GetNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node o k response has a 3xx status code
func (o *GetNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node o k response has a 4xx status code
func (o *GetNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node o k response has a 5xx status code
func (o *GetNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node o k response a status code equal to that given
func (o *GetNodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node o k response
func (o *GetNodeOK) Code() int {
	return 200
}

func (o *GetNodeOK) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeOK  %+v", 200, o.Payload)
}

func (o *GetNodeOK) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeOK  %+v", 200, o.Payload)
}

func (o *GetNodeOK) GetPayload() *models.NodeEntity {
	return o.Payload
}

func (o *GetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodeBadRequest creates a GetNodeBadRequest with default headers values
func NewGetNodeBadRequest() *GetNodeBadRequest {
	return &GetNodeBadRequest{}
}

/*
GetNodeBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetNodeBadRequest struct {
}

// IsSuccess returns true when this get node bad request response has a 2xx status code
func (o *GetNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node bad request response has a 3xx status code
func (o *GetNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node bad request response has a 4xx status code
func (o *GetNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node bad request response has a 5xx status code
func (o *GetNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get node bad request response a status code equal to that given
func (o *GetNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get node bad request response
func (o *GetNodeBadRequest) Code() int {
	return 400
}

func (o *GetNodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeBadRequest ", 400)
}

func (o *GetNodeBadRequest) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeBadRequest ", 400)
}

func (o *GetNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeUnauthorized creates a GetNodeUnauthorized with default headers values
func NewGetNodeUnauthorized() *GetNodeUnauthorized {
	return &GetNodeUnauthorized{}
}

/*
GetNodeUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetNodeUnauthorized struct {
}

// IsSuccess returns true when this get node unauthorized response has a 2xx status code
func (o *GetNodeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node unauthorized response has a 3xx status code
func (o *GetNodeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node unauthorized response has a 4xx status code
func (o *GetNodeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node unauthorized response has a 5xx status code
func (o *GetNodeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get node unauthorized response a status code equal to that given
func (o *GetNodeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get node unauthorized response
func (o *GetNodeUnauthorized) Code() int {
	return 401
}

func (o *GetNodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeUnauthorized ", 401)
}

func (o *GetNodeUnauthorized) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeUnauthorized ", 401)
}

func (o *GetNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeForbidden creates a GetNodeForbidden with default headers values
func NewGetNodeForbidden() *GetNodeForbidden {
	return &GetNodeForbidden{}
}

/*
GetNodeForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetNodeForbidden struct {
}

// IsSuccess returns true when this get node forbidden response has a 2xx status code
func (o *GetNodeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node forbidden response has a 3xx status code
func (o *GetNodeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node forbidden response has a 4xx status code
func (o *GetNodeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node forbidden response has a 5xx status code
func (o *GetNodeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get node forbidden response a status code equal to that given
func (o *GetNodeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get node forbidden response
func (o *GetNodeForbidden) Code() int {
	return 403
}

func (o *GetNodeForbidden) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeForbidden ", 403)
}

func (o *GetNodeForbidden) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeForbidden ", 403)
}

func (o *GetNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeNotFound creates a GetNodeNotFound with default headers values
func NewGetNodeNotFound() *GetNodeNotFound {
	return &GetNodeNotFound{}
}

/*
GetNodeNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetNodeNotFound struct {
}

// IsSuccess returns true when this get node not found response has a 2xx status code
func (o *GetNodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node not found response has a 3xx status code
func (o *GetNodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node not found response has a 4xx status code
func (o *GetNodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node not found response has a 5xx status code
func (o *GetNodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node not found response a status code equal to that given
func (o *GetNodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node not found response
func (o *GetNodeNotFound) Code() int {
	return 404
}

func (o *GetNodeNotFound) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeNotFound ", 404)
}

func (o *GetNodeNotFound) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeNotFound ", 404)
}

func (o *GetNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeConflict creates a GetNodeConflict with default headers values
func NewGetNodeConflict() *GetNodeConflict {
	return &GetNodeConflict{}
}

/*
GetNodeConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetNodeConflict struct {
}

// IsSuccess returns true when this get node conflict response has a 2xx status code
func (o *GetNodeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node conflict response has a 3xx status code
func (o *GetNodeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node conflict response has a 4xx status code
func (o *GetNodeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node conflict response has a 5xx status code
func (o *GetNodeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get node conflict response a status code equal to that given
func (o *GetNodeConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get node conflict response
func (o *GetNodeConflict) Code() int {
	return 409
}

func (o *GetNodeConflict) Error() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeConflict ", 409)
}

func (o *GetNodeConflict) String() string {
	return fmt.Sprintf("[GET /controller/cluster/nodes/{id}][%d] getNodeConflict ", 409)
}

func (o *GetNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
