// Code generated by go-swagger; DO NOT EDIT.

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// DeleteRegistryClientReader is a Reader for the DeleteRegistryClient structure.
type DeleteRegistryClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRegistryClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRegistryClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRegistryClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRegistryClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRegistryClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRegistryClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteRegistryClientConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRegistryClientOK creates a DeleteRegistryClientOK with default headers values
func NewDeleteRegistryClientOK() *DeleteRegistryClientOK {
	return &DeleteRegistryClientOK{}
}

/* DeleteRegistryClientOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteRegistryClientOK struct {
	Payload *models.RegistryClientEntity
}

func (o *DeleteRegistryClientOK) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientOK  %+v", 200, o.Payload)
}
func (o *DeleteRegistryClientOK) GetPayload() *models.RegistryClientEntity {
	return o.Payload
}

func (o *DeleteRegistryClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegistryClientEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRegistryClientBadRequest creates a DeleteRegistryClientBadRequest with default headers values
func NewDeleteRegistryClientBadRequest() *DeleteRegistryClientBadRequest {
	return &DeleteRegistryClientBadRequest{}
}

/* DeleteRegistryClientBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type DeleteRegistryClientBadRequest struct {
}

func (o *DeleteRegistryClientBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientBadRequest ", 400)
}

func (o *DeleteRegistryClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRegistryClientUnauthorized creates a DeleteRegistryClientUnauthorized with default headers values
func NewDeleteRegistryClientUnauthorized() *DeleteRegistryClientUnauthorized {
	return &DeleteRegistryClientUnauthorized{}
}

/* DeleteRegistryClientUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type DeleteRegistryClientUnauthorized struct {
}

func (o *DeleteRegistryClientUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientUnauthorized ", 401)
}

func (o *DeleteRegistryClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRegistryClientForbidden creates a DeleteRegistryClientForbidden with default headers values
func NewDeleteRegistryClientForbidden() *DeleteRegistryClientForbidden {
	return &DeleteRegistryClientForbidden{}
}

/* DeleteRegistryClientForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type DeleteRegistryClientForbidden struct {
}

func (o *DeleteRegistryClientForbidden) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientForbidden ", 403)
}

func (o *DeleteRegistryClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRegistryClientNotFound creates a DeleteRegistryClientNotFound with default headers values
func NewDeleteRegistryClientNotFound() *DeleteRegistryClientNotFound {
	return &DeleteRegistryClientNotFound{}
}

/* DeleteRegistryClientNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type DeleteRegistryClientNotFound struct {
}

func (o *DeleteRegistryClientNotFound) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientNotFound ", 404)
}

func (o *DeleteRegistryClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRegistryClientConflict creates a DeleteRegistryClientConflict with default headers values
func NewDeleteRegistryClientConflict() *DeleteRegistryClientConflict {
	return &DeleteRegistryClientConflict{}
}

/* DeleteRegistryClientConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type DeleteRegistryClientConflict struct {
}

func (o *DeleteRegistryClientConflict) Error() string {
	return fmt.Sprintf("[DELETE /controller/registry-clients/{id}][%d] deleteRegistryClientConflict ", 409)
}

func (o *DeleteRegistryClientConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
