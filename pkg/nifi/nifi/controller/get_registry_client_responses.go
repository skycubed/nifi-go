// Code generated by go-swagger; DO NOT EDIT.

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetRegistryClientReader is a Reader for the GetRegistryClient structure.
type GetRegistryClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegistryClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegistryClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRegistryClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRegistryClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRegistryClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegistryClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetRegistryClientConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRegistryClientOK creates a GetRegistryClientOK with default headers values
func NewGetRegistryClientOK() *GetRegistryClientOK {
	return &GetRegistryClientOK{}
}

/* GetRegistryClientOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRegistryClientOK struct {
	Payload *models.RegistryClientEntity
}

func (o *GetRegistryClientOK) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientOK  %+v", 200, o.Payload)
}
func (o *GetRegistryClientOK) GetPayload() *models.RegistryClientEntity {
	return o.Payload
}

func (o *GetRegistryClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegistryClientEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryClientBadRequest creates a GetRegistryClientBadRequest with default headers values
func NewGetRegistryClientBadRequest() *GetRegistryClientBadRequest {
	return &GetRegistryClientBadRequest{}
}

/* GetRegistryClientBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetRegistryClientBadRequest struct {
}

func (o *GetRegistryClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientBadRequest ", 400)
}

func (o *GetRegistryClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryClientUnauthorized creates a GetRegistryClientUnauthorized with default headers values
func NewGetRegistryClientUnauthorized() *GetRegistryClientUnauthorized {
	return &GetRegistryClientUnauthorized{}
}

/* GetRegistryClientUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetRegistryClientUnauthorized struct {
}

func (o *GetRegistryClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientUnauthorized ", 401)
}

func (o *GetRegistryClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryClientForbidden creates a GetRegistryClientForbidden with default headers values
func NewGetRegistryClientForbidden() *GetRegistryClientForbidden {
	return &GetRegistryClientForbidden{}
}

/* GetRegistryClientForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetRegistryClientForbidden struct {
}

func (o *GetRegistryClientForbidden) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientForbidden ", 403)
}

func (o *GetRegistryClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryClientNotFound creates a GetRegistryClientNotFound with default headers values
func NewGetRegistryClientNotFound() *GetRegistryClientNotFound {
	return &GetRegistryClientNotFound{}
}

/* GetRegistryClientNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetRegistryClientNotFound struct {
}

func (o *GetRegistryClientNotFound) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientNotFound ", 404)
}

func (o *GetRegistryClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryClientConflict creates a GetRegistryClientConflict with default headers values
func NewGetRegistryClientConflict() *GetRegistryClientConflict {
	return &GetRegistryClientConflict{}
}

/* GetRegistryClientConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetRegistryClientConflict struct {
}

func (o *GetRegistryClientConflict) Error() string {
	return fmt.Sprintf("[GET /controller/registry-clients/{id}][%d] getRegistryClientConflict ", 409)
}

func (o *GetRegistryClientConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
