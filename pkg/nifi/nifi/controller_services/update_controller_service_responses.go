// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateControllerServiceReader is a Reader for the UpdateControllerService structure.
type UpdateControllerServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateControllerServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateControllerServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateControllerServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateControllerServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateControllerServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateControllerServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateControllerServiceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateControllerServiceOK creates a UpdateControllerServiceOK with default headers values
func NewUpdateControllerServiceOK() *UpdateControllerServiceOK {
	return &UpdateControllerServiceOK{}
}

/* UpdateControllerServiceOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateControllerServiceOK struct {
	Payload *models.ControllerServiceEntity
}

func (o *UpdateControllerServiceOK) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceOK  %+v", 200, o.Payload)
}
func (o *UpdateControllerServiceOK) GetPayload() *models.ControllerServiceEntity {
	return o.Payload
}

func (o *UpdateControllerServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateControllerServiceBadRequest creates a UpdateControllerServiceBadRequest with default headers values
func NewUpdateControllerServiceBadRequest() *UpdateControllerServiceBadRequest {
	return &UpdateControllerServiceBadRequest{}
}

/* UpdateControllerServiceBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateControllerServiceBadRequest struct {
}

func (o *UpdateControllerServiceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceBadRequest ", 400)
}

func (o *UpdateControllerServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateControllerServiceUnauthorized creates a UpdateControllerServiceUnauthorized with default headers values
func NewUpdateControllerServiceUnauthorized() *UpdateControllerServiceUnauthorized {
	return &UpdateControllerServiceUnauthorized{}
}

/* UpdateControllerServiceUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateControllerServiceUnauthorized struct {
}

func (o *UpdateControllerServiceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceUnauthorized ", 401)
}

func (o *UpdateControllerServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateControllerServiceForbidden creates a UpdateControllerServiceForbidden with default headers values
func NewUpdateControllerServiceForbidden() *UpdateControllerServiceForbidden {
	return &UpdateControllerServiceForbidden{}
}

/* UpdateControllerServiceForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateControllerServiceForbidden struct {
}

func (o *UpdateControllerServiceForbidden) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceForbidden ", 403)
}

func (o *UpdateControllerServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateControllerServiceNotFound creates a UpdateControllerServiceNotFound with default headers values
func NewUpdateControllerServiceNotFound() *UpdateControllerServiceNotFound {
	return &UpdateControllerServiceNotFound{}
}

/* UpdateControllerServiceNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateControllerServiceNotFound struct {
}

func (o *UpdateControllerServiceNotFound) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceNotFound ", 404)
}

func (o *UpdateControllerServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateControllerServiceConflict creates a UpdateControllerServiceConflict with default headers values
func NewUpdateControllerServiceConflict() *UpdateControllerServiceConflict {
	return &UpdateControllerServiceConflict{}
}

/* UpdateControllerServiceConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateControllerServiceConflict struct {
}

func (o *UpdateControllerServiceConflict) Error() string {
	return fmt.Sprintf("[PUT /controller-services/{id}][%d] updateControllerServiceConflict ", 409)
}

func (o *UpdateControllerServiceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
