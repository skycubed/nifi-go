// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetControllerServiceReader is a Reader for the GetControllerService structure.
type GetControllerServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetControllerServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetControllerServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetControllerServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetControllerServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetControllerServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetControllerServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetControllerServiceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetControllerServiceOK creates a GetControllerServiceOK with default headers values
func NewGetControllerServiceOK() *GetControllerServiceOK {
	return &GetControllerServiceOK{}
}

/* GetControllerServiceOK describes a response with status code 200, with default header values.

successful operation
*/
type GetControllerServiceOK struct {
	Payload *models.ControllerServiceEntity
}

func (o *GetControllerServiceOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceOK  %+v", 200, o.Payload)
}
func (o *GetControllerServiceOK) GetPayload() *models.ControllerServiceEntity {
	return o.Payload
}

func (o *GetControllerServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetControllerServiceBadRequest creates a GetControllerServiceBadRequest with default headers values
func NewGetControllerServiceBadRequest() *GetControllerServiceBadRequest {
	return &GetControllerServiceBadRequest{}
}

/* GetControllerServiceBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetControllerServiceBadRequest struct {
}

func (o *GetControllerServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceBadRequest ", 400)
}

func (o *GetControllerServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceUnauthorized creates a GetControllerServiceUnauthorized with default headers values
func NewGetControllerServiceUnauthorized() *GetControllerServiceUnauthorized {
	return &GetControllerServiceUnauthorized{}
}

/* GetControllerServiceUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetControllerServiceUnauthorized struct {
}

func (o *GetControllerServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceUnauthorized ", 401)
}

func (o *GetControllerServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceForbidden creates a GetControllerServiceForbidden with default headers values
func NewGetControllerServiceForbidden() *GetControllerServiceForbidden {
	return &GetControllerServiceForbidden{}
}

/* GetControllerServiceForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetControllerServiceForbidden struct {
}

func (o *GetControllerServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceForbidden ", 403)
}

func (o *GetControllerServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceNotFound creates a GetControllerServiceNotFound with default headers values
func NewGetControllerServiceNotFound() *GetControllerServiceNotFound {
	return &GetControllerServiceNotFound{}
}

/* GetControllerServiceNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetControllerServiceNotFound struct {
}

func (o *GetControllerServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceNotFound ", 404)
}

func (o *GetControllerServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceConflict creates a GetControllerServiceConflict with default headers values
func NewGetControllerServiceConflict() *GetControllerServiceConflict {
	return &GetControllerServiceConflict{}
}

/* GetControllerServiceConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetControllerServiceConflict struct {
}

func (o *GetControllerServiceConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}][%d] getControllerServiceConflict ", 409)
}

func (o *GetControllerServiceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
