// Code generated by go-swagger; DO NOT EDIT.

package versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// InitiateVersionControlUpdateReader is a Reader for the InitiateVersionControlUpdate structure.
type InitiateVersionControlUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InitiateVersionControlUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInitiateVersionControlUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInitiateVersionControlUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInitiateVersionControlUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInitiateVersionControlUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInitiateVersionControlUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewInitiateVersionControlUpdateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /versions/update-requests/process-groups/{id}] initiateVersionControlUpdate", response, response.Code())
	}
}

// NewInitiateVersionControlUpdateOK creates a InitiateVersionControlUpdateOK with default headers values
func NewInitiateVersionControlUpdateOK() *InitiateVersionControlUpdateOK {
	return &InitiateVersionControlUpdateOK{}
}

/*
InitiateVersionControlUpdateOK describes a response with status code 200, with default header values.

successful operation
*/
type InitiateVersionControlUpdateOK struct {
	Payload *models.VersionedFlowUpdateRequestEntity
}

// IsSuccess returns true when this initiate version control update o k response has a 2xx status code
func (o *InitiateVersionControlUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this initiate version control update o k response has a 3xx status code
func (o *InitiateVersionControlUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update o k response has a 4xx status code
func (o *InitiateVersionControlUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this initiate version control update o k response has a 5xx status code
func (o *InitiateVersionControlUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update o k response a status code equal to that given
func (o *InitiateVersionControlUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the initiate version control update o k response
func (o *InitiateVersionControlUpdateOK) Code() int {
	return 200
}

func (o *InitiateVersionControlUpdateOK) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateOK  %+v", 200, o.Payload)
}

func (o *InitiateVersionControlUpdateOK) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateOK  %+v", 200, o.Payload)
}

func (o *InitiateVersionControlUpdateOK) GetPayload() *models.VersionedFlowUpdateRequestEntity {
	return o.Payload
}

func (o *InitiateVersionControlUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowUpdateRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitiateVersionControlUpdateBadRequest creates a InitiateVersionControlUpdateBadRequest with default headers values
func NewInitiateVersionControlUpdateBadRequest() *InitiateVersionControlUpdateBadRequest {
	return &InitiateVersionControlUpdateBadRequest{}
}

/*
InitiateVersionControlUpdateBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type InitiateVersionControlUpdateBadRequest struct {
}

// IsSuccess returns true when this initiate version control update bad request response has a 2xx status code
func (o *InitiateVersionControlUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this initiate version control update bad request response has a 3xx status code
func (o *InitiateVersionControlUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update bad request response has a 4xx status code
func (o *InitiateVersionControlUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this initiate version control update bad request response has a 5xx status code
func (o *InitiateVersionControlUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update bad request response a status code equal to that given
func (o *InitiateVersionControlUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the initiate version control update bad request response
func (o *InitiateVersionControlUpdateBadRequest) Code() int {
	return 400
}

func (o *InitiateVersionControlUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateBadRequest ", 400)
}

func (o *InitiateVersionControlUpdateBadRequest) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateBadRequest ", 400)
}

func (o *InitiateVersionControlUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInitiateVersionControlUpdateUnauthorized creates a InitiateVersionControlUpdateUnauthorized with default headers values
func NewInitiateVersionControlUpdateUnauthorized() *InitiateVersionControlUpdateUnauthorized {
	return &InitiateVersionControlUpdateUnauthorized{}
}

/*
InitiateVersionControlUpdateUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type InitiateVersionControlUpdateUnauthorized struct {
}

// IsSuccess returns true when this initiate version control update unauthorized response has a 2xx status code
func (o *InitiateVersionControlUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this initiate version control update unauthorized response has a 3xx status code
func (o *InitiateVersionControlUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update unauthorized response has a 4xx status code
func (o *InitiateVersionControlUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this initiate version control update unauthorized response has a 5xx status code
func (o *InitiateVersionControlUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update unauthorized response a status code equal to that given
func (o *InitiateVersionControlUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the initiate version control update unauthorized response
func (o *InitiateVersionControlUpdateUnauthorized) Code() int {
	return 401
}

func (o *InitiateVersionControlUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateUnauthorized ", 401)
}

func (o *InitiateVersionControlUpdateUnauthorized) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateUnauthorized ", 401)
}

func (o *InitiateVersionControlUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInitiateVersionControlUpdateForbidden creates a InitiateVersionControlUpdateForbidden with default headers values
func NewInitiateVersionControlUpdateForbidden() *InitiateVersionControlUpdateForbidden {
	return &InitiateVersionControlUpdateForbidden{}
}

/*
InitiateVersionControlUpdateForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type InitiateVersionControlUpdateForbidden struct {
}

// IsSuccess returns true when this initiate version control update forbidden response has a 2xx status code
func (o *InitiateVersionControlUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this initiate version control update forbidden response has a 3xx status code
func (o *InitiateVersionControlUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update forbidden response has a 4xx status code
func (o *InitiateVersionControlUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this initiate version control update forbidden response has a 5xx status code
func (o *InitiateVersionControlUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update forbidden response a status code equal to that given
func (o *InitiateVersionControlUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the initiate version control update forbidden response
func (o *InitiateVersionControlUpdateForbidden) Code() int {
	return 403
}

func (o *InitiateVersionControlUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateForbidden ", 403)
}

func (o *InitiateVersionControlUpdateForbidden) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateForbidden ", 403)
}

func (o *InitiateVersionControlUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInitiateVersionControlUpdateNotFound creates a InitiateVersionControlUpdateNotFound with default headers values
func NewInitiateVersionControlUpdateNotFound() *InitiateVersionControlUpdateNotFound {
	return &InitiateVersionControlUpdateNotFound{}
}

/*
InitiateVersionControlUpdateNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type InitiateVersionControlUpdateNotFound struct {
}

// IsSuccess returns true when this initiate version control update not found response has a 2xx status code
func (o *InitiateVersionControlUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this initiate version control update not found response has a 3xx status code
func (o *InitiateVersionControlUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update not found response has a 4xx status code
func (o *InitiateVersionControlUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this initiate version control update not found response has a 5xx status code
func (o *InitiateVersionControlUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update not found response a status code equal to that given
func (o *InitiateVersionControlUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the initiate version control update not found response
func (o *InitiateVersionControlUpdateNotFound) Code() int {
	return 404
}

func (o *InitiateVersionControlUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateNotFound ", 404)
}

func (o *InitiateVersionControlUpdateNotFound) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateNotFound ", 404)
}

func (o *InitiateVersionControlUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInitiateVersionControlUpdateConflict creates a InitiateVersionControlUpdateConflict with default headers values
func NewInitiateVersionControlUpdateConflict() *InitiateVersionControlUpdateConflict {
	return &InitiateVersionControlUpdateConflict{}
}

/*
InitiateVersionControlUpdateConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type InitiateVersionControlUpdateConflict struct {
}

// IsSuccess returns true when this initiate version control update conflict response has a 2xx status code
func (o *InitiateVersionControlUpdateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this initiate version control update conflict response has a 3xx status code
func (o *InitiateVersionControlUpdateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this initiate version control update conflict response has a 4xx status code
func (o *InitiateVersionControlUpdateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this initiate version control update conflict response has a 5xx status code
func (o *InitiateVersionControlUpdateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this initiate version control update conflict response a status code equal to that given
func (o *InitiateVersionControlUpdateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the initiate version control update conflict response
func (o *InitiateVersionControlUpdateConflict) Code() int {
	return 409
}

func (o *InitiateVersionControlUpdateConflict) Error() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateConflict ", 409)
}

func (o *InitiateVersionControlUpdateConflict) String() string {
	return fmt.Sprintf("[POST /versions/update-requests/process-groups/{id}][%d] initiateVersionControlUpdateConflict ", 409)
}

func (o *InitiateVersionControlUpdateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
