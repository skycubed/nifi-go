// Code generated by go-swagger; DO NOT EDIT.

package parameter_contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// DeleteParameterContextReader is a Reader for the DeleteParameterContext structure.
type DeleteParameterContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteParameterContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteParameterContextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteParameterContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteParameterContextUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteParameterContextForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteParameterContextNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteParameterContextConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /parameter-contexts/{id}] deleteParameterContext", response, response.Code())
	}
}

// NewDeleteParameterContextOK creates a DeleteParameterContextOK with default headers values
func NewDeleteParameterContextOK() *DeleteParameterContextOK {
	return &DeleteParameterContextOK{}
}

/*
DeleteParameterContextOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteParameterContextOK struct {
	Payload *models.ParameterContextEntity
}

// IsSuccess returns true when this delete parameter context o k response has a 2xx status code
func (o *DeleteParameterContextOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete parameter context o k response has a 3xx status code
func (o *DeleteParameterContextOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context o k response has a 4xx status code
func (o *DeleteParameterContextOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete parameter context o k response has a 5xx status code
func (o *DeleteParameterContextOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context o k response a status code equal to that given
func (o *DeleteParameterContextOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete parameter context o k response
func (o *DeleteParameterContextOK) Code() int {
	return 200
}

func (o *DeleteParameterContextOK) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextOK  %+v", 200, o.Payload)
}

func (o *DeleteParameterContextOK) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextOK  %+v", 200, o.Payload)
}

func (o *DeleteParameterContextOK) GetPayload() *models.ParameterContextEntity {
	return o.Payload
}

func (o *DeleteParameterContextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterContextEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteParameterContextBadRequest creates a DeleteParameterContextBadRequest with default headers values
func NewDeleteParameterContextBadRequest() *DeleteParameterContextBadRequest {
	return &DeleteParameterContextBadRequest{}
}

/*
DeleteParameterContextBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type DeleteParameterContextBadRequest struct {
}

// IsSuccess returns true when this delete parameter context bad request response has a 2xx status code
func (o *DeleteParameterContextBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete parameter context bad request response has a 3xx status code
func (o *DeleteParameterContextBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context bad request response has a 4xx status code
func (o *DeleteParameterContextBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete parameter context bad request response has a 5xx status code
func (o *DeleteParameterContextBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context bad request response a status code equal to that given
func (o *DeleteParameterContextBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete parameter context bad request response
func (o *DeleteParameterContextBadRequest) Code() int {
	return 400
}

func (o *DeleteParameterContextBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextBadRequest ", 400)
}

func (o *DeleteParameterContextBadRequest) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextBadRequest ", 400)
}

func (o *DeleteParameterContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteParameterContextUnauthorized creates a DeleteParameterContextUnauthorized with default headers values
func NewDeleteParameterContextUnauthorized() *DeleteParameterContextUnauthorized {
	return &DeleteParameterContextUnauthorized{}
}

/*
DeleteParameterContextUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type DeleteParameterContextUnauthorized struct {
}

// IsSuccess returns true when this delete parameter context unauthorized response has a 2xx status code
func (o *DeleteParameterContextUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete parameter context unauthorized response has a 3xx status code
func (o *DeleteParameterContextUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context unauthorized response has a 4xx status code
func (o *DeleteParameterContextUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete parameter context unauthorized response has a 5xx status code
func (o *DeleteParameterContextUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context unauthorized response a status code equal to that given
func (o *DeleteParameterContextUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete parameter context unauthorized response
func (o *DeleteParameterContextUnauthorized) Code() int {
	return 401
}

func (o *DeleteParameterContextUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextUnauthorized ", 401)
}

func (o *DeleteParameterContextUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextUnauthorized ", 401)
}

func (o *DeleteParameterContextUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteParameterContextForbidden creates a DeleteParameterContextForbidden with default headers values
func NewDeleteParameterContextForbidden() *DeleteParameterContextForbidden {
	return &DeleteParameterContextForbidden{}
}

/*
DeleteParameterContextForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type DeleteParameterContextForbidden struct {
}

// IsSuccess returns true when this delete parameter context forbidden response has a 2xx status code
func (o *DeleteParameterContextForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete parameter context forbidden response has a 3xx status code
func (o *DeleteParameterContextForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context forbidden response has a 4xx status code
func (o *DeleteParameterContextForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete parameter context forbidden response has a 5xx status code
func (o *DeleteParameterContextForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context forbidden response a status code equal to that given
func (o *DeleteParameterContextForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete parameter context forbidden response
func (o *DeleteParameterContextForbidden) Code() int {
	return 403
}

func (o *DeleteParameterContextForbidden) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextForbidden ", 403)
}

func (o *DeleteParameterContextForbidden) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextForbidden ", 403)
}

func (o *DeleteParameterContextForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteParameterContextNotFound creates a DeleteParameterContextNotFound with default headers values
func NewDeleteParameterContextNotFound() *DeleteParameterContextNotFound {
	return &DeleteParameterContextNotFound{}
}

/*
DeleteParameterContextNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type DeleteParameterContextNotFound struct {
}

// IsSuccess returns true when this delete parameter context not found response has a 2xx status code
func (o *DeleteParameterContextNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete parameter context not found response has a 3xx status code
func (o *DeleteParameterContextNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context not found response has a 4xx status code
func (o *DeleteParameterContextNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete parameter context not found response has a 5xx status code
func (o *DeleteParameterContextNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context not found response a status code equal to that given
func (o *DeleteParameterContextNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete parameter context not found response
func (o *DeleteParameterContextNotFound) Code() int {
	return 404
}

func (o *DeleteParameterContextNotFound) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextNotFound ", 404)
}

func (o *DeleteParameterContextNotFound) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextNotFound ", 404)
}

func (o *DeleteParameterContextNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteParameterContextConflict creates a DeleteParameterContextConflict with default headers values
func NewDeleteParameterContextConflict() *DeleteParameterContextConflict {
	return &DeleteParameterContextConflict{}
}

/*
DeleteParameterContextConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type DeleteParameterContextConflict struct {
}

// IsSuccess returns true when this delete parameter context conflict response has a 2xx status code
func (o *DeleteParameterContextConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete parameter context conflict response has a 3xx status code
func (o *DeleteParameterContextConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete parameter context conflict response has a 4xx status code
func (o *DeleteParameterContextConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete parameter context conflict response has a 5xx status code
func (o *DeleteParameterContextConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete parameter context conflict response a status code equal to that given
func (o *DeleteParameterContextConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete parameter context conflict response
func (o *DeleteParameterContextConflict) Code() int {
	return 409
}

func (o *DeleteParameterContextConflict) Error() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextConflict ", 409)
}

func (o *DeleteParameterContextConflict) String() string {
	return fmt.Sprintf("[DELETE /parameter-contexts/{id}][%d] deleteParameterContextConflict ", 409)
}

func (o *DeleteParameterContextConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
