// Code generated by go-swagger; DO NOT EDIT.

package parameter_contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// SubmitValidationRequestReader is a Reader for the SubmitValidationRequest structure.
type SubmitValidationRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitValidationRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitValidationRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitValidationRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubmitValidationRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitValidationRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitValidationRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitValidationRequestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubmitValidationRequestOK creates a SubmitValidationRequestOK with default headers values
func NewSubmitValidationRequestOK() *SubmitValidationRequestOK {
	return &SubmitValidationRequestOK{}
}

/*
SubmitValidationRequestOK describes a response with status code 200, with default header values.

successful operation
*/
type SubmitValidationRequestOK struct {
	Payload *models.ParameterContextValidationRequestEntity
}

// IsSuccess returns true when this submit validation request o k response has a 2xx status code
func (o *SubmitValidationRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit validation request o k response has a 3xx status code
func (o *SubmitValidationRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request o k response has a 4xx status code
func (o *SubmitValidationRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit validation request o k response has a 5xx status code
func (o *SubmitValidationRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request o k response a status code equal to that given
func (o *SubmitValidationRequestOK) IsCode(code int) bool {
	return code == 200
}

func (o *SubmitValidationRequestOK) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestOK  %+v", 200, o.Payload)
}

func (o *SubmitValidationRequestOK) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestOK  %+v", 200, o.Payload)
}

func (o *SubmitValidationRequestOK) GetPayload() *models.ParameterContextValidationRequestEntity {
	return o.Payload
}

func (o *SubmitValidationRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterContextValidationRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitValidationRequestBadRequest creates a SubmitValidationRequestBadRequest with default headers values
func NewSubmitValidationRequestBadRequest() *SubmitValidationRequestBadRequest {
	return &SubmitValidationRequestBadRequest{}
}

/*
SubmitValidationRequestBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type SubmitValidationRequestBadRequest struct {
}

// IsSuccess returns true when this submit validation request bad request response has a 2xx status code
func (o *SubmitValidationRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit validation request bad request response has a 3xx status code
func (o *SubmitValidationRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request bad request response has a 4xx status code
func (o *SubmitValidationRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit validation request bad request response has a 5xx status code
func (o *SubmitValidationRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request bad request response a status code equal to that given
func (o *SubmitValidationRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SubmitValidationRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestBadRequest ", 400)
}

func (o *SubmitValidationRequestBadRequest) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestBadRequest ", 400)
}

func (o *SubmitValidationRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitValidationRequestUnauthorized creates a SubmitValidationRequestUnauthorized with default headers values
func NewSubmitValidationRequestUnauthorized() *SubmitValidationRequestUnauthorized {
	return &SubmitValidationRequestUnauthorized{}
}

/*
SubmitValidationRequestUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type SubmitValidationRequestUnauthorized struct {
}

// IsSuccess returns true when this submit validation request unauthorized response has a 2xx status code
func (o *SubmitValidationRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit validation request unauthorized response has a 3xx status code
func (o *SubmitValidationRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request unauthorized response has a 4xx status code
func (o *SubmitValidationRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit validation request unauthorized response has a 5xx status code
func (o *SubmitValidationRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request unauthorized response a status code equal to that given
func (o *SubmitValidationRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SubmitValidationRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestUnauthorized ", 401)
}

func (o *SubmitValidationRequestUnauthorized) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestUnauthorized ", 401)
}

func (o *SubmitValidationRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitValidationRequestForbidden creates a SubmitValidationRequestForbidden with default headers values
func NewSubmitValidationRequestForbidden() *SubmitValidationRequestForbidden {
	return &SubmitValidationRequestForbidden{}
}

/*
SubmitValidationRequestForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type SubmitValidationRequestForbidden struct {
}

// IsSuccess returns true when this submit validation request forbidden response has a 2xx status code
func (o *SubmitValidationRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit validation request forbidden response has a 3xx status code
func (o *SubmitValidationRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request forbidden response has a 4xx status code
func (o *SubmitValidationRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit validation request forbidden response has a 5xx status code
func (o *SubmitValidationRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request forbidden response a status code equal to that given
func (o *SubmitValidationRequestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SubmitValidationRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestForbidden ", 403)
}

func (o *SubmitValidationRequestForbidden) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestForbidden ", 403)
}

func (o *SubmitValidationRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitValidationRequestNotFound creates a SubmitValidationRequestNotFound with default headers values
func NewSubmitValidationRequestNotFound() *SubmitValidationRequestNotFound {
	return &SubmitValidationRequestNotFound{}
}

/*
SubmitValidationRequestNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type SubmitValidationRequestNotFound struct {
}

// IsSuccess returns true when this submit validation request not found response has a 2xx status code
func (o *SubmitValidationRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit validation request not found response has a 3xx status code
func (o *SubmitValidationRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request not found response has a 4xx status code
func (o *SubmitValidationRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit validation request not found response has a 5xx status code
func (o *SubmitValidationRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request not found response a status code equal to that given
func (o *SubmitValidationRequestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SubmitValidationRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestNotFound ", 404)
}

func (o *SubmitValidationRequestNotFound) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestNotFound ", 404)
}

func (o *SubmitValidationRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitValidationRequestConflict creates a SubmitValidationRequestConflict with default headers values
func NewSubmitValidationRequestConflict() *SubmitValidationRequestConflict {
	return &SubmitValidationRequestConflict{}
}

/*
SubmitValidationRequestConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type SubmitValidationRequestConflict struct {
}

// IsSuccess returns true when this submit validation request conflict response has a 2xx status code
func (o *SubmitValidationRequestConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit validation request conflict response has a 3xx status code
func (o *SubmitValidationRequestConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit validation request conflict response has a 4xx status code
func (o *SubmitValidationRequestConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit validation request conflict response has a 5xx status code
func (o *SubmitValidationRequestConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this submit validation request conflict response a status code equal to that given
func (o *SubmitValidationRequestConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SubmitValidationRequestConflict) Error() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestConflict ", 409)
}

func (o *SubmitValidationRequestConflict) String() string {
	return fmt.Sprintf("[POST /parameter-contexts/{contextId}/validation-requests][%d] submitValidationRequestConflict ", 409)
}

func (o *SubmitValidationRequestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
