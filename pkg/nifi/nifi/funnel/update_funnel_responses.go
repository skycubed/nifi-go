// Code generated by go-swagger; DO NOT EDIT.

package funnel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateFunnelReader is a Reader for the UpdateFunnel structure.
type UpdateFunnelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFunnelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFunnelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFunnelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateFunnelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateFunnelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFunnelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateFunnelConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateFunnelOK creates a UpdateFunnelOK with default headers values
func NewUpdateFunnelOK() *UpdateFunnelOK {
	return &UpdateFunnelOK{}
}

/* UpdateFunnelOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateFunnelOK struct {
	Payload *models.FunnelEntity
}

func (o *UpdateFunnelOK) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelOK  %+v", 200, o.Payload)
}
func (o *UpdateFunnelOK) GetPayload() *models.FunnelEntity {
	return o.Payload
}

func (o *UpdateFunnelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FunnelEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFunnelBadRequest creates a UpdateFunnelBadRequest with default headers values
func NewUpdateFunnelBadRequest() *UpdateFunnelBadRequest {
	return &UpdateFunnelBadRequest{}
}

/* UpdateFunnelBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateFunnelBadRequest struct {
}

func (o *UpdateFunnelBadRequest) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelBadRequest ", 400)
}

func (o *UpdateFunnelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFunnelUnauthorized creates a UpdateFunnelUnauthorized with default headers values
func NewUpdateFunnelUnauthorized() *UpdateFunnelUnauthorized {
	return &UpdateFunnelUnauthorized{}
}

/* UpdateFunnelUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateFunnelUnauthorized struct {
}

func (o *UpdateFunnelUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelUnauthorized ", 401)
}

func (o *UpdateFunnelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFunnelForbidden creates a UpdateFunnelForbidden with default headers values
func NewUpdateFunnelForbidden() *UpdateFunnelForbidden {
	return &UpdateFunnelForbidden{}
}

/* UpdateFunnelForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateFunnelForbidden struct {
}

func (o *UpdateFunnelForbidden) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelForbidden ", 403)
}

func (o *UpdateFunnelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFunnelNotFound creates a UpdateFunnelNotFound with default headers values
func NewUpdateFunnelNotFound() *UpdateFunnelNotFound {
	return &UpdateFunnelNotFound{}
}

/* UpdateFunnelNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateFunnelNotFound struct {
}

func (o *UpdateFunnelNotFound) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelNotFound ", 404)
}

func (o *UpdateFunnelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFunnelConflict creates a UpdateFunnelConflict with default headers values
func NewUpdateFunnelConflict() *UpdateFunnelConflict {
	return &UpdateFunnelConflict{}
}

/* UpdateFunnelConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateFunnelConflict struct {
}

func (o *UpdateFunnelConflict) Error() string {
	return fmt.Sprintf("[PUT /funnels/{id}][%d] updateFunnelConflict ", 409)
}

func (o *UpdateFunnelConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
