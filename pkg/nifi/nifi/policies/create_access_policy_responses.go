// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// CreateAccessPolicyReader is a Reader for the CreateAccessPolicy structure.
type CreateAccessPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccessPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAccessPolicyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccessPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAccessPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAccessPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAccessPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAccessPolicyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAccessPolicyCreated creates a CreateAccessPolicyCreated with default headers values
func NewCreateAccessPolicyCreated() *CreateAccessPolicyCreated {
	return &CreateAccessPolicyCreated{}
}

/* CreateAccessPolicyCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateAccessPolicyCreated struct {
	Payload *models.AccessPolicyEntity
}

func (o *CreateAccessPolicyCreated) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyCreated  %+v", 201, o.Payload)
}
func (o *CreateAccessPolicyCreated) GetPayload() *models.AccessPolicyEntity {
	return o.Payload
}

func (o *CreateAccessPolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessPolicyEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccessPolicyBadRequest creates a CreateAccessPolicyBadRequest with default headers values
func NewCreateAccessPolicyBadRequest() *CreateAccessPolicyBadRequest {
	return &CreateAccessPolicyBadRequest{}
}

/* CreateAccessPolicyBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateAccessPolicyBadRequest struct {
}

func (o *CreateAccessPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyBadRequest ", 400)
}

func (o *CreateAccessPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyUnauthorized creates a CreateAccessPolicyUnauthorized with default headers values
func NewCreateAccessPolicyUnauthorized() *CreateAccessPolicyUnauthorized {
	return &CreateAccessPolicyUnauthorized{}
}

/* CreateAccessPolicyUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateAccessPolicyUnauthorized struct {
}

func (o *CreateAccessPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyUnauthorized ", 401)
}

func (o *CreateAccessPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyForbidden creates a CreateAccessPolicyForbidden with default headers values
func NewCreateAccessPolicyForbidden() *CreateAccessPolicyForbidden {
	return &CreateAccessPolicyForbidden{}
}

/* CreateAccessPolicyForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateAccessPolicyForbidden struct {
}

func (o *CreateAccessPolicyForbidden) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyForbidden ", 403)
}

func (o *CreateAccessPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyNotFound creates a CreateAccessPolicyNotFound with default headers values
func NewCreateAccessPolicyNotFound() *CreateAccessPolicyNotFound {
	return &CreateAccessPolicyNotFound{}
}

/* CreateAccessPolicyNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type CreateAccessPolicyNotFound struct {
}

func (o *CreateAccessPolicyNotFound) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyNotFound ", 404)
}

func (o *CreateAccessPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessPolicyConflict creates a CreateAccessPolicyConflict with default headers values
func NewCreateAccessPolicyConflict() *CreateAccessPolicyConflict {
	return &CreateAccessPolicyConflict{}
}

/* CreateAccessPolicyConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateAccessPolicyConflict struct {
}

func (o *CreateAccessPolicyConflict) Error() string {
	return fmt.Sprintf("[POST /policies][%d] createAccessPolicyConflict ", 409)
}

func (o *CreateAccessPolicyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
