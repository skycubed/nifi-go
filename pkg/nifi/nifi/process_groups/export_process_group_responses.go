// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportProcessGroupReader is a Reader for the ExportProcessGroup structure.
type ExportProcessGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportProcessGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportProcessGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExportProcessGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExportProcessGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportProcessGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportProcessGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExportProcessGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExportProcessGroupOK creates a ExportProcessGroupOK with default headers values
func NewExportProcessGroupOK() *ExportProcessGroupOK {
	return &ExportProcessGroupOK{}
}

/* ExportProcessGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type ExportProcessGroupOK struct {
	Payload string
}

func (o *ExportProcessGroupOK) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupOK  %+v", 200, o.Payload)
}
func (o *ExportProcessGroupOK) GetPayload() string {
	return o.Payload
}

func (o *ExportProcessGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportProcessGroupBadRequest creates a ExportProcessGroupBadRequest with default headers values
func NewExportProcessGroupBadRequest() *ExportProcessGroupBadRequest {
	return &ExportProcessGroupBadRequest{}
}

/* ExportProcessGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ExportProcessGroupBadRequest struct {
}

func (o *ExportProcessGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupBadRequest ", 400)
}

func (o *ExportProcessGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupUnauthorized creates a ExportProcessGroupUnauthorized with default headers values
func NewExportProcessGroupUnauthorized() *ExportProcessGroupUnauthorized {
	return &ExportProcessGroupUnauthorized{}
}

/* ExportProcessGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type ExportProcessGroupUnauthorized struct {
}

func (o *ExportProcessGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupUnauthorized ", 401)
}

func (o *ExportProcessGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupForbidden creates a ExportProcessGroupForbidden with default headers values
func NewExportProcessGroupForbidden() *ExportProcessGroupForbidden {
	return &ExportProcessGroupForbidden{}
}

/* ExportProcessGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type ExportProcessGroupForbidden struct {
}

func (o *ExportProcessGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupForbidden ", 403)
}

func (o *ExportProcessGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupNotFound creates a ExportProcessGroupNotFound with default headers values
func NewExportProcessGroupNotFound() *ExportProcessGroupNotFound {
	return &ExportProcessGroupNotFound{}
}

/* ExportProcessGroupNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type ExportProcessGroupNotFound struct {
}

func (o *ExportProcessGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupNotFound ", 404)
}

func (o *ExportProcessGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupConflict creates a ExportProcessGroupConflict with default headers values
func NewExportProcessGroupConflict() *ExportProcessGroupConflict {
	return &ExportProcessGroupConflict{}
}

/* ExportProcessGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ExportProcessGroupConflict struct {
}

func (o *ExportProcessGroupConflict) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupConflict ", 409)
}

func (o *ExportProcessGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
