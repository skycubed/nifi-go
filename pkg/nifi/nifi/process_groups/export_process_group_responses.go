// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportProcessGroupReader is a Reader for the ExportProcessGroup structure.
type ExportProcessGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportProcessGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportProcessGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExportProcessGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExportProcessGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportProcessGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportProcessGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExportProcessGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /process-groups/{id}/download] exportProcessGroup", response, response.Code())
	}
}

// NewExportProcessGroupOK creates a ExportProcessGroupOK with default headers values
func NewExportProcessGroupOK() *ExportProcessGroupOK {
	return &ExportProcessGroupOK{}
}

/*
ExportProcessGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type ExportProcessGroupOK struct {
	Payload string
}

// IsSuccess returns true when this export process group o k response has a 2xx status code
func (o *ExportProcessGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export process group o k response has a 3xx status code
func (o *ExportProcessGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group o k response has a 4xx status code
func (o *ExportProcessGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export process group o k response has a 5xx status code
func (o *ExportProcessGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group o k response a status code equal to that given
func (o *ExportProcessGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export process group o k response
func (o *ExportProcessGroupOK) Code() int {
	return 200
}

func (o *ExportProcessGroupOK) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupOK  %+v", 200, o.Payload)
}

func (o *ExportProcessGroupOK) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupOK  %+v", 200, o.Payload)
}

func (o *ExportProcessGroupOK) GetPayload() string {
	return o.Payload
}

func (o *ExportProcessGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportProcessGroupBadRequest creates a ExportProcessGroupBadRequest with default headers values
func NewExportProcessGroupBadRequest() *ExportProcessGroupBadRequest {
	return &ExportProcessGroupBadRequest{}
}

/*
ExportProcessGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ExportProcessGroupBadRequest struct {
}

// IsSuccess returns true when this export process group bad request response has a 2xx status code
func (o *ExportProcessGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export process group bad request response has a 3xx status code
func (o *ExportProcessGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group bad request response has a 4xx status code
func (o *ExportProcessGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this export process group bad request response has a 5xx status code
func (o *ExportProcessGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group bad request response a status code equal to that given
func (o *ExportProcessGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the export process group bad request response
func (o *ExportProcessGroupBadRequest) Code() int {
	return 400
}

func (o *ExportProcessGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupBadRequest ", 400)
}

func (o *ExportProcessGroupBadRequest) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupBadRequest ", 400)
}

func (o *ExportProcessGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupUnauthorized creates a ExportProcessGroupUnauthorized with default headers values
func NewExportProcessGroupUnauthorized() *ExportProcessGroupUnauthorized {
	return &ExportProcessGroupUnauthorized{}
}

/*
ExportProcessGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type ExportProcessGroupUnauthorized struct {
}

// IsSuccess returns true when this export process group unauthorized response has a 2xx status code
func (o *ExportProcessGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export process group unauthorized response has a 3xx status code
func (o *ExportProcessGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group unauthorized response has a 4xx status code
func (o *ExportProcessGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export process group unauthorized response has a 5xx status code
func (o *ExportProcessGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group unauthorized response a status code equal to that given
func (o *ExportProcessGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export process group unauthorized response
func (o *ExportProcessGroupUnauthorized) Code() int {
	return 401
}

func (o *ExportProcessGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupUnauthorized ", 401)
}

func (o *ExportProcessGroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupUnauthorized ", 401)
}

func (o *ExportProcessGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupForbidden creates a ExportProcessGroupForbidden with default headers values
func NewExportProcessGroupForbidden() *ExportProcessGroupForbidden {
	return &ExportProcessGroupForbidden{}
}

/*
ExportProcessGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type ExportProcessGroupForbidden struct {
}

// IsSuccess returns true when this export process group forbidden response has a 2xx status code
func (o *ExportProcessGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export process group forbidden response has a 3xx status code
func (o *ExportProcessGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group forbidden response has a 4xx status code
func (o *ExportProcessGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this export process group forbidden response has a 5xx status code
func (o *ExportProcessGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group forbidden response a status code equal to that given
func (o *ExportProcessGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the export process group forbidden response
func (o *ExportProcessGroupForbidden) Code() int {
	return 403
}

func (o *ExportProcessGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupForbidden ", 403)
}

func (o *ExportProcessGroupForbidden) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupForbidden ", 403)
}

func (o *ExportProcessGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupNotFound creates a ExportProcessGroupNotFound with default headers values
func NewExportProcessGroupNotFound() *ExportProcessGroupNotFound {
	return &ExportProcessGroupNotFound{}
}

/*
ExportProcessGroupNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type ExportProcessGroupNotFound struct {
}

// IsSuccess returns true when this export process group not found response has a 2xx status code
func (o *ExportProcessGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export process group not found response has a 3xx status code
func (o *ExportProcessGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group not found response has a 4xx status code
func (o *ExportProcessGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this export process group not found response has a 5xx status code
func (o *ExportProcessGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group not found response a status code equal to that given
func (o *ExportProcessGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the export process group not found response
func (o *ExportProcessGroupNotFound) Code() int {
	return 404
}

func (o *ExportProcessGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupNotFound ", 404)
}

func (o *ExportProcessGroupNotFound) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupNotFound ", 404)
}

func (o *ExportProcessGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportProcessGroupConflict creates a ExportProcessGroupConflict with default headers values
func NewExportProcessGroupConflict() *ExportProcessGroupConflict {
	return &ExportProcessGroupConflict{}
}

/*
ExportProcessGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ExportProcessGroupConflict struct {
}

// IsSuccess returns true when this export process group conflict response has a 2xx status code
func (o *ExportProcessGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export process group conflict response has a 3xx status code
func (o *ExportProcessGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export process group conflict response has a 4xx status code
func (o *ExportProcessGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this export process group conflict response has a 5xx status code
func (o *ExportProcessGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this export process group conflict response a status code equal to that given
func (o *ExportProcessGroupConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the export process group conflict response
func (o *ExportProcessGroupConflict) Code() int {
	return 409
}

func (o *ExportProcessGroupConflict) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupConflict ", 409)
}

func (o *ExportProcessGroupConflict) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/download][%d] exportProcessGroupConflict ", 409)
}

func (o *ExportProcessGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
