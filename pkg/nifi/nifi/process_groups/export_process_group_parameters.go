// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewExportProcessGroupParams creates a new ExportProcessGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewExportProcessGroupParams() *ExportProcessGroupParams {
	return &ExportProcessGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewExportProcessGroupParamsWithTimeout creates a new ExportProcessGroupParams object
// with the ability to set a timeout on a request.
func NewExportProcessGroupParamsWithTimeout(timeout time.Duration) *ExportProcessGroupParams {
	return &ExportProcessGroupParams{
		timeout: timeout,
	}
}

// NewExportProcessGroupParamsWithContext creates a new ExportProcessGroupParams object
// with the ability to set a context for a request.
func NewExportProcessGroupParamsWithContext(ctx context.Context) *ExportProcessGroupParams {
	return &ExportProcessGroupParams{
		Context: ctx,
	}
}

// NewExportProcessGroupParamsWithHTTPClient creates a new ExportProcessGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewExportProcessGroupParamsWithHTTPClient(client *http.Client) *ExportProcessGroupParams {
	return &ExportProcessGroupParams{
		HTTPClient: client,
	}
}

/*
ExportProcessGroupParams contains all the parameters to send to the API endpoint

	for the export process group operation.

	Typically these are written to a http.Request.
*/
type ExportProcessGroupParams struct {

	/* ID.

	   The process group id.
	*/
	ID string

	/* IncludeReferencedServices.

	   If referenced services from outside the target group should be included
	*/
	IncludeReferencedServices *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the export process group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExportProcessGroupParams) WithDefaults() *ExportProcessGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the export process group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExportProcessGroupParams) SetDefaults() {
	var (
		includeReferencedServicesDefault = bool(false)
	)

	val := ExportProcessGroupParams{
		IncludeReferencedServices: &includeReferencedServicesDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the export process group params
func (o *ExportProcessGroupParams) WithTimeout(timeout time.Duration) *ExportProcessGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the export process group params
func (o *ExportProcessGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the export process group params
func (o *ExportProcessGroupParams) WithContext(ctx context.Context) *ExportProcessGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the export process group params
func (o *ExportProcessGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the export process group params
func (o *ExportProcessGroupParams) WithHTTPClient(client *http.Client) *ExportProcessGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the export process group params
func (o *ExportProcessGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the export process group params
func (o *ExportProcessGroupParams) WithID(id string) *ExportProcessGroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the export process group params
func (o *ExportProcessGroupParams) SetID(id string) {
	o.ID = id
}

// WithIncludeReferencedServices adds the includeReferencedServices to the export process group params
func (o *ExportProcessGroupParams) WithIncludeReferencedServices(includeReferencedServices *bool) *ExportProcessGroupParams {
	o.SetIncludeReferencedServices(includeReferencedServices)
	return o
}

// SetIncludeReferencedServices adds the includeReferencedServices to the export process group params
func (o *ExportProcessGroupParams) SetIncludeReferencedServices(includeReferencedServices *bool) {
	o.IncludeReferencedServices = includeReferencedServices
}

// WriteToRequest writes these params to a swagger request
func (o *ExportProcessGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.IncludeReferencedServices != nil {

		// query param includeReferencedServices
		var qrIncludeReferencedServices bool

		if o.IncludeReferencedServices != nil {
			qrIncludeReferencedServices = *o.IncludeReferencedServices
		}
		qIncludeReferencedServices := swag.FormatBool(qrIncludeReferencedServices)
		if qIncludeReferencedServices != "" {

			if err := r.SetQueryParam("includeReferencedServices", qIncludeReferencedServices); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
