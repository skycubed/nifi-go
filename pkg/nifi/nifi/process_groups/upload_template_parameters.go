// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUploadTemplateParams creates a new UploadTemplateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUploadTemplateParams() *UploadTemplateParams {
	return &UploadTemplateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUploadTemplateParamsWithTimeout creates a new UploadTemplateParams object
// with the ability to set a timeout on a request.
func NewUploadTemplateParamsWithTimeout(timeout time.Duration) *UploadTemplateParams {
	return &UploadTemplateParams{
		timeout: timeout,
	}
}

// NewUploadTemplateParamsWithContext creates a new UploadTemplateParams object
// with the ability to set a context for a request.
func NewUploadTemplateParamsWithContext(ctx context.Context) *UploadTemplateParams {
	return &UploadTemplateParams{
		Context: ctx,
	}
}

// NewUploadTemplateParamsWithHTTPClient creates a new UploadTemplateParams object
// with the ability to set a custom HTTPClient for a request.
func NewUploadTemplateParamsWithHTTPClient(client *http.Client) *UploadTemplateParams {
	return &UploadTemplateParams{
		HTTPClient: client,
	}
}

/* UploadTemplateParams contains all the parameters to send to the API endpoint
   for the upload template operation.

   Typically these are written to a http.Request.
*/
type UploadTemplateParams struct {

	/* Body.

	   Acknowledges that this node is disconnected to allow for mutable requests to proceed.
	*/
	Body bool

	/* ID.

	   The process group id.
	*/
	ID string

	/* Template.

	   The binary content of the template file being uploaded.
	*/
	Template runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upload template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadTemplateParams) WithDefaults() *UploadTemplateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upload template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadTemplateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upload template params
func (o *UploadTemplateParams) WithTimeout(timeout time.Duration) *UploadTemplateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload template params
func (o *UploadTemplateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload template params
func (o *UploadTemplateParams) WithContext(ctx context.Context) *UploadTemplateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload template params
func (o *UploadTemplateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload template params
func (o *UploadTemplateParams) WithHTTPClient(client *http.Client) *UploadTemplateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload template params
func (o *UploadTemplateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the upload template params
func (o *UploadTemplateParams) WithBody(body bool) *UploadTemplateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the upload template params
func (o *UploadTemplateParams) SetBody(body bool) {
	o.Body = body
}

// WithID adds the id to the upload template params
func (o *UploadTemplateParams) WithID(id string) *UploadTemplateParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the upload template params
func (o *UploadTemplateParams) SetID(id string) {
	o.ID = id
}

// WithTemplate adds the template to the upload template params
func (o *UploadTemplateParams) WithTemplate(template runtime.NamedReadCloser) *UploadTemplateParams {
	o.SetTemplate(template)
	return o
}

// SetTemplate adds the template to the upload template params
func (o *UploadTemplateParams) SetTemplate(template runtime.NamedReadCloser) {
	o.Template = template
}

// WriteToRequest writes these params to a swagger request
func (o *UploadTemplateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	// form file param template
	if err := r.SetFileParam("template", o.Template); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
