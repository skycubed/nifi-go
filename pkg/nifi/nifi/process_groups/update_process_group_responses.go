// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateProcessGroupReader is a Reader for the UpdateProcessGroup structure.
type UpdateProcessGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProcessGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProcessGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProcessGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateProcessGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProcessGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProcessGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateProcessGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateProcessGroupOK creates a UpdateProcessGroupOK with default headers values
func NewUpdateProcessGroupOK() *UpdateProcessGroupOK {
	return &UpdateProcessGroupOK{}
}

/* UpdateProcessGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateProcessGroupOK struct {
	Payload *models.ProcessGroupEntity
}

func (o *UpdateProcessGroupOK) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupOK  %+v", 200, o.Payload)
}
func (o *UpdateProcessGroupOK) GetPayload() *models.ProcessGroupEntity {
	return o.Payload
}

func (o *UpdateProcessGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessGroupEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProcessGroupBadRequest creates a UpdateProcessGroupBadRequest with default headers values
func NewUpdateProcessGroupBadRequest() *UpdateProcessGroupBadRequest {
	return &UpdateProcessGroupBadRequest{}
}

/* UpdateProcessGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateProcessGroupBadRequest struct {
}

func (o *UpdateProcessGroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupBadRequest ", 400)
}

func (o *UpdateProcessGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProcessGroupUnauthorized creates a UpdateProcessGroupUnauthorized with default headers values
func NewUpdateProcessGroupUnauthorized() *UpdateProcessGroupUnauthorized {
	return &UpdateProcessGroupUnauthorized{}
}

/* UpdateProcessGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateProcessGroupUnauthorized struct {
}

func (o *UpdateProcessGroupUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupUnauthorized ", 401)
}

func (o *UpdateProcessGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProcessGroupForbidden creates a UpdateProcessGroupForbidden with default headers values
func NewUpdateProcessGroupForbidden() *UpdateProcessGroupForbidden {
	return &UpdateProcessGroupForbidden{}
}

/* UpdateProcessGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateProcessGroupForbidden struct {
}

func (o *UpdateProcessGroupForbidden) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupForbidden ", 403)
}

func (o *UpdateProcessGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProcessGroupNotFound creates a UpdateProcessGroupNotFound with default headers values
func NewUpdateProcessGroupNotFound() *UpdateProcessGroupNotFound {
	return &UpdateProcessGroupNotFound{}
}

/* UpdateProcessGroupNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateProcessGroupNotFound struct {
}

func (o *UpdateProcessGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupNotFound ", 404)
}

func (o *UpdateProcessGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProcessGroupConflict creates a UpdateProcessGroupConflict with default headers values
func NewUpdateProcessGroupConflict() *UpdateProcessGroupConflict {
	return &UpdateProcessGroupConflict{}
}

/* UpdateProcessGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateProcessGroupConflict struct {
}

func (o *UpdateProcessGroupConflict) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}][%d] updateProcessGroupConflict ", 409)
}

func (o *UpdateProcessGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
