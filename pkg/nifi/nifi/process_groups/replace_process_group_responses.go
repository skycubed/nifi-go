// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// ReplaceProcessGroupReader is a Reader for the ReplaceProcessGroup structure.
type ReplaceProcessGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceProcessGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceProcessGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceProcessGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReplaceProcessGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplaceProcessGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceProcessGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReplaceProcessGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceProcessGroupOK creates a ReplaceProcessGroupOK with default headers values
func NewReplaceProcessGroupOK() *ReplaceProcessGroupOK {
	return &ReplaceProcessGroupOK{}
}

/* ReplaceProcessGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type ReplaceProcessGroupOK struct {
	Payload *models.ProcessGroupImportEntity
}

func (o *ReplaceProcessGroupOK) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupOK  %+v", 200, o.Payload)
}
func (o *ReplaceProcessGroupOK) GetPayload() *models.ProcessGroupImportEntity {
	return o.Payload
}

func (o *ReplaceProcessGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessGroupImportEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceProcessGroupBadRequest creates a ReplaceProcessGroupBadRequest with default headers values
func NewReplaceProcessGroupBadRequest() *ReplaceProcessGroupBadRequest {
	return &ReplaceProcessGroupBadRequest{}
}

/* ReplaceProcessGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ReplaceProcessGroupBadRequest struct {
}

func (o *ReplaceProcessGroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupBadRequest ", 400)
}

func (o *ReplaceProcessGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceProcessGroupUnauthorized creates a ReplaceProcessGroupUnauthorized with default headers values
func NewReplaceProcessGroupUnauthorized() *ReplaceProcessGroupUnauthorized {
	return &ReplaceProcessGroupUnauthorized{}
}

/* ReplaceProcessGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type ReplaceProcessGroupUnauthorized struct {
}

func (o *ReplaceProcessGroupUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupUnauthorized ", 401)
}

func (o *ReplaceProcessGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceProcessGroupForbidden creates a ReplaceProcessGroupForbidden with default headers values
func NewReplaceProcessGroupForbidden() *ReplaceProcessGroupForbidden {
	return &ReplaceProcessGroupForbidden{}
}

/* ReplaceProcessGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type ReplaceProcessGroupForbidden struct {
}

func (o *ReplaceProcessGroupForbidden) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupForbidden ", 403)
}

func (o *ReplaceProcessGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceProcessGroupNotFound creates a ReplaceProcessGroupNotFound with default headers values
func NewReplaceProcessGroupNotFound() *ReplaceProcessGroupNotFound {
	return &ReplaceProcessGroupNotFound{}
}

/* ReplaceProcessGroupNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type ReplaceProcessGroupNotFound struct {
}

func (o *ReplaceProcessGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupNotFound ", 404)
}

func (o *ReplaceProcessGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplaceProcessGroupConflict creates a ReplaceProcessGroupConflict with default headers values
func NewReplaceProcessGroupConflict() *ReplaceProcessGroupConflict {
	return &ReplaceProcessGroupConflict{}
}

/* ReplaceProcessGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ReplaceProcessGroupConflict struct {
}

func (o *ReplaceProcessGroupConflict) Error() string {
	return fmt.Sprintf("[PUT /process-groups/{id}/flow-contents][%d] replaceProcessGroupConflict ", 409)
}

func (o *ReplaceProcessGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
