// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// CreateProcessorReader is a Reader for the CreateProcessor structure.
type CreateProcessorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProcessorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProcessorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProcessorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProcessorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProcessorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProcessorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProcessorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProcessorCreated creates a CreateProcessorCreated with default headers values
func NewCreateProcessorCreated() *CreateProcessorCreated {
	return &CreateProcessorCreated{}
}

/* CreateProcessorCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateProcessorCreated struct {
	Payload *models.ProcessorEntity
}

func (o *CreateProcessorCreated) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorCreated  %+v", 201, o.Payload)
}
func (o *CreateProcessorCreated) GetPayload() *models.ProcessorEntity {
	return o.Payload
}

func (o *CreateProcessorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProcessorBadRequest creates a CreateProcessorBadRequest with default headers values
func NewCreateProcessorBadRequest() *CreateProcessorBadRequest {
	return &CreateProcessorBadRequest{}
}

/* CreateProcessorBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateProcessorBadRequest struct {
}

func (o *CreateProcessorBadRequest) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorBadRequest ", 400)
}

func (o *CreateProcessorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProcessorUnauthorized creates a CreateProcessorUnauthorized with default headers values
func NewCreateProcessorUnauthorized() *CreateProcessorUnauthorized {
	return &CreateProcessorUnauthorized{}
}

/* CreateProcessorUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateProcessorUnauthorized struct {
}

func (o *CreateProcessorUnauthorized) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorUnauthorized ", 401)
}

func (o *CreateProcessorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProcessorForbidden creates a CreateProcessorForbidden with default headers values
func NewCreateProcessorForbidden() *CreateProcessorForbidden {
	return &CreateProcessorForbidden{}
}

/* CreateProcessorForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateProcessorForbidden struct {
}

func (o *CreateProcessorForbidden) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorForbidden ", 403)
}

func (o *CreateProcessorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProcessorNotFound creates a CreateProcessorNotFound with default headers values
func NewCreateProcessorNotFound() *CreateProcessorNotFound {
	return &CreateProcessorNotFound{}
}

/* CreateProcessorNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type CreateProcessorNotFound struct {
}

func (o *CreateProcessorNotFound) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorNotFound ", 404)
}

func (o *CreateProcessorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProcessorConflict creates a CreateProcessorConflict with default headers values
func NewCreateProcessorConflict() *CreateProcessorConflict {
	return &CreateProcessorConflict{}
}

/* CreateProcessorConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateProcessorConflict struct {
}

func (o *CreateProcessorConflict) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/processors][%d] createProcessorConflict ", 409)
}

func (o *CreateProcessorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
