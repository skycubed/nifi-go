// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// CreateInputPortReader is a Reader for the CreateInputPort structure.
type CreateInputPortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInputPortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInputPortCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInputPortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInputPortUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInputPortForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateInputPortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateInputPortConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateInputPortCreated creates a CreateInputPortCreated with default headers values
func NewCreateInputPortCreated() *CreateInputPortCreated {
	return &CreateInputPortCreated{}
}

/*
CreateInputPortCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateInputPortCreated struct {
	Payload *models.PortEntity
}

// IsSuccess returns true when this create input port created response has a 2xx status code
func (o *CreateInputPortCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create input port created response has a 3xx status code
func (o *CreateInputPortCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port created response has a 4xx status code
func (o *CreateInputPortCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create input port created response has a 5xx status code
func (o *CreateInputPortCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port created response a status code equal to that given
func (o *CreateInputPortCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateInputPortCreated) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortCreated  %+v", 201, o.Payload)
}

func (o *CreateInputPortCreated) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortCreated  %+v", 201, o.Payload)
}

func (o *CreateInputPortCreated) GetPayload() *models.PortEntity {
	return o.Payload
}

func (o *CreateInputPortCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInputPortBadRequest creates a CreateInputPortBadRequest with default headers values
func NewCreateInputPortBadRequest() *CreateInputPortBadRequest {
	return &CreateInputPortBadRequest{}
}

/*
CreateInputPortBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateInputPortBadRequest struct {
}

// IsSuccess returns true when this create input port bad request response has a 2xx status code
func (o *CreateInputPortBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create input port bad request response has a 3xx status code
func (o *CreateInputPortBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port bad request response has a 4xx status code
func (o *CreateInputPortBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create input port bad request response has a 5xx status code
func (o *CreateInputPortBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port bad request response a status code equal to that given
func (o *CreateInputPortBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateInputPortBadRequest) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortBadRequest ", 400)
}

func (o *CreateInputPortBadRequest) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortBadRequest ", 400)
}

func (o *CreateInputPortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInputPortUnauthorized creates a CreateInputPortUnauthorized with default headers values
func NewCreateInputPortUnauthorized() *CreateInputPortUnauthorized {
	return &CreateInputPortUnauthorized{}
}

/*
CreateInputPortUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateInputPortUnauthorized struct {
}

// IsSuccess returns true when this create input port unauthorized response has a 2xx status code
func (o *CreateInputPortUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create input port unauthorized response has a 3xx status code
func (o *CreateInputPortUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port unauthorized response has a 4xx status code
func (o *CreateInputPortUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create input port unauthorized response has a 5xx status code
func (o *CreateInputPortUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port unauthorized response a status code equal to that given
func (o *CreateInputPortUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateInputPortUnauthorized) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortUnauthorized ", 401)
}

func (o *CreateInputPortUnauthorized) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortUnauthorized ", 401)
}

func (o *CreateInputPortUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInputPortForbidden creates a CreateInputPortForbidden with default headers values
func NewCreateInputPortForbidden() *CreateInputPortForbidden {
	return &CreateInputPortForbidden{}
}

/*
CreateInputPortForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateInputPortForbidden struct {
}

// IsSuccess returns true when this create input port forbidden response has a 2xx status code
func (o *CreateInputPortForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create input port forbidden response has a 3xx status code
func (o *CreateInputPortForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port forbidden response has a 4xx status code
func (o *CreateInputPortForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create input port forbidden response has a 5xx status code
func (o *CreateInputPortForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port forbidden response a status code equal to that given
func (o *CreateInputPortForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateInputPortForbidden) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortForbidden ", 403)
}

func (o *CreateInputPortForbidden) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortForbidden ", 403)
}

func (o *CreateInputPortForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInputPortNotFound creates a CreateInputPortNotFound with default headers values
func NewCreateInputPortNotFound() *CreateInputPortNotFound {
	return &CreateInputPortNotFound{}
}

/*
CreateInputPortNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type CreateInputPortNotFound struct {
}

// IsSuccess returns true when this create input port not found response has a 2xx status code
func (o *CreateInputPortNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create input port not found response has a 3xx status code
func (o *CreateInputPortNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port not found response has a 4xx status code
func (o *CreateInputPortNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create input port not found response has a 5xx status code
func (o *CreateInputPortNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port not found response a status code equal to that given
func (o *CreateInputPortNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateInputPortNotFound) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortNotFound ", 404)
}

func (o *CreateInputPortNotFound) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortNotFound ", 404)
}

func (o *CreateInputPortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateInputPortConflict creates a CreateInputPortConflict with default headers values
func NewCreateInputPortConflict() *CreateInputPortConflict {
	return &CreateInputPortConflict{}
}

/*
CreateInputPortConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateInputPortConflict struct {
}

// IsSuccess returns true when this create input port conflict response has a 2xx status code
func (o *CreateInputPortConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create input port conflict response has a 3xx status code
func (o *CreateInputPortConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create input port conflict response has a 4xx status code
func (o *CreateInputPortConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create input port conflict response has a 5xx status code
func (o *CreateInputPortConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create input port conflict response a status code equal to that given
func (o *CreateInputPortConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateInputPortConflict) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortConflict ", 409)
}

func (o *CreateInputPortConflict) String() string {
	return fmt.Sprintf("[POST /process-groups/{id}/input-ports][%d] createInputPortConflict ", 409)
}

func (o *CreateInputPortConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
