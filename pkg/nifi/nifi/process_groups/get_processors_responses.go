// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetProcessorsReader is a Reader for the GetProcessors structure.
type GetProcessorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProcessorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProcessorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProcessorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProcessorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProcessorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProcessorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetProcessorsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProcessorsOK creates a GetProcessorsOK with default headers values
func NewGetProcessorsOK() *GetProcessorsOK {
	return &GetProcessorsOK{}
}

/* GetProcessorsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetProcessorsOK struct {
	Payload *models.ProcessorsEntity
}

func (o *GetProcessorsOK) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsOK  %+v", 200, o.Payload)
}
func (o *GetProcessorsOK) GetPayload() *models.ProcessorsEntity {
	return o.Payload
}

func (o *GetProcessorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProcessorsBadRequest creates a GetProcessorsBadRequest with default headers values
func NewGetProcessorsBadRequest() *GetProcessorsBadRequest {
	return &GetProcessorsBadRequest{}
}

/* GetProcessorsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetProcessorsBadRequest struct {
}

func (o *GetProcessorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsBadRequest ", 400)
}

func (o *GetProcessorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorsUnauthorized creates a GetProcessorsUnauthorized with default headers values
func NewGetProcessorsUnauthorized() *GetProcessorsUnauthorized {
	return &GetProcessorsUnauthorized{}
}

/* GetProcessorsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetProcessorsUnauthorized struct {
}

func (o *GetProcessorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsUnauthorized ", 401)
}

func (o *GetProcessorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorsForbidden creates a GetProcessorsForbidden with default headers values
func NewGetProcessorsForbidden() *GetProcessorsForbidden {
	return &GetProcessorsForbidden{}
}

/* GetProcessorsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetProcessorsForbidden struct {
}

func (o *GetProcessorsForbidden) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsForbidden ", 403)
}

func (o *GetProcessorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorsNotFound creates a GetProcessorsNotFound with default headers values
func NewGetProcessorsNotFound() *GetProcessorsNotFound {
	return &GetProcessorsNotFound{}
}

/* GetProcessorsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetProcessorsNotFound struct {
}

func (o *GetProcessorsNotFound) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsNotFound ", 404)
}

func (o *GetProcessorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorsConflict creates a GetProcessorsConflict with default headers values
func NewGetProcessorsConflict() *GetProcessorsConflict {
	return &GetProcessorsConflict{}
}

/* GetProcessorsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetProcessorsConflict struct {
}

func (o *GetProcessorsConflict) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/processors][%d] getProcessorsConflict ", 409)
}

func (o *GetProcessorsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
