// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// CreateOutputPortReader is a Reader for the CreateOutputPort structure.
type CreateOutputPortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOutputPortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOutputPortOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOutputPortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateOutputPortUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOutputPortForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOutputPortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateOutputPortConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOutputPortOK creates a CreateOutputPortOK with default headers values
func NewCreateOutputPortOK() *CreateOutputPortOK {
	return &CreateOutputPortOK{}
}

/* CreateOutputPortOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateOutputPortOK struct {
	Payload *models.PortEntity
}

func (o *CreateOutputPortOK) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortOK  %+v", 200, o.Payload)
}
func (o *CreateOutputPortOK) GetPayload() *models.PortEntity {
	return o.Payload
}

func (o *CreateOutputPortOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOutputPortBadRequest creates a CreateOutputPortBadRequest with default headers values
func NewCreateOutputPortBadRequest() *CreateOutputPortBadRequest {
	return &CreateOutputPortBadRequest{}
}

/* CreateOutputPortBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateOutputPortBadRequest struct {
}

func (o *CreateOutputPortBadRequest) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortBadRequest ", 400)
}

func (o *CreateOutputPortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOutputPortUnauthorized creates a CreateOutputPortUnauthorized with default headers values
func NewCreateOutputPortUnauthorized() *CreateOutputPortUnauthorized {
	return &CreateOutputPortUnauthorized{}
}

/* CreateOutputPortUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateOutputPortUnauthorized struct {
}

func (o *CreateOutputPortUnauthorized) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortUnauthorized ", 401)
}

func (o *CreateOutputPortUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOutputPortForbidden creates a CreateOutputPortForbidden with default headers values
func NewCreateOutputPortForbidden() *CreateOutputPortForbidden {
	return &CreateOutputPortForbidden{}
}

/* CreateOutputPortForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateOutputPortForbidden struct {
}

func (o *CreateOutputPortForbidden) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortForbidden ", 403)
}

func (o *CreateOutputPortForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOutputPortNotFound creates a CreateOutputPortNotFound with default headers values
func NewCreateOutputPortNotFound() *CreateOutputPortNotFound {
	return &CreateOutputPortNotFound{}
}

/* CreateOutputPortNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type CreateOutputPortNotFound struct {
}

func (o *CreateOutputPortNotFound) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortNotFound ", 404)
}

func (o *CreateOutputPortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOutputPortConflict creates a CreateOutputPortConflict with default headers values
func NewCreateOutputPortConflict() *CreateOutputPortConflict {
	return &CreateOutputPortConflict{}
}

/* CreateOutputPortConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateOutputPortConflict struct {
}

func (o *CreateOutputPortConflict) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/output-ports][%d] createOutputPortConflict ", 409)
}

func (o *CreateOutputPortConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
