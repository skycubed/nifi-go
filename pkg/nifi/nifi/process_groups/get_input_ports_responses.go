// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetInputPortsReader is a Reader for the GetInputPorts structure.
type GetInputPortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInputPortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInputPortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInputPortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInputPortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInputPortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInputPortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetInputPortsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInputPortsOK creates a GetInputPortsOK with default headers values
func NewGetInputPortsOK() *GetInputPortsOK {
	return &GetInputPortsOK{}
}

/*
GetInputPortsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetInputPortsOK struct {
	Payload *models.InputPortsEntity
}

// IsSuccess returns true when this get input ports o k response has a 2xx status code
func (o *GetInputPortsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get input ports o k response has a 3xx status code
func (o *GetInputPortsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports o k response has a 4xx status code
func (o *GetInputPortsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get input ports o k response has a 5xx status code
func (o *GetInputPortsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports o k response a status code equal to that given
func (o *GetInputPortsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetInputPortsOK) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsOK  %+v", 200, o.Payload)
}

func (o *GetInputPortsOK) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsOK  %+v", 200, o.Payload)
}

func (o *GetInputPortsOK) GetPayload() *models.InputPortsEntity {
	return o.Payload
}

func (o *GetInputPortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InputPortsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInputPortsBadRequest creates a GetInputPortsBadRequest with default headers values
func NewGetInputPortsBadRequest() *GetInputPortsBadRequest {
	return &GetInputPortsBadRequest{}
}

/*
GetInputPortsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetInputPortsBadRequest struct {
}

// IsSuccess returns true when this get input ports bad request response has a 2xx status code
func (o *GetInputPortsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get input ports bad request response has a 3xx status code
func (o *GetInputPortsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports bad request response has a 4xx status code
func (o *GetInputPortsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get input ports bad request response has a 5xx status code
func (o *GetInputPortsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports bad request response a status code equal to that given
func (o *GetInputPortsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetInputPortsBadRequest) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsBadRequest ", 400)
}

func (o *GetInputPortsBadRequest) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsBadRequest ", 400)
}

func (o *GetInputPortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInputPortsUnauthorized creates a GetInputPortsUnauthorized with default headers values
func NewGetInputPortsUnauthorized() *GetInputPortsUnauthorized {
	return &GetInputPortsUnauthorized{}
}

/*
GetInputPortsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetInputPortsUnauthorized struct {
}

// IsSuccess returns true when this get input ports unauthorized response has a 2xx status code
func (o *GetInputPortsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get input ports unauthorized response has a 3xx status code
func (o *GetInputPortsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports unauthorized response has a 4xx status code
func (o *GetInputPortsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get input ports unauthorized response has a 5xx status code
func (o *GetInputPortsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports unauthorized response a status code equal to that given
func (o *GetInputPortsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetInputPortsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsUnauthorized ", 401)
}

func (o *GetInputPortsUnauthorized) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsUnauthorized ", 401)
}

func (o *GetInputPortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInputPortsForbidden creates a GetInputPortsForbidden with default headers values
func NewGetInputPortsForbidden() *GetInputPortsForbidden {
	return &GetInputPortsForbidden{}
}

/*
GetInputPortsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetInputPortsForbidden struct {
}

// IsSuccess returns true when this get input ports forbidden response has a 2xx status code
func (o *GetInputPortsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get input ports forbidden response has a 3xx status code
func (o *GetInputPortsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports forbidden response has a 4xx status code
func (o *GetInputPortsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get input ports forbidden response has a 5xx status code
func (o *GetInputPortsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports forbidden response a status code equal to that given
func (o *GetInputPortsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetInputPortsForbidden) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsForbidden ", 403)
}

func (o *GetInputPortsForbidden) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsForbidden ", 403)
}

func (o *GetInputPortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInputPortsNotFound creates a GetInputPortsNotFound with default headers values
func NewGetInputPortsNotFound() *GetInputPortsNotFound {
	return &GetInputPortsNotFound{}
}

/*
GetInputPortsNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetInputPortsNotFound struct {
}

// IsSuccess returns true when this get input ports not found response has a 2xx status code
func (o *GetInputPortsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get input ports not found response has a 3xx status code
func (o *GetInputPortsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports not found response has a 4xx status code
func (o *GetInputPortsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get input ports not found response has a 5xx status code
func (o *GetInputPortsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports not found response a status code equal to that given
func (o *GetInputPortsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetInputPortsNotFound) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsNotFound ", 404)
}

func (o *GetInputPortsNotFound) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsNotFound ", 404)
}

func (o *GetInputPortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInputPortsConflict creates a GetInputPortsConflict with default headers values
func NewGetInputPortsConflict() *GetInputPortsConflict {
	return &GetInputPortsConflict{}
}

/*
GetInputPortsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetInputPortsConflict struct {
}

// IsSuccess returns true when this get input ports conflict response has a 2xx status code
func (o *GetInputPortsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get input ports conflict response has a 3xx status code
func (o *GetInputPortsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get input ports conflict response has a 4xx status code
func (o *GetInputPortsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get input ports conflict response has a 5xx status code
func (o *GetInputPortsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get input ports conflict response a status code equal to that given
func (o *GetInputPortsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetInputPortsConflict) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsConflict ", 409)
}

func (o *GetInputPortsConflict) String() string {
	return fmt.Sprintf("[GET /process-groups/{id}/input-ports][%d] getInputPortsConflict ", 409)
}

func (o *GetInputPortsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
