// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// CreateControllerServiceReader is a Reader for the CreateControllerService structure.
type CreateControllerServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateControllerServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateControllerServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateControllerServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateControllerServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateControllerServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateControllerServiceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateControllerServiceOK creates a CreateControllerServiceOK with default headers values
func NewCreateControllerServiceOK() *CreateControllerServiceOK {
	return &CreateControllerServiceOK{}
}

/* CreateControllerServiceOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateControllerServiceOK struct {
	Payload *models.ControllerServiceEntity
}

func (o *CreateControllerServiceOK) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceOK  %+v", 200, o.Payload)
}
func (o *CreateControllerServiceOK) GetPayload() *models.ControllerServiceEntity {
	return o.Payload
}

func (o *CreateControllerServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateControllerServiceBadRequest creates a CreateControllerServiceBadRequest with default headers values
func NewCreateControllerServiceBadRequest() *CreateControllerServiceBadRequest {
	return &CreateControllerServiceBadRequest{}
}

/* CreateControllerServiceBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateControllerServiceBadRequest struct {
}

func (o *CreateControllerServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceBadRequest ", 400)
}

func (o *CreateControllerServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceUnauthorized creates a CreateControllerServiceUnauthorized with default headers values
func NewCreateControllerServiceUnauthorized() *CreateControllerServiceUnauthorized {
	return &CreateControllerServiceUnauthorized{}
}

/* CreateControllerServiceUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type CreateControllerServiceUnauthorized struct {
}

func (o *CreateControllerServiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceUnauthorized ", 401)
}

func (o *CreateControllerServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceForbidden creates a CreateControllerServiceForbidden with default headers values
func NewCreateControllerServiceForbidden() *CreateControllerServiceForbidden {
	return &CreateControllerServiceForbidden{}
}

/* CreateControllerServiceForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type CreateControllerServiceForbidden struct {
}

func (o *CreateControllerServiceForbidden) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceForbidden ", 403)
}

func (o *CreateControllerServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceConflict creates a CreateControllerServiceConflict with default headers values
func NewCreateControllerServiceConflict() *CreateControllerServiceConflict {
	return &CreateControllerServiceConflict{}
}

/* CreateControllerServiceConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateControllerServiceConflict struct {
}

func (o *CreateControllerServiceConflict) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceConflict ", 409)
}

func (o *CreateControllerServiceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
