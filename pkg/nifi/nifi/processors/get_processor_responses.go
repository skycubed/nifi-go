// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetProcessorReader is a Reader for the GetProcessor structure.
type GetProcessorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProcessorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProcessorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProcessorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProcessorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProcessorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProcessorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetProcessorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProcessorOK creates a GetProcessorOK with default headers values
func NewGetProcessorOK() *GetProcessorOK {
	return &GetProcessorOK{}
}

/* GetProcessorOK describes a response with status code 200, with default header values.

successful operation
*/
type GetProcessorOK struct {
	Payload *models.ProcessorEntity
}

func (o *GetProcessorOK) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorOK  %+v", 200, o.Payload)
}
func (o *GetProcessorOK) GetPayload() *models.ProcessorEntity {
	return o.Payload
}

func (o *GetProcessorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProcessorBadRequest creates a GetProcessorBadRequest with default headers values
func NewGetProcessorBadRequest() *GetProcessorBadRequest {
	return &GetProcessorBadRequest{}
}

/* GetProcessorBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetProcessorBadRequest struct {
}

func (o *GetProcessorBadRequest) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorBadRequest ", 400)
}

func (o *GetProcessorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorUnauthorized creates a GetProcessorUnauthorized with default headers values
func NewGetProcessorUnauthorized() *GetProcessorUnauthorized {
	return &GetProcessorUnauthorized{}
}

/* GetProcessorUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetProcessorUnauthorized struct {
}

func (o *GetProcessorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorUnauthorized ", 401)
}

func (o *GetProcessorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorForbidden creates a GetProcessorForbidden with default headers values
func NewGetProcessorForbidden() *GetProcessorForbidden {
	return &GetProcessorForbidden{}
}

/* GetProcessorForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetProcessorForbidden struct {
}

func (o *GetProcessorForbidden) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorForbidden ", 403)
}

func (o *GetProcessorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorNotFound creates a GetProcessorNotFound with default headers values
func NewGetProcessorNotFound() *GetProcessorNotFound {
	return &GetProcessorNotFound{}
}

/* GetProcessorNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetProcessorNotFound struct {
}

func (o *GetProcessorNotFound) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorNotFound ", 404)
}

func (o *GetProcessorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessorConflict creates a GetProcessorConflict with default headers values
func NewGetProcessorConflict() *GetProcessorConflict {
	return &GetProcessorConflict{}
}

/* GetProcessorConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetProcessorConflict struct {
}

func (o *GetProcessorConflict) Error() string {
	return fmt.Sprintf("[GET /processors/{id}][%d] getProcessorConflict ", 409)
}

func (o *GetProcessorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
