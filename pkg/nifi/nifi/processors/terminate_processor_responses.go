// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// TerminateProcessorReader is a Reader for the TerminateProcessor structure.
type TerminateProcessorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TerminateProcessorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTerminateProcessorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTerminateProcessorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTerminateProcessorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTerminateProcessorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTerminateProcessorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTerminateProcessorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTerminateProcessorOK creates a TerminateProcessorOK with default headers values
func NewTerminateProcessorOK() *TerminateProcessorOK {
	return &TerminateProcessorOK{}
}

/*
TerminateProcessorOK describes a response with status code 200, with default header values.

successful operation
*/
type TerminateProcessorOK struct {
	Payload *models.ProcessorEntity
}

// IsSuccess returns true when this terminate processor o k response has a 2xx status code
func (o *TerminateProcessorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this terminate processor o k response has a 3xx status code
func (o *TerminateProcessorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor o k response has a 4xx status code
func (o *TerminateProcessorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this terminate processor o k response has a 5xx status code
func (o *TerminateProcessorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor o k response a status code equal to that given
func (o *TerminateProcessorOK) IsCode(code int) bool {
	return code == 200
}

func (o *TerminateProcessorOK) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorOK  %+v", 200, o.Payload)
}

func (o *TerminateProcessorOK) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorOK  %+v", 200, o.Payload)
}

func (o *TerminateProcessorOK) GetPayload() *models.ProcessorEntity {
	return o.Payload
}

func (o *TerminateProcessorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTerminateProcessorBadRequest creates a TerminateProcessorBadRequest with default headers values
func NewTerminateProcessorBadRequest() *TerminateProcessorBadRequest {
	return &TerminateProcessorBadRequest{}
}

/*
TerminateProcessorBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type TerminateProcessorBadRequest struct {
}

// IsSuccess returns true when this terminate processor bad request response has a 2xx status code
func (o *TerminateProcessorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this terminate processor bad request response has a 3xx status code
func (o *TerminateProcessorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor bad request response has a 4xx status code
func (o *TerminateProcessorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this terminate processor bad request response has a 5xx status code
func (o *TerminateProcessorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor bad request response a status code equal to that given
func (o *TerminateProcessorBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *TerminateProcessorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorBadRequest ", 400)
}

func (o *TerminateProcessorBadRequest) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorBadRequest ", 400)
}

func (o *TerminateProcessorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTerminateProcessorUnauthorized creates a TerminateProcessorUnauthorized with default headers values
func NewTerminateProcessorUnauthorized() *TerminateProcessorUnauthorized {
	return &TerminateProcessorUnauthorized{}
}

/*
TerminateProcessorUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type TerminateProcessorUnauthorized struct {
}

// IsSuccess returns true when this terminate processor unauthorized response has a 2xx status code
func (o *TerminateProcessorUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this terminate processor unauthorized response has a 3xx status code
func (o *TerminateProcessorUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor unauthorized response has a 4xx status code
func (o *TerminateProcessorUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this terminate processor unauthorized response has a 5xx status code
func (o *TerminateProcessorUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor unauthorized response a status code equal to that given
func (o *TerminateProcessorUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *TerminateProcessorUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorUnauthorized ", 401)
}

func (o *TerminateProcessorUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorUnauthorized ", 401)
}

func (o *TerminateProcessorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTerminateProcessorForbidden creates a TerminateProcessorForbidden with default headers values
func NewTerminateProcessorForbidden() *TerminateProcessorForbidden {
	return &TerminateProcessorForbidden{}
}

/*
TerminateProcessorForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type TerminateProcessorForbidden struct {
}

// IsSuccess returns true when this terminate processor forbidden response has a 2xx status code
func (o *TerminateProcessorForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this terminate processor forbidden response has a 3xx status code
func (o *TerminateProcessorForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor forbidden response has a 4xx status code
func (o *TerminateProcessorForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this terminate processor forbidden response has a 5xx status code
func (o *TerminateProcessorForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor forbidden response a status code equal to that given
func (o *TerminateProcessorForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *TerminateProcessorForbidden) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorForbidden ", 403)
}

func (o *TerminateProcessorForbidden) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorForbidden ", 403)
}

func (o *TerminateProcessorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTerminateProcessorNotFound creates a TerminateProcessorNotFound with default headers values
func NewTerminateProcessorNotFound() *TerminateProcessorNotFound {
	return &TerminateProcessorNotFound{}
}

/*
TerminateProcessorNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type TerminateProcessorNotFound struct {
}

// IsSuccess returns true when this terminate processor not found response has a 2xx status code
func (o *TerminateProcessorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this terminate processor not found response has a 3xx status code
func (o *TerminateProcessorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor not found response has a 4xx status code
func (o *TerminateProcessorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this terminate processor not found response has a 5xx status code
func (o *TerminateProcessorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor not found response a status code equal to that given
func (o *TerminateProcessorNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *TerminateProcessorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorNotFound ", 404)
}

func (o *TerminateProcessorNotFound) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorNotFound ", 404)
}

func (o *TerminateProcessorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTerminateProcessorConflict creates a TerminateProcessorConflict with default headers values
func NewTerminateProcessorConflict() *TerminateProcessorConflict {
	return &TerminateProcessorConflict{}
}

/*
TerminateProcessorConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type TerminateProcessorConflict struct {
}

// IsSuccess returns true when this terminate processor conflict response has a 2xx status code
func (o *TerminateProcessorConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this terminate processor conflict response has a 3xx status code
func (o *TerminateProcessorConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this terminate processor conflict response has a 4xx status code
func (o *TerminateProcessorConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this terminate processor conflict response has a 5xx status code
func (o *TerminateProcessorConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this terminate processor conflict response a status code equal to that given
func (o *TerminateProcessorConflict) IsCode(code int) bool {
	return code == 409
}

func (o *TerminateProcessorConflict) Error() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorConflict ", 409)
}

func (o *TerminateProcessorConflict) String() string {
	return fmt.Sprintf("[DELETE /processors/{id}/threads][%d] terminateProcessorConflict ", 409)
}

func (o *TerminateProcessorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
