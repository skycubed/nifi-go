// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateRemoteProcessGroupInputPortRunStatusReader is a Reader for the UpdateRemoteProcessGroupInputPortRunStatus structure.
type UpdateRemoteProcessGroupInputPortRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRemoteProcessGroupInputPortRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status] updateRemoteProcessGroupInputPortRunStatus", response, response.Code())
	}
}

// NewUpdateRemoteProcessGroupInputPortRunStatusOK creates a UpdateRemoteProcessGroupInputPortRunStatusOK with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusOK() *UpdateRemoteProcessGroupInputPortRunStatusOK {
	return &UpdateRemoteProcessGroupInputPortRunStatusOK{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateRemoteProcessGroupInputPortRunStatusOK struct {
	Payload *models.RemoteProcessGroupPortEntity
}

// IsSuccess returns true when this update remote process group input port run status o k response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update remote process group input port run status o k response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status o k response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update remote process group input port run status o k response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status o k response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update remote process group input port run status o k response
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) Code() int {
	return 200
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusOK  %+v", 200, o.Payload)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusOK  %+v", 200, o.Payload)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) GetPayload() *models.RemoteProcessGroupPortEntity {
	return o.Payload
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RemoteProcessGroupPortEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest creates a UpdateRemoteProcessGroupInputPortRunStatusBadRequest with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest() *UpdateRemoteProcessGroupInputPortRunStatusBadRequest {
	return &UpdateRemoteProcessGroupInputPortRunStatusBadRequest{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRemoteProcessGroupInputPortRunStatusBadRequest struct {
}

// IsSuccess returns true when this update remote process group input port run status bad request response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group input port run status bad request response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status bad request response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group input port run status bad request response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status bad request response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update remote process group input port run status bad request response
func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) Code() int {
	return 400
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized creates a UpdateRemoteProcessGroupInputPortRunStatusUnauthorized with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized() *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized {
	return &UpdateRemoteProcessGroupInputPortRunStatusUnauthorized{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateRemoteProcessGroupInputPortRunStatusUnauthorized struct {
}

// IsSuccess returns true when this update remote process group input port run status unauthorized response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group input port run status unauthorized response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status unauthorized response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group input port run status unauthorized response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status unauthorized response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update remote process group input port run status unauthorized response
func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) Code() int {
	return 401
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusForbidden creates a UpdateRemoteProcessGroupInputPortRunStatusForbidden with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusForbidden() *UpdateRemoteProcessGroupInputPortRunStatusForbidden {
	return &UpdateRemoteProcessGroupInputPortRunStatusForbidden{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateRemoteProcessGroupInputPortRunStatusForbidden struct {
}

// IsSuccess returns true when this update remote process group input port run status forbidden response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group input port run status forbidden response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status forbidden response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group input port run status forbidden response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status forbidden response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update remote process group input port run status forbidden response
func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) Code() int {
	return 403
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusNotFound creates a UpdateRemoteProcessGroupInputPortRunStatusNotFound with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusNotFound() *UpdateRemoteProcessGroupInputPortRunStatusNotFound {
	return &UpdateRemoteProcessGroupInputPortRunStatusNotFound{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateRemoteProcessGroupInputPortRunStatusNotFound struct {
}

// IsSuccess returns true when this update remote process group input port run status not found response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group input port run status not found response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status not found response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group input port run status not found response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status not found response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update remote process group input port run status not found response
func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) Code() int {
	return 404
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusConflict creates a UpdateRemoteProcessGroupInputPortRunStatusConflict with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusConflict() *UpdateRemoteProcessGroupInputPortRunStatusConflict {
	return &UpdateRemoteProcessGroupInputPortRunStatusConflict{}
}

/*
UpdateRemoteProcessGroupInputPortRunStatusConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRemoteProcessGroupInputPortRunStatusConflict struct {
}

// IsSuccess returns true when this update remote process group input port run status conflict response has a 2xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group input port run status conflict response has a 3xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group input port run status conflict response has a 4xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group input port run status conflict response has a 5xx status code
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group input port run status conflict response a status code equal to that given
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update remote process group input port run status conflict response
func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) Code() int {
	return 409
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusConflict ", 409)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusConflict ", 409)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
