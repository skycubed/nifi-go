// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateRemoteProcessGroupInputPortRunStatusReader is a Reader for the UpdateRemoteProcessGroupInputPortRunStatus structure.
type UpdateRemoteProcessGroupInputPortRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRemoteProcessGroupInputPortRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRemoteProcessGroupInputPortRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRemoteProcessGroupInputPortRunStatusOK creates a UpdateRemoteProcessGroupInputPortRunStatusOK with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusOK() *UpdateRemoteProcessGroupInputPortRunStatusOK {
	return &UpdateRemoteProcessGroupInputPortRunStatusOK{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateRemoteProcessGroupInputPortRunStatusOK struct {
	Payload *models.RemoteProcessGroupPortEntity
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusOK  %+v", 200, o.Payload)
}
func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) GetPayload() *models.RemoteProcessGroupPortEntity {
	return o.Payload
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RemoteProcessGroupPortEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest creates a UpdateRemoteProcessGroupInputPortRunStatusBadRequest with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusBadRequest() *UpdateRemoteProcessGroupInputPortRunStatusBadRequest {
	return &UpdateRemoteProcessGroupInputPortRunStatusBadRequest{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRemoteProcessGroupInputPortRunStatusBadRequest struct {
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized creates a UpdateRemoteProcessGroupInputPortRunStatusUnauthorized with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusUnauthorized() *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized {
	return &UpdateRemoteProcessGroupInputPortRunStatusUnauthorized{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateRemoteProcessGroupInputPortRunStatusUnauthorized struct {
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusForbidden creates a UpdateRemoteProcessGroupInputPortRunStatusForbidden with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusForbidden() *UpdateRemoteProcessGroupInputPortRunStatusForbidden {
	return &UpdateRemoteProcessGroupInputPortRunStatusForbidden{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateRemoteProcessGroupInputPortRunStatusForbidden struct {
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusNotFound creates a UpdateRemoteProcessGroupInputPortRunStatusNotFound with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusNotFound() *UpdateRemoteProcessGroupInputPortRunStatusNotFound {
	return &UpdateRemoteProcessGroupInputPortRunStatusNotFound{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateRemoteProcessGroupInputPortRunStatusNotFound struct {
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupInputPortRunStatusConflict creates a UpdateRemoteProcessGroupInputPortRunStatusConflict with default headers values
func NewUpdateRemoteProcessGroupInputPortRunStatusConflict() *UpdateRemoteProcessGroupInputPortRunStatusConflict {
	return &UpdateRemoteProcessGroupInputPortRunStatusConflict{}
}

/* UpdateRemoteProcessGroupInputPortRunStatusConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRemoteProcessGroupInputPortRunStatusConflict struct {
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/input-ports/{port-id}/run-status][%d] updateRemoteProcessGroupInputPortRunStatusConflict ", 409)
}

func (o *UpdateRemoteProcessGroupInputPortRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
