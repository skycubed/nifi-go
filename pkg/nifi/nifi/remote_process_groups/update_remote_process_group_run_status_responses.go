// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateRemoteProcessGroupRunStatusReader is a Reader for the UpdateRemoteProcessGroupRunStatus structure.
type UpdateRemoteProcessGroupRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRemoteProcessGroupRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRemoteProcessGroupRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRemoteProcessGroupRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRemoteProcessGroupRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRemoteProcessGroupRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRemoteProcessGroupRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRemoteProcessGroupRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRemoteProcessGroupRunStatusOK creates a UpdateRemoteProcessGroupRunStatusOK with default headers values
func NewUpdateRemoteProcessGroupRunStatusOK() *UpdateRemoteProcessGroupRunStatusOK {
	return &UpdateRemoteProcessGroupRunStatusOK{}
}

/* UpdateRemoteProcessGroupRunStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateRemoteProcessGroupRunStatusOK struct {
	Payload *models.RemoteProcessGroupEntity
}

func (o *UpdateRemoteProcessGroupRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusOK  %+v", 200, o.Payload)
}
func (o *UpdateRemoteProcessGroupRunStatusOK) GetPayload() *models.RemoteProcessGroupEntity {
	return o.Payload
}

func (o *UpdateRemoteProcessGroupRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RemoteProcessGroupEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusBadRequest creates a UpdateRemoteProcessGroupRunStatusBadRequest with default headers values
func NewUpdateRemoteProcessGroupRunStatusBadRequest() *UpdateRemoteProcessGroupRunStatusBadRequest {
	return &UpdateRemoteProcessGroupRunStatusBadRequest{}
}

/* UpdateRemoteProcessGroupRunStatusBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRemoteProcessGroupRunStatusBadRequest struct {
}

func (o *UpdateRemoteProcessGroupRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusUnauthorized creates a UpdateRemoteProcessGroupRunStatusUnauthorized with default headers values
func NewUpdateRemoteProcessGroupRunStatusUnauthorized() *UpdateRemoteProcessGroupRunStatusUnauthorized {
	return &UpdateRemoteProcessGroupRunStatusUnauthorized{}
}

/* UpdateRemoteProcessGroupRunStatusUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateRemoteProcessGroupRunStatusUnauthorized struct {
}

func (o *UpdateRemoteProcessGroupRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusForbidden creates a UpdateRemoteProcessGroupRunStatusForbidden with default headers values
func NewUpdateRemoteProcessGroupRunStatusForbidden() *UpdateRemoteProcessGroupRunStatusForbidden {
	return &UpdateRemoteProcessGroupRunStatusForbidden{}
}

/* UpdateRemoteProcessGroupRunStatusForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateRemoteProcessGroupRunStatusForbidden struct {
}

func (o *UpdateRemoteProcessGroupRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusNotFound creates a UpdateRemoteProcessGroupRunStatusNotFound with default headers values
func NewUpdateRemoteProcessGroupRunStatusNotFound() *UpdateRemoteProcessGroupRunStatusNotFound {
	return &UpdateRemoteProcessGroupRunStatusNotFound{}
}

/* UpdateRemoteProcessGroupRunStatusNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateRemoteProcessGroupRunStatusNotFound struct {
}

func (o *UpdateRemoteProcessGroupRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusConflict creates a UpdateRemoteProcessGroupRunStatusConflict with default headers values
func NewUpdateRemoteProcessGroupRunStatusConflict() *UpdateRemoteProcessGroupRunStatusConflict {
	return &UpdateRemoteProcessGroupRunStatusConflict{}
}

/* UpdateRemoteProcessGroupRunStatusConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRemoteProcessGroupRunStatusConflict struct {
}

func (o *UpdateRemoteProcessGroupRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/run-status][%d] updateRemoteProcessGroupRunStatusConflict ", 409)
}

func (o *UpdateRemoteProcessGroupRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
