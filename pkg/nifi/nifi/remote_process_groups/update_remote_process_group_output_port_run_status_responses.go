// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateRemoteProcessGroupOutputPortRunStatusReader is a Reader for the UpdateRemoteProcessGroupOutputPortRunStatus structure.
type UpdateRemoteProcessGroupOutputPortRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRemoteProcessGroupOutputPortRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRemoteProcessGroupOutputPortRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusOK creates a UpdateRemoteProcessGroupOutputPortRunStatusOK with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusOK() *UpdateRemoteProcessGroupOutputPortRunStatusOK {
	return &UpdateRemoteProcessGroupOutputPortRunStatusOK{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateRemoteProcessGroupOutputPortRunStatusOK struct {
	Payload *models.RemoteProcessGroupPortEntity
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusOK  %+v", 200, o.Payload)
}
func (o *UpdateRemoteProcessGroupOutputPortRunStatusOK) GetPayload() *models.RemoteProcessGroupPortEntity {
	return o.Payload
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RemoteProcessGroupPortEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusBadRequest creates a UpdateRemoteProcessGroupOutputPortRunStatusBadRequest with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusBadRequest() *UpdateRemoteProcessGroupOutputPortRunStatusBadRequest {
	return &UpdateRemoteProcessGroupOutputPortRunStatusBadRequest{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRemoteProcessGroupOutputPortRunStatusBadRequest struct {
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusUnauthorized creates a UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusUnauthorized() *UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized {
	return &UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized struct {
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusForbidden creates a UpdateRemoteProcessGroupOutputPortRunStatusForbidden with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusForbidden() *UpdateRemoteProcessGroupOutputPortRunStatusForbidden {
	return &UpdateRemoteProcessGroupOutputPortRunStatusForbidden{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateRemoteProcessGroupOutputPortRunStatusForbidden struct {
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusNotFound creates a UpdateRemoteProcessGroupOutputPortRunStatusNotFound with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusNotFound() *UpdateRemoteProcessGroupOutputPortRunStatusNotFound {
	return &UpdateRemoteProcessGroupOutputPortRunStatusNotFound{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateRemoteProcessGroupOutputPortRunStatusNotFound struct {
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupOutputPortRunStatusConflict creates a UpdateRemoteProcessGroupOutputPortRunStatusConflict with default headers values
func NewUpdateRemoteProcessGroupOutputPortRunStatusConflict() *UpdateRemoteProcessGroupOutputPortRunStatusConflict {
	return &UpdateRemoteProcessGroupOutputPortRunStatusConflict{}
}

/* UpdateRemoteProcessGroupOutputPortRunStatusConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRemoteProcessGroupOutputPortRunStatusConflict struct {
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/{id}/output-ports/{port-id}/run-status][%d] updateRemoteProcessGroupOutputPortRunStatusConflict ", 409)
}

func (o *UpdateRemoteProcessGroupOutputPortRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
