// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// UpdateRemoteProcessGroupRunStatusesReader is a Reader for the UpdateRemoteProcessGroupRunStatuses structure.
type UpdateRemoteProcessGroupRunStatusesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRemoteProcessGroupRunStatusesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRemoteProcessGroupRunStatusesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRemoteProcessGroupRunStatusesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRemoteProcessGroupRunStatusesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRemoteProcessGroupRunStatusesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRemoteProcessGroupRunStatusesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRemoteProcessGroupRunStatusesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRemoteProcessGroupRunStatusesOK creates a UpdateRemoteProcessGroupRunStatusesOK with default headers values
func NewUpdateRemoteProcessGroupRunStatusesOK() *UpdateRemoteProcessGroupRunStatusesOK {
	return &UpdateRemoteProcessGroupRunStatusesOK{}
}

/*
UpdateRemoteProcessGroupRunStatusesOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateRemoteProcessGroupRunStatusesOK struct {
	Payload *models.RemoteProcessGroupEntity
}

// IsSuccess returns true when this update remote process group run statuses o k response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update remote process group run statuses o k response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses o k response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update remote process group run statuses o k response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses o k response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateRemoteProcessGroupRunStatusesOK) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesOK  %+v", 200, o.Payload)
}

func (o *UpdateRemoteProcessGroupRunStatusesOK) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesOK  %+v", 200, o.Payload)
}

func (o *UpdateRemoteProcessGroupRunStatusesOK) GetPayload() *models.RemoteProcessGroupEntity {
	return o.Payload
}

func (o *UpdateRemoteProcessGroupRunStatusesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RemoteProcessGroupEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusesBadRequest creates a UpdateRemoteProcessGroupRunStatusesBadRequest with default headers values
func NewUpdateRemoteProcessGroupRunStatusesBadRequest() *UpdateRemoteProcessGroupRunStatusesBadRequest {
	return &UpdateRemoteProcessGroupRunStatusesBadRequest{}
}

/*
UpdateRemoteProcessGroupRunStatusesBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRemoteProcessGroupRunStatusesBadRequest struct {
}

// IsSuccess returns true when this update remote process group run statuses bad request response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group run statuses bad request response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses bad request response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group run statuses bad request response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses bad request response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesBadRequest ", 400)
}

func (o *UpdateRemoteProcessGroupRunStatusesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusesUnauthorized creates a UpdateRemoteProcessGroupRunStatusesUnauthorized with default headers values
func NewUpdateRemoteProcessGroupRunStatusesUnauthorized() *UpdateRemoteProcessGroupRunStatusesUnauthorized {
	return &UpdateRemoteProcessGroupRunStatusesUnauthorized{}
}

/*
UpdateRemoteProcessGroupRunStatusesUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type UpdateRemoteProcessGroupRunStatusesUnauthorized struct {
}

// IsSuccess returns true when this update remote process group run statuses unauthorized response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group run statuses unauthorized response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses unauthorized response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group run statuses unauthorized response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses unauthorized response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesUnauthorized ", 401)
}

func (o *UpdateRemoteProcessGroupRunStatusesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusesForbidden creates a UpdateRemoteProcessGroupRunStatusesForbidden with default headers values
func NewUpdateRemoteProcessGroupRunStatusesForbidden() *UpdateRemoteProcessGroupRunStatusesForbidden {
	return &UpdateRemoteProcessGroupRunStatusesForbidden{}
}

/*
UpdateRemoteProcessGroupRunStatusesForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type UpdateRemoteProcessGroupRunStatusesForbidden struct {
}

// IsSuccess returns true when this update remote process group run statuses forbidden response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group run statuses forbidden response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses forbidden response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group run statuses forbidden response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses forbidden response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateRemoteProcessGroupRunStatusesForbidden) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupRunStatusesForbidden) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesForbidden ", 403)
}

func (o *UpdateRemoteProcessGroupRunStatusesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusesNotFound creates a UpdateRemoteProcessGroupRunStatusesNotFound with default headers values
func NewUpdateRemoteProcessGroupRunStatusesNotFound() *UpdateRemoteProcessGroupRunStatusesNotFound {
	return &UpdateRemoteProcessGroupRunStatusesNotFound{}
}

/*
UpdateRemoteProcessGroupRunStatusesNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type UpdateRemoteProcessGroupRunStatusesNotFound struct {
}

// IsSuccess returns true when this update remote process group run statuses not found response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group run statuses not found response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses not found response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group run statuses not found response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses not found response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateRemoteProcessGroupRunStatusesNotFound) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupRunStatusesNotFound) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesNotFound ", 404)
}

func (o *UpdateRemoteProcessGroupRunStatusesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRemoteProcessGroupRunStatusesConflict creates a UpdateRemoteProcessGroupRunStatusesConflict with default headers values
func NewUpdateRemoteProcessGroupRunStatusesConflict() *UpdateRemoteProcessGroupRunStatusesConflict {
	return &UpdateRemoteProcessGroupRunStatusesConflict{}
}

/*
UpdateRemoteProcessGroupRunStatusesConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRemoteProcessGroupRunStatusesConflict struct {
}

// IsSuccess returns true when this update remote process group run statuses conflict response has a 2xx status code
func (o *UpdateRemoteProcessGroupRunStatusesConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update remote process group run statuses conflict response has a 3xx status code
func (o *UpdateRemoteProcessGroupRunStatusesConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update remote process group run statuses conflict response has a 4xx status code
func (o *UpdateRemoteProcessGroupRunStatusesConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update remote process group run statuses conflict response has a 5xx status code
func (o *UpdateRemoteProcessGroupRunStatusesConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update remote process group run statuses conflict response a status code equal to that given
func (o *UpdateRemoteProcessGroupRunStatusesConflict) IsCode(code int) bool {
	return code == 409
}

func (o *UpdateRemoteProcessGroupRunStatusesConflict) Error() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesConflict ", 409)
}

func (o *UpdateRemoteProcessGroupRunStatusesConflict) String() string {
	return fmt.Sprintf("[PUT /remote-process-groups/process-group/{id}/run-status][%d] updateRemoteProcessGroupRunStatusesConflict ", 409)
}

func (o *UpdateRemoteProcessGroupRunStatusesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
