// Code generated by go-swagger; DO NOT EDIT.

package site_to_site

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetSiteToSiteDetailsReader is a Reader for the GetSiteToSiteDetails structure.
type GetSiteToSiteDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSiteToSiteDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSiteToSiteDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSiteToSiteDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSiteToSiteDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSiteToSiteDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetSiteToSiteDetailsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSiteToSiteDetailsOK creates a GetSiteToSiteDetailsOK with default headers values
func NewGetSiteToSiteDetailsOK() *GetSiteToSiteDetailsOK {
	return &GetSiteToSiteDetailsOK{}
}

/* GetSiteToSiteDetailsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSiteToSiteDetailsOK struct {
	Payload *models.ControllerEntity
}

func (o *GetSiteToSiteDetailsOK) Error() string {
	return fmt.Sprintf("[GET /site-to-site][%d] getSiteToSiteDetailsOK  %+v", 200, o.Payload)
}
func (o *GetSiteToSiteDetailsOK) GetPayload() *models.ControllerEntity {
	return o.Payload
}

func (o *GetSiteToSiteDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSiteToSiteDetailsBadRequest creates a GetSiteToSiteDetailsBadRequest with default headers values
func NewGetSiteToSiteDetailsBadRequest() *GetSiteToSiteDetailsBadRequest {
	return &GetSiteToSiteDetailsBadRequest{}
}

/* GetSiteToSiteDetailsBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetSiteToSiteDetailsBadRequest struct {
}

func (o *GetSiteToSiteDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /site-to-site][%d] getSiteToSiteDetailsBadRequest ", 400)
}

func (o *GetSiteToSiteDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteToSiteDetailsUnauthorized creates a GetSiteToSiteDetailsUnauthorized with default headers values
func NewGetSiteToSiteDetailsUnauthorized() *GetSiteToSiteDetailsUnauthorized {
	return &GetSiteToSiteDetailsUnauthorized{}
}

/* GetSiteToSiteDetailsUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetSiteToSiteDetailsUnauthorized struct {
}

func (o *GetSiteToSiteDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /site-to-site][%d] getSiteToSiteDetailsUnauthorized ", 401)
}

func (o *GetSiteToSiteDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteToSiteDetailsForbidden creates a GetSiteToSiteDetailsForbidden with default headers values
func NewGetSiteToSiteDetailsForbidden() *GetSiteToSiteDetailsForbidden {
	return &GetSiteToSiteDetailsForbidden{}
}

/* GetSiteToSiteDetailsForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetSiteToSiteDetailsForbidden struct {
}

func (o *GetSiteToSiteDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /site-to-site][%d] getSiteToSiteDetailsForbidden ", 403)
}

func (o *GetSiteToSiteDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSiteToSiteDetailsConflict creates a GetSiteToSiteDetailsConflict with default headers values
func NewGetSiteToSiteDetailsConflict() *GetSiteToSiteDetailsConflict {
	return &GetSiteToSiteDetailsConflict{}
}

/* GetSiteToSiteDetailsConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetSiteToSiteDetailsConflict struct {
}

func (o *GetSiteToSiteDetailsConflict) Error() string {
	return fmt.Sprintf("[GET /site-to-site][%d] getSiteToSiteDetailsConflict ", 409)
}

func (o *GetSiteToSiteDetailsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
