// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// GetUserGroupReader is a Reader for the GetUserGroup structure.
type GetUserGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetUserGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserGroupOK creates a GetUserGroupOK with default headers values
func NewGetUserGroupOK() *GetUserGroupOK {
	return &GetUserGroupOK{}
}

/*
GetUserGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserGroupOK struct {
	Payload *models.UserGroupEntity
}

// IsSuccess returns true when this get user group o k response has a 2xx status code
func (o *GetUserGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user group o k response has a 3xx status code
func (o *GetUserGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group o k response has a 4xx status code
func (o *GetUserGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user group o k response has a 5xx status code
func (o *GetUserGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group o k response a status code equal to that given
func (o *GetUserGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserGroupOK) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupOK  %+v", 200, o.Payload)
}

func (o *GetUserGroupOK) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupOK  %+v", 200, o.Payload)
}

func (o *GetUserGroupOK) GetPayload() *models.UserGroupEntity {
	return o.Payload
}

func (o *GetUserGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroupEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupBadRequest creates a GetUserGroupBadRequest with default headers values
func NewGetUserGroupBadRequest() *GetUserGroupBadRequest {
	return &GetUserGroupBadRequest{}
}

/*
GetUserGroupBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetUserGroupBadRequest struct {
}

// IsSuccess returns true when this get user group bad request response has a 2xx status code
func (o *GetUserGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group bad request response has a 3xx status code
func (o *GetUserGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group bad request response has a 4xx status code
func (o *GetUserGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group bad request response has a 5xx status code
func (o *GetUserGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group bad request response a status code equal to that given
func (o *GetUserGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupBadRequest ", 400)
}

func (o *GetUserGroupBadRequest) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupBadRequest ", 400)
}

func (o *GetUserGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupUnauthorized creates a GetUserGroupUnauthorized with default headers values
func NewGetUserGroupUnauthorized() *GetUserGroupUnauthorized {
	return &GetUserGroupUnauthorized{}
}

/*
GetUserGroupUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type GetUserGroupUnauthorized struct {
}

// IsSuccess returns true when this get user group unauthorized response has a 2xx status code
func (o *GetUserGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group unauthorized response has a 3xx status code
func (o *GetUserGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group unauthorized response has a 4xx status code
func (o *GetUserGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group unauthorized response has a 5xx status code
func (o *GetUserGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group unauthorized response a status code equal to that given
func (o *GetUserGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupUnauthorized ", 401)
}

func (o *GetUserGroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupUnauthorized ", 401)
}

func (o *GetUserGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupForbidden creates a GetUserGroupForbidden with default headers values
func NewGetUserGroupForbidden() *GetUserGroupForbidden {
	return &GetUserGroupForbidden{}
}

/*
GetUserGroupForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type GetUserGroupForbidden struct {
}

// IsSuccess returns true when this get user group forbidden response has a 2xx status code
func (o *GetUserGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group forbidden response has a 3xx status code
func (o *GetUserGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group forbidden response has a 4xx status code
func (o *GetUserGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group forbidden response has a 5xx status code
func (o *GetUserGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group forbidden response a status code equal to that given
func (o *GetUserGroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupForbidden ", 403)
}

func (o *GetUserGroupForbidden) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupForbidden ", 403)
}

func (o *GetUserGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupNotFound creates a GetUserGroupNotFound with default headers values
func NewGetUserGroupNotFound() *GetUserGroupNotFound {
	return &GetUserGroupNotFound{}
}

/*
GetUserGroupNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type GetUserGroupNotFound struct {
}

// IsSuccess returns true when this get user group not found response has a 2xx status code
func (o *GetUserGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group not found response has a 3xx status code
func (o *GetUserGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group not found response has a 4xx status code
func (o *GetUserGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group not found response has a 5xx status code
func (o *GetUserGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group not found response a status code equal to that given
func (o *GetUserGroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupNotFound ", 404)
}

func (o *GetUserGroupNotFound) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupNotFound ", 404)
}

func (o *GetUserGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupConflict creates a GetUserGroupConflict with default headers values
func NewGetUserGroupConflict() *GetUserGroupConflict {
	return &GetUserGroupConflict{}
}

/*
GetUserGroupConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetUserGroupConflict struct {
}

// IsSuccess returns true when this get user group conflict response has a 2xx status code
func (o *GetUserGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group conflict response has a 3xx status code
func (o *GetUserGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group conflict response has a 4xx status code
func (o *GetUserGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group conflict response has a 5xx status code
func (o *GetUserGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group conflict response a status code equal to that given
func (o *GetUserGroupConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetUserGroupConflict) Error() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupConflict ", 409)
}

func (o *GetUserGroupConflict) String() string {
	return fmt.Sprintf("[GET /tenants/user-groups/{id}][%d] getUserGroupConflict ", 409)
}

func (o *GetUserGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
