// Code generated by go-swagger; DO NOT EDIT.

package data_transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// ExtendInputPortTransactionTTLReader is a Reader for the ExtendInputPortTransactionTTL structure.
type ExtendInputPortTransactionTTLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExtendInputPortTransactionTTLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExtendInputPortTransactionTTLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExtendInputPortTransactionTTLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExtendInputPortTransactionTTLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExtendInputPortTransactionTTLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExtendInputPortTransactionTTLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExtendInputPortTransactionTTLConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExtendInputPortTransactionTTLOK creates a ExtendInputPortTransactionTTLOK with default headers values
func NewExtendInputPortTransactionTTLOK() *ExtendInputPortTransactionTTLOK {
	return &ExtendInputPortTransactionTTLOK{}
}

/*
ExtendInputPortTransactionTTLOK describes a response with status code 200, with default header values.

successful operation
*/
type ExtendInputPortTransactionTTLOK struct {
	Payload *models.TransactionResultEntity
}

// IsSuccess returns true when this extend input port transaction Ttl o k response has a 2xx status code
func (o *ExtendInputPortTransactionTTLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this extend input port transaction Ttl o k response has a 3xx status code
func (o *ExtendInputPortTransactionTTLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl o k response has a 4xx status code
func (o *ExtendInputPortTransactionTTLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this extend input port transaction Ttl o k response has a 5xx status code
func (o *ExtendInputPortTransactionTTLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl o k response a status code equal to that given
func (o *ExtendInputPortTransactionTTLOK) IsCode(code int) bool {
	return code == 200
}

func (o *ExtendInputPortTransactionTTLOK) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlOK  %+v", 200, o.Payload)
}

func (o *ExtendInputPortTransactionTTLOK) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlOK  %+v", 200, o.Payload)
}

func (o *ExtendInputPortTransactionTTLOK) GetPayload() *models.TransactionResultEntity {
	return o.Payload
}

func (o *ExtendInputPortTransactionTTLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TransactionResultEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtendInputPortTransactionTTLBadRequest creates a ExtendInputPortTransactionTTLBadRequest with default headers values
func NewExtendInputPortTransactionTTLBadRequest() *ExtendInputPortTransactionTTLBadRequest {
	return &ExtendInputPortTransactionTTLBadRequest{}
}

/*
ExtendInputPortTransactionTTLBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ExtendInputPortTransactionTTLBadRequest struct {
}

// IsSuccess returns true when this extend input port transaction Ttl bad request response has a 2xx status code
func (o *ExtendInputPortTransactionTTLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend input port transaction Ttl bad request response has a 3xx status code
func (o *ExtendInputPortTransactionTTLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl bad request response has a 4xx status code
func (o *ExtendInputPortTransactionTTLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend input port transaction Ttl bad request response has a 5xx status code
func (o *ExtendInputPortTransactionTTLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl bad request response a status code equal to that given
func (o *ExtendInputPortTransactionTTLBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ExtendInputPortTransactionTTLBadRequest) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlBadRequest ", 400)
}

func (o *ExtendInputPortTransactionTTLBadRequest) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlBadRequest ", 400)
}

func (o *ExtendInputPortTransactionTTLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendInputPortTransactionTTLUnauthorized creates a ExtendInputPortTransactionTTLUnauthorized with default headers values
func NewExtendInputPortTransactionTTLUnauthorized() *ExtendInputPortTransactionTTLUnauthorized {
	return &ExtendInputPortTransactionTTLUnauthorized{}
}

/*
ExtendInputPortTransactionTTLUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type ExtendInputPortTransactionTTLUnauthorized struct {
}

// IsSuccess returns true when this extend input port transaction Ttl unauthorized response has a 2xx status code
func (o *ExtendInputPortTransactionTTLUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend input port transaction Ttl unauthorized response has a 3xx status code
func (o *ExtendInputPortTransactionTTLUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl unauthorized response has a 4xx status code
func (o *ExtendInputPortTransactionTTLUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend input port transaction Ttl unauthorized response has a 5xx status code
func (o *ExtendInputPortTransactionTTLUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl unauthorized response a status code equal to that given
func (o *ExtendInputPortTransactionTTLUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ExtendInputPortTransactionTTLUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlUnauthorized ", 401)
}

func (o *ExtendInputPortTransactionTTLUnauthorized) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlUnauthorized ", 401)
}

func (o *ExtendInputPortTransactionTTLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendInputPortTransactionTTLForbidden creates a ExtendInputPortTransactionTTLForbidden with default headers values
func NewExtendInputPortTransactionTTLForbidden() *ExtendInputPortTransactionTTLForbidden {
	return &ExtendInputPortTransactionTTLForbidden{}
}

/*
ExtendInputPortTransactionTTLForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type ExtendInputPortTransactionTTLForbidden struct {
}

// IsSuccess returns true when this extend input port transaction Ttl forbidden response has a 2xx status code
func (o *ExtendInputPortTransactionTTLForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend input port transaction Ttl forbidden response has a 3xx status code
func (o *ExtendInputPortTransactionTTLForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl forbidden response has a 4xx status code
func (o *ExtendInputPortTransactionTTLForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend input port transaction Ttl forbidden response has a 5xx status code
func (o *ExtendInputPortTransactionTTLForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl forbidden response a status code equal to that given
func (o *ExtendInputPortTransactionTTLForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ExtendInputPortTransactionTTLForbidden) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlForbidden ", 403)
}

func (o *ExtendInputPortTransactionTTLForbidden) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlForbidden ", 403)
}

func (o *ExtendInputPortTransactionTTLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendInputPortTransactionTTLNotFound creates a ExtendInputPortTransactionTTLNotFound with default headers values
func NewExtendInputPortTransactionTTLNotFound() *ExtendInputPortTransactionTTLNotFound {
	return &ExtendInputPortTransactionTTLNotFound{}
}

/*
ExtendInputPortTransactionTTLNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type ExtendInputPortTransactionTTLNotFound struct {
}

// IsSuccess returns true when this extend input port transaction Ttl not found response has a 2xx status code
func (o *ExtendInputPortTransactionTTLNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend input port transaction Ttl not found response has a 3xx status code
func (o *ExtendInputPortTransactionTTLNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl not found response has a 4xx status code
func (o *ExtendInputPortTransactionTTLNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend input port transaction Ttl not found response has a 5xx status code
func (o *ExtendInputPortTransactionTTLNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl not found response a status code equal to that given
func (o *ExtendInputPortTransactionTTLNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ExtendInputPortTransactionTTLNotFound) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlNotFound ", 404)
}

func (o *ExtendInputPortTransactionTTLNotFound) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlNotFound ", 404)
}

func (o *ExtendInputPortTransactionTTLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendInputPortTransactionTTLConflict creates a ExtendInputPortTransactionTTLConflict with default headers values
func NewExtendInputPortTransactionTTLConflict() *ExtendInputPortTransactionTTLConflict {
	return &ExtendInputPortTransactionTTLConflict{}
}

/*
ExtendInputPortTransactionTTLConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ExtendInputPortTransactionTTLConflict struct {
}

// IsSuccess returns true when this extend input port transaction Ttl conflict response has a 2xx status code
func (o *ExtendInputPortTransactionTTLConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend input port transaction Ttl conflict response has a 3xx status code
func (o *ExtendInputPortTransactionTTLConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend input port transaction Ttl conflict response has a 4xx status code
func (o *ExtendInputPortTransactionTTLConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend input port transaction Ttl conflict response has a 5xx status code
func (o *ExtendInputPortTransactionTTLConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this extend input port transaction Ttl conflict response a status code equal to that given
func (o *ExtendInputPortTransactionTTLConflict) IsCode(code int) bool {
	return code == 409
}

func (o *ExtendInputPortTransactionTTLConflict) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlConflict ", 409)
}

func (o *ExtendInputPortTransactionTTLConflict) String() string {
	return fmt.Sprintf("[PUT /data-transfer/input-ports/{portId}/transactions/{transactionId}][%d] extendInputPortTransactionTtlConflict ", 409)
}

func (o *ExtendInputPortTransactionTTLConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
