// Code generated by go-swagger; DO NOT EDIT.

package data_transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skycubed/nifi-go/pkg/nifi/models"
)

// ExtendOutputPortTransactionTTLReader is a Reader for the ExtendOutputPortTransactionTTL structure.
type ExtendOutputPortTransactionTTLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExtendOutputPortTransactionTTLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExtendOutputPortTransactionTTLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExtendOutputPortTransactionTTLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExtendOutputPortTransactionTTLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExtendOutputPortTransactionTTLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExtendOutputPortTransactionTTLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExtendOutputPortTransactionTTLConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewExtendOutputPortTransactionTTLServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExtendOutputPortTransactionTTLOK creates a ExtendOutputPortTransactionTTLOK with default headers values
func NewExtendOutputPortTransactionTTLOK() *ExtendOutputPortTransactionTTLOK {
	return &ExtendOutputPortTransactionTTLOK{}
}

/* ExtendOutputPortTransactionTTLOK describes a response with status code 200, with default header values.

successful operation
*/
type ExtendOutputPortTransactionTTLOK struct {
	Payload *models.TransactionResultEntity
}

func (o *ExtendOutputPortTransactionTTLOK) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlOK  %+v", 200, o.Payload)
}
func (o *ExtendOutputPortTransactionTTLOK) GetPayload() *models.TransactionResultEntity {
	return o.Payload
}

func (o *ExtendOutputPortTransactionTTLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TransactionResultEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtendOutputPortTransactionTTLBadRequest creates a ExtendOutputPortTransactionTTLBadRequest with default headers values
func NewExtendOutputPortTransactionTTLBadRequest() *ExtendOutputPortTransactionTTLBadRequest {
	return &ExtendOutputPortTransactionTTLBadRequest{}
}

/* ExtendOutputPortTransactionTTLBadRequest describes a response with status code 400, with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ExtendOutputPortTransactionTTLBadRequest struct {
}

func (o *ExtendOutputPortTransactionTTLBadRequest) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlBadRequest ", 400)
}

func (o *ExtendOutputPortTransactionTTLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendOutputPortTransactionTTLUnauthorized creates a ExtendOutputPortTransactionTTLUnauthorized with default headers values
func NewExtendOutputPortTransactionTTLUnauthorized() *ExtendOutputPortTransactionTTLUnauthorized {
	return &ExtendOutputPortTransactionTTLUnauthorized{}
}

/* ExtendOutputPortTransactionTTLUnauthorized describes a response with status code 401, with default header values.

Client could not be authenticated.
*/
type ExtendOutputPortTransactionTTLUnauthorized struct {
}

func (o *ExtendOutputPortTransactionTTLUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlUnauthorized ", 401)
}

func (o *ExtendOutputPortTransactionTTLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendOutputPortTransactionTTLForbidden creates a ExtendOutputPortTransactionTTLForbidden with default headers values
func NewExtendOutputPortTransactionTTLForbidden() *ExtendOutputPortTransactionTTLForbidden {
	return &ExtendOutputPortTransactionTTLForbidden{}
}

/* ExtendOutputPortTransactionTTLForbidden describes a response with status code 403, with default header values.

Client is not authorized to make this request.
*/
type ExtendOutputPortTransactionTTLForbidden struct {
}

func (o *ExtendOutputPortTransactionTTLForbidden) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlForbidden ", 403)
}

func (o *ExtendOutputPortTransactionTTLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendOutputPortTransactionTTLNotFound creates a ExtendOutputPortTransactionTTLNotFound with default headers values
func NewExtendOutputPortTransactionTTLNotFound() *ExtendOutputPortTransactionTTLNotFound {
	return &ExtendOutputPortTransactionTTLNotFound{}
}

/* ExtendOutputPortTransactionTTLNotFound describes a response with status code 404, with default header values.

The specified resource could not be found.
*/
type ExtendOutputPortTransactionTTLNotFound struct {
}

func (o *ExtendOutputPortTransactionTTLNotFound) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlNotFound ", 404)
}

func (o *ExtendOutputPortTransactionTTLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendOutputPortTransactionTTLConflict creates a ExtendOutputPortTransactionTTLConflict with default headers values
func NewExtendOutputPortTransactionTTLConflict() *ExtendOutputPortTransactionTTLConflict {
	return &ExtendOutputPortTransactionTTLConflict{}
}

/* ExtendOutputPortTransactionTTLConflict describes a response with status code 409, with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ExtendOutputPortTransactionTTLConflict struct {
}

func (o *ExtendOutputPortTransactionTTLConflict) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlConflict ", 409)
}

func (o *ExtendOutputPortTransactionTTLConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtendOutputPortTransactionTTLServiceUnavailable creates a ExtendOutputPortTransactionTTLServiceUnavailable with default headers values
func NewExtendOutputPortTransactionTTLServiceUnavailable() *ExtendOutputPortTransactionTTLServiceUnavailable {
	return &ExtendOutputPortTransactionTTLServiceUnavailable{}
}

/* ExtendOutputPortTransactionTTLServiceUnavailable describes a response with status code 503, with default header values.

NiFi instance is not ready for serving request, or temporarily overloaded. Retrying the same request later may be successful
*/
type ExtendOutputPortTransactionTTLServiceUnavailable struct {
}

func (o *ExtendOutputPortTransactionTTLServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /data-transfer/output-ports/{portId}/transactions/{transactionId}][%d] extendOutputPortTransactionTtlServiceUnavailable ", 503)
}

func (o *ExtendOutputPortTransactionTTLServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
